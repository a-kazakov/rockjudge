(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var _main = require("admin/main");

ReactDOM.render(React.createElement(_main.Admin, window.page_props), document.getElementById("content"));

},{"admin/main":9}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DisciplineResults = exports.DisciplineResultsButtons = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _printable = require("ui/printable");

var _docx = require("common/docx");

var _discipline_results = require("./rosfarr/discipline_results");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DisciplineResultsButtons = exports.DisciplineResultsButtons = function (_React$Component) {
    _inherits(DisciplineResultsButtons, _React$Component);

    function DisciplineResultsButtons() {
        _classCallCheck(this, DisciplineResultsButtons);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineResultsButtons).apply(this, arguments));
    }

    _createClass(DisciplineResultsButtons, [{
        key: "signal",
        value: function signal(message) {
            var _this2 = this;

            return function () {
                return _this2.props.onSignal(message);
            }.bind(this);
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "button",
                    { className: "btn btn-primary", onClick: this.signal("docx") },
                    "DOCX"
                )
            );
        }
    }]);

    return DisciplineResultsButtons;
}(React.Component);

var DisciplineResults = exports.DisciplineResults = function (_React$Component2) {
    _inherits(DisciplineResults, _React$Component2);

    _createClass(DisciplineResults, null, [{
        key: "defaultProps",
        get: function get() {
            return {
                renderer: "page"
            };
        }

        // Initialization

    }]);

    function DisciplineResults(props) {
        _classCallCheck(this, DisciplineResults);

        var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineResults).call(this, props));

        _this3.state = {
            loaded: false
        };
        _this3.runs_loaded = false;
        return _this3;
    }

    _createClass(DisciplineResults, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            var _this4 = this;

            this.storage = _storage.storage.getDomain("discipline_results_" + this.props.discipline_id);
            this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
            this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadState.bind(this));
            this.results_change_listener = _message_dispatcher.message_dispatcher.addListener("tour_results_changed reload_data", function (message) {
                if (!message) {
                    this.loadResults();
                    return;
                }
                var tour_storage = this.storage.get("Tour").by_id(message["tour_id"]);
                if (!tour_storage) {
                    return;
                }
                if (tour_storage.discipline.id === this.props.discipline_id) {
                    this.loadResults();
                }
            }.bind(this));
            this.loadData();
            this.loadResults();
            if (this.props.autoDocx) {
                (function () {
                    var interval_id = setInterval(function () {
                        if (_this4.refs.printable) {
                            clearInterval(interval_id);
                            _this4.createDocx(_this4.props.autoDocx.filename);
                            _this4.props.autoDocx.callback(_this4.props.autoDocx.filename);
                        }
                    }, 500);
                })();
            }
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
            _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
            _message_dispatcher.message_dispatcher.removeListener(this.results_change_listener);
            _storage.storage.delDomain("discipline_results_" + this.props.discipline_id);
        }
    }, {
        key: "reloadState",
        value: function reloadState() {
            if (!this.state.discipline_results) {
                return;
            }
            if (!this.runs_loaded) {
                return;
            }
            var storage_runs = this.storage.get("Run");
            var results = this.state.discipline_results;
            var new_state = [];
            var SCHEMA = {
                tour: {},
                participant: {
                    sportsmen: {},
                    club: {}
                }
            };
            for (var i = 0; i < results.length; ++i) {
                new_state.push({
                    place: results[i].place,
                    run: storage_runs.by_id(results[i].run_id).serialize(SCHEMA)
                });
            }
            this.setState({
                loaded: true,
                table: new_state,
                discipline: this.storage.get("Discipline").by_id(this.props.discipline_id).serialize({
                    competition: {}
                })
            });
        }
    }, {
        key: "loadResults",
        value: function loadResults() {
            var _this5 = this;

            (0, _api.Api)("discipline.get_results", {
                discipline_id: this.props.discipline_id
            }).onSuccess(function (response) {
                _this5.setState({
                    discipline_results: response
                });
                _this5.reloadState();
            }).send();
        }
    }, {
        key: "loadData",
        value: function loadData() {
            var _this6 = this;

            (0, _api.Api)("discipline.get", {
                discipline_id: this.props.discipline_id,
                children: {
                    competition: {},
                    tours: {
                        runs: {
                            participant: {
                                club: {}
                            }
                        }
                    }
                }
            }).addToDB("Discipline", this.props.discipline_id, this.storage).onSuccess(function () {
                _this6.runs_loaded = true;
                _this6.reloadState(_this6);
            }).send();
        }

        // Listeners

    }, {
        key: "onSignal",
        value: function onSignal(message) {
            switch (message) {
                case "docx":
                    this.createDocx();
                    break;
                default:
                    console.log("Unknown message:", message);
            }
        }

        // Rendering

    }, {
        key: "renderBody",
        value: function renderBody() {
            switch (this.props.renderer) {
                case "presenter":
                    return React.createElement(_discipline_results.DisciplineResultsPresenterTable, { table: this.state.table, ref: "main_table" });
                case "screen_operator":
                    return React.createElement(_discipline_results.DisciplineResultsScreenOperatorTable, {
                        table: this.state.table,
                        selectedPlace: this.props.selectedPlace,
                        onPlaceSelect: this.props.onPlaceSelect,
                        ref: "main_table" });
                case "page":
                    return React.createElement(_printable.Printable, {
                        ref: "printable",
                        header: this.state.discipline.competition.name + ", " + this.state.discipline.competition.date,
                        title1: (0, _loader._)("admin.headers.discipline_results"),
                        title3: this.state.discipline.name,
                        body: React.createElement(_discipline_results.DisciplineResultsTable, { table: this.state.table }) });
                case "table":
                    return React.createElement(_discipline_results.DisciplineResultsTable, { table: this.state.table, ref: "main_table" });
                default:
            }
        }
    }, {
        key: "render",
        value: function render() {
            // eslint-disable-line react/sort-comp
            if (!this.state.loaded) {
                return React.createElement(
                    "div",
                    { className: "discipline-results" },
                    React.createElement(_components.Loader, null)
                );
            }
            return React.createElement(
                "div",
                { className: "discipline-results" },
                this.renderBody()
            );
        }
    }, {
        key: "createDocx",
        value: function createDocx() {
            var filename = arguments.length <= 0 || arguments[0] === undefined ? "discipline-results.docx" : arguments[0];

            (0, _docx.Docx)(filename).setHeader(this.state.discipline.competition.name + ", " + this.state.discipline.competition.date).setTitle1((0, _loader._)("admin.headers.discipline_results")).setTitle3(this.state.discipline.name).setBody(this.refs.printable.fetchPrintableData()).addStyle(".tour-name", "background", "#ddd").addStyle(".bordered-table .sportsmen td, .bordered-table .sportsmen th", "border", "none").addStyle(".bordered-table .sportsmen td, .bordered-table .sportsmen th", "padding", "0").addStyle(".sportsmen", "width", "100%").save();
        }
    }]);

    return DisciplineResults;
}(React.Component);

},{"./rosfarr/discipline_results":5,"common/docx":23,"l10n/loader":25,"server/api":28,"server/message_dispatcher":29,"server/storage":30,"ui/components":32,"ui/printable":34}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.HeatsBody = exports.HeatsButtons = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _printable = require("ui/printable");

var _docx = require("common/docx");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HeatsButtons = exports.HeatsButtons = function (_React$Component) {
    _inherits(HeatsButtons, _React$Component);

    function HeatsButtons() {
        _classCallCheck(this, HeatsButtons);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(HeatsButtons).apply(this, arguments));
    }

    _createClass(HeatsButtons, [{
        key: "signal",
        value: function signal(message) {
            var _this2 = this;

            return function () {
                return _this2.props.onSignal(message);
            }.bind(this);
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "button",
                    { className: "btn btn-primary", onClick: this.signal("docx") },
                    "DOCX"
                )
            );
        }
    }]);

    return HeatsButtons;
}(React.Component);

var HeatsBody = exports.HeatsBody = function (_React$Component2) {
    _inherits(HeatsBody, _React$Component2);

    function HeatsBody(props) {
        _classCallCheck(this, HeatsBody);

        var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(HeatsBody).call(this, props));

        _this3.state = {
            tour: null
        };
        return _this3;
    }

    _createClass(HeatsBody, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            var _this4 = this;

            this.storage = _storage.storage.getDomain("heats_" + this.props.tour_id);
            this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
            this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
            this.loadData();
            if (this.props.autoDocx) {
                (function () {
                    var interval_id = setInterval(function () {
                        if (_this4.refs.printable) {
                            clearInterval(interval_id);
                            _this4.createDocx(_this4.props.autoDocx.filename);
                            _this4.props.autoDocx.callback(_this4.props.autoDocx.filename);
                        }
                    }, 500);
                })();
            }
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
            _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
            _storage.storage.delDomain("heats_" + this.props.tour_id);
        }
    }, {
        key: "reloadFromStorage",
        value: function reloadFromStorage() {
            var SCHEMA = {
                discipline: {
                    competition: {}
                },
                runs: {
                    participant: {
                        club: {}
                    }
                }
            };
            var serialized = this.storage.get("Tour").by_id(this.props.tour_id).serialize(SCHEMA);
            this.setState({
                tour: serialized
            });
        }
    }, {
        key: "loadData",
        value: function loadData() {
            (0, _api.Api)("tour.get", {
                tour_id: this.props.tour_id,
                children: {
                    discipline: {
                        competition: {}
                    },
                    runs: {
                        participant: {
                            club: {}
                        }
                    }
                }
            }).addToDB("Tour", this.props.tour_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
        }
    }, {
        key: "onSignal",
        value: function onSignal(message) {
            switch (message) {
                case "docx":
                    this.createDocx();
                    break;
                default:
                    console.log("Unknown message:", message);
            }
        }
    }, {
        key: "renderHeatHeader",
        value: function renderHeatHeader(prev_row, next_row) {
            var need_render = typeof prev_row === "undefined" || prev_row.heat !== next_row.heat;
            if (!need_render) {
                return null;
            }
            return React.createElement(
                "tr",
                { key: "H" + next_row.heat },
                React.createElement(
                    "th",
                    { className: "heat-number", colSpan: "3" },
                    React.createElement(
                        "p",
                        null,
                        (0, _loader._)("global.phrases.heat_n", next_row.heat)
                    )
                )
            );
        }
    }, {
        key: "renderHeatRow",
        value: function renderHeatRow(row) {
            return React.createElement(
                "tr",
                { key: "R" + row.id },
                React.createElement(
                    "td",
                    { className: "w-8" },
                    React.createElement(
                        "p",
                        { className: "text-center" },
                        row.participant.number
                    )
                ),
                React.createElement(
                    "td",
                    null,
                    React.createElement(
                        "p",
                        null,
                        row.participant.name
                    )
                ),
                React.createElement(
                    "td",
                    null,
                    React.createElement(
                        "p",
                        null,
                        row.participant.club.name
                    )
                )
            );
        }
    }, {
        key: "renderHeatRows",
        value: function renderHeatRows() {
            var result = [];
            var runs = this.state.tour.runs;
            for (var i = 0; i < runs.length; ++i) {
                var header = this.renderHeatHeader(runs[i - 1], runs[i]);
                header && result.push(header);
                result.push(this.renderHeatRow(runs[i]));
            }
            return result;
        }
    }, {
        key: "render",
        value: function render() {
            // eslint-disable-line react/sort-comp
            if (this.state.tour === null) {
                return React.createElement(_components.Loader, null);
            }
            var body = React.createElement(
                "div",
                { className: "tour-heats" },
                React.createElement(
                    "table",
                    { className: "bordered-table" },
                    React.createElement(
                        "thead",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { className: "w-8" },
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("judging.labels.number")
                                )
                            ),
                            React.createElement(
                                "th",
                                null,
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("judging.labels.participant_name")
                                )
                            ),
                            React.createElement(
                                "th",
                                null,
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("judging.labels.club")
                                )
                            )
                        )
                    ),
                    React.createElement(
                        "tbody",
                        null,
                        this.renderHeatRows()
                    )
                )
            );
            return React.createElement(_printable.Printable, {
                header: this.state.tour.discipline.competition.name + ", " + this.state.tour.discipline.competition.date,
                title1: (0, _loader._)("admin.headers.tour_heats"),
                title2: this.state.tour.discipline.name,
                title3: this.state.tour.name,
                body: body,
                ref: "printable" });
        }
    }, {
        key: "createDocx",
        value: function createDocx() {
            var filename = arguments.length <= 0 || arguments[0] === undefined ? "tour-heats.docx" : arguments[0];

            (0, _docx.Docx)(filename).setHeader(this.state.tour.discipline.competition.name + ", " + this.state.tour.discipline.competition.date).setTitle1((0, _loader._)("admin.headers.tour_heats")).setTitle2(this.state.tour.discipline.name).setTitle3(this.state.tour.name).setBody(this.refs.printable.fetchPrintableData()).addStyle(".heat-number", "background", "#ccc").addStyle(".heat-number", "text-align", "left").addStyle("td, th", "font-size", "12pt").save();
        }
    }]);

    return HeatsBody;
}(React.Component);

},{"common/docx":23,"l10n/loader":25,"server/api":28,"server/message_dispatcher":29,"server/storage":30,"ui/components":32,"ui/printable":34}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Judging = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _heats = require("./heats");

var _tour_admin = require("./tour_admin");

var _tour_results = require("./tour_results");

var _discipline_results = require("./discipline_results");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Judging = exports.Judging = function (_React$Component) {
    _inherits(Judging, _React$Component);

    function Judging(props) {
        _classCallCheck(this, Judging);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Judging).call(this, props));

        _this.state = {
            active_tour_id: _this.getTourIdFromHash(),
            page: _this.getPageFromHash()
        };
        return _this;
    }

    _createClass(Judging, [{
        key: "switchActiveTour",
        value: function switchActiveTour(new_tour_id) {
            this.setState({
                active_tour_id: new_tour_id,
                page: this.getActiveTour(new_tour_id).finalized ? "results-1" : "tour-admin"
            });
            window.location.hash = "#judging/" + new_tour_id;
        }
    }, {
        key: "switchPage",
        value: function switchPage(new_page, event) {
            event.preventDefault();
            this.setState({
                page: new_page
            });
            window.location.hash = "#judging/" + this.state.active_tour_id + "/" + new_page;
        }
    }, {
        key: "getTourIdFromHash",
        value: function getTourIdFromHash() {
            var chunks = window.location.hash.substr(1).split("/");
            if (chunks[1] && /^\d+$/.test(chunks[1])) {
                return parseInt(chunks[1]);
            }
            return null;
        }
    }, {
        key: "getPageFromHash",
        value: function getPageFromHash() {
            var chunks = window.location.hash.substr(1).split("/");
            if (chunks[2]) {
                return chunks[2];
            }
            var active_tour = this.getActiveTour(this.getTourIdFromHash());
            return active_tour && active_tour.finalized ? "results-1" : "tour-admin";
        }
    }, {
        key: "getActiveTour",
        value: function getActiveTour() {
            var active_tour_id = arguments.length <= 0 || arguments[0] === undefined ? this.state.active_tour_id : arguments[0];

            if (active_tour_id === null) {
                return null;
            }
            var result = null;
            this.props.disciplines.forEach(function (discipline) {
                discipline.tours.forEach(function (tour) {
                    if (tour.id === active_tour_id) {
                        result = tour;
                    }
                });
            });
            return result;
        }
    }, {
        key: "getActiveDiscipline",
        value: function getActiveDiscipline() {
            var _this2 = this;

            var result = null;
            this.props.disciplines.forEach(function (discipline) {
                discipline.tours.forEach(function (tour) {
                    if (tour.id === _this2.state.active_tour_id) {
                        result = discipline;
                    }
                });
            });
            return result;
        }
    }, {
        key: "passSignal",
        value: function passSignal(message) {
            if (this.refs.active_body) {
                this.refs.active_body.onSignal(message);
            }
        }
    }, {
        key: "renderButtons",
        value: function renderButtons() {
            if (this.state.active_tour_id === null) {
                return null;
            }
            var props = {
                tour: this.getActiveTour(),
                onSignal: this.passSignal.bind(this),
                key: this.state.active_tour_id
            };
            switch (this.state.page) {
                case "tour-admin":
                    return React.createElement(_tour_admin.TourAdminButtons, props);
                case "heats":
                    return React.createElement(_heats.HeatsButtons, props);
                case "results-1":
                case "results-2":
                case "results-3":
                    return React.createElement(_tour_results.TourResultsButtons, props);
                case "discipline-results":
                    return React.createElement(_discipline_results.DisciplineResultsButtons, props);
                default:
                    console.log("Unknown page:", this.state.page);
            }
        }
    }, {
        key: "renderBody",
        value: function renderBody() {
            var _this3 = this;

            if (this.state.active_tour_id === null) {
                return null;
            }
            var props = {
                tour_id: this.state.active_tour_id,
                ref: "active_body",
                switchPage: function switchPage(page) {
                    return _this3.setState({ page: page });
                },
                key: this.state.active_tour_id
            };
            switch (this.state.page) {
                case "tour-admin":
                    return React.createElement(_tour_admin.TourAdminBody, props);
                case "heats":
                    return React.createElement(_heats.HeatsBody, props);
                case "results-1":
                    return React.createElement(_tour_results.TourResultsBody, _extends({ printable: true, verbosity: "1" }, props));
                case "results-2":
                    return React.createElement(_tour_results.TourResultsBody, _extends({ printable: true, verbosity: "2" }, props));
                case "results-3":
                    return React.createElement(_tour_results.TourResultsBody, _extends({ printable: true, verbosity: "3" }, props));
                case "discipline-results":
                    return React.createElement(_discipline_results.DisciplineResults, {
                        discipline_id: this.getActiveDiscipline().id,
                        ref: "active_body",
                        renderer: "page" });
                default:
                    console.log("Unknown page:", this.state.page);
            }
        }
    }, {
        key: "renderHeader",
        value: function renderHeader() {
            var active_tour = this.getActiveTour();
            if (!active_tour) {
                return null;
            }
            return React.createElement(
                "header",
                { className: "app-header with-tabs" },
                React.createElement(
                    "div",
                    { className: "controls" },
                    this.renderButtons()
                ),
                React.createElement(
                    "h1",
                    null,
                    this.getActiveDiscipline().name
                ),
                React.createElement(
                    "h2",
                    null,
                    active_tour.name
                ),
                React.createElement("div", { className: "clearfix" }),
                React.createElement(
                    "ul",
                    { className: "pull-right nav nav-tabs" },
                    React.createElement(
                        "li",
                        { className: this.state.page === "tour-admin" ? "active" : "" },
                        React.createElement(
                            "a",
                            { href: "#", onClick: this.switchPage.bind(this, "tour-admin") },
                            (0, _loader._)("admin.judging-tabs.tour-admin")
                        )
                    ),
                    React.createElement(
                        "li",
                        { className: this.state.page === "heats" ? "active" : "" },
                        React.createElement(
                            "a",
                            { href: "#", onClick: this.switchPage.bind(this, "heats") },
                            (0, _loader._)("admin.judging-tabs.heats")
                        )
                    ),
                    React.createElement(
                        "li",
                        { className: this.state.page === "results-1" ? "active" : "" },
                        React.createElement(
                            "a",
                            { href: "#", onClick: this.switchPage.bind(this, "results-1") },
                            (0, _loader._)("admin.judging-tabs.results-1")
                        )
                    ),
                    React.createElement(
                        "li",
                        { className: this.state.page === "results-2" ? "active" : "" },
                        React.createElement(
                            "a",
                            { href: "#", onClick: this.switchPage.bind(this, "results-2") },
                            (0, _loader._)("admin.judging-tabs.results-2")
                        )
                    ),
                    React.createElement(
                        "li",
                        { className: this.state.page === "results-3" ? "active" : "" },
                        React.createElement(
                            "a",
                            { href: "#", onClick: this.switchPage.bind(this, "results-3") },
                            (0, _loader._)("admin.judging-tabs.results-3")
                        )
                    ),
                    React.createElement(
                        "li",
                        { className: this.state.page === "discipline-results" ? "active" : "" },
                        React.createElement(
                            "a",
                            { href: "#", onClick: this.switchPage.bind(this, "discipline-results") },
                            (0, _loader._)("admin.judging-tabs.discipline-results")
                        )
                    )
                ),
                React.createElement("div", { className: "clearfix" })
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "app" },
                React.createElement(
                    "div",
                    { className: "side-menu" },
                    React.createElement(CompetitionSchema, {
                        updateTour: this.switchActiveTour.bind(this),
                        current_tour_id: this.state.active_tour_id,
                        competition_plan: this.props.competition_plan,
                        disciplines: this.props.disciplines })
                ),
                React.createElement(
                    "div",
                    { className: "app-content" },
                    this.renderHeader(),
                    React.createElement(
                        "div",
                        { className: "app-body" },
                        this.renderBody()
                    )
                )
            );
        }
    }]);

    return Judging;
}(React.Component);

var CompetitionSchema = function (_React$Component2) {
    _inherits(CompetitionSchema, _React$Component2);

    function CompetitionSchema(props) {
        _classCallCheck(this, CompetitionSchema);

        var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(CompetitionSchema).call(this, props));

        _this4.state = {
            sort_by_plan: !!parseInt(sessionStorage["sort_by_plan"])
        };
        return _this4;
    }

    _createClass(CompetitionSchema, [{
        key: "activateTour",
        value: function activateTour(tour) {
            this.props.updateTour(tour.id);
        }
    }, {
        key: "switchToPlan",
        value: function switchToPlan() {
            this.setState({
                sort_by_plan: true
            });
            sessionStorage["sort_by_plan"] = "1";
        }
    }, {
        key: "switchToDisciplines",
        value: function switchToDisciplines() {
            this.setState({
                sort_by_plan: false
            });
            sessionStorage["sort_by_plan"] = "0";
        }
    }, {
        key: "renderTour",
        value: function renderTour(tour) {
            var discipline_name = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];

            var className = "level-2" + (tour.finalized ? " grey" : "") + (tour.id === this.props.current_tour_id ? " active" : "");
            return React.createElement(
                "div",
                { className: className, onClick: this.activateTour.bind(this, tour), key: tour.id },
                discipline_name ? React.createElement(
                    "small",
                    null,
                    React.createElement(
                        "strong",
                        null,
                        discipline_name
                    ),
                    React.createElement("br", null)
                ) : null,
                tour.name
            );
        }
    }, {
        key: "renderDiscipline",
        value: function renderDiscipline(ic) {
            var _this5 = this;

            return React.createElement(
                "details",
                { className: "block", key: ic.id, open: !!parseInt(sessionStorage.getItem("D_J_" + ic.id)) },
                React.createElement(
                    "summary",
                    { className: "level-1", onClick: function onClick(e) {
                            return sessionStorage.setItem("D_J_" + ic.id, e.target.parentNode.open ? 0 : 1);
                        } },
                    ic.name
                ),
                ic.tours.map(function (tour) {
                    return _this5.renderTour(tour);
                })
            );
        }
    }, {
        key: "renderByDiscipline",
        value: function renderByDiscipline() {
            var data = this.props.disciplines.map(function (ic) {
                return this.renderDiscipline(ic);
            }.bind(this));
            return React.createElement(
                "div",
                { className: "noselect" },
                data
            );
        }
    }, {
        key: "renderByPlan",
        value: function renderByPlan() {
            var _this6 = this;

            var tours = {};
            this.props.disciplines.forEach(function (discipline) {
                return discipline.tours.forEach(function (tour) {
                    return tours[tour.id] = {
                        tour: tour,
                        discipline_name: discipline.name
                    };
                });
            });
            var result = this.props.competition_plan.filter(function (item) {
                return item.tour_id !== null;
            }).map(function (item) {
                return _this6.renderTour(tours[item.tour_id].tour, tours[item.tour_id].discipline_name);
            });
            return React.createElement(
                "div",
                null,
                result
            );
        }
    }, {
        key: "renderList",
        value: function renderList() {
            return React.createElement(
                "div",
                null,
                this.state.sort_by_plan ? this.renderByPlan() : this.renderByDiscipline()
            );
        }
    }, {
        key: "renderButton",
        value: function renderButton() {
            return this.state.sort_by_plan ? React.createElement(
                "button",
                { className: "btn btn-default btn-sm full-width", onClick: this.switchToDisciplines.bind(this) },
                (0, _loader._)("admin.buttons.switch_to_disciplines")
            ) : React.createElement(
                "button",
                { className: "btn btn-default btn-sm full-width", onClick: this.switchToPlan.bind(this) },
                (0, _loader._)("admin.buttons.switch_to_plan")
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "competition-schema" },
                this.renderList(),
                this.renderButton()
            );
        }
    }]);

    return CompetitionSchema;
}(React.Component);

},{"./discipline_results":2,"./heats":3,"./tour_admin":7,"./tour_results":8,"l10n/loader":25}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DisciplineResultsScreenOperatorTable = exports.DisciplineResultsPresenterTable = exports.DisciplineResultsTable = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _tablet_components = require("ui/tablet_components");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function __() {
    var args = [];
    for (var idx = 1; idx < arguments.length; ++idx) {
        args.push(arguments[idx]);
    }
    return _loader._.apply(undefined, ["scoring_systems.rosfarr." + arguments[0]].concat(args));
}

var DisciplineResultsTable = exports.DisciplineResultsTable = function (_React$Component) {
    _inherits(DisciplineResultsTable, _React$Component);

    function DisciplineResultsTable() {
        _classCallCheck(this, DisciplineResultsTable);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineResultsTable).apply(this, arguments));
    }

    _createClass(DisciplineResultsTable, [{
        key: "renderRowHeader",
        value: function renderRowHeader(prev_row, next_row) {
            var need_render = typeof prev_row === "undefined" || prev_row.run.tour.id !== next_row.run.tour.id;
            if (!need_render) {
                return null;
            }
            return React.createElement(
                "tr",
                { key: "H" + next_row.run.id },
                React.createElement(
                    "th",
                    { className: "tour-name", colSpan: "6" },
                    React.createElement(
                        "p",
                        { className: "text-center" },
                        next_row.run.tour.name
                    )
                )
            );
        }
    }, {
        key: "renderRow",
        value: function renderRow(row) {
            var p = row.run.participant;
            return React.createElement(
                "tr",
                { key: "R" + row.run.id },
                React.createElement(
                    "td",
                    { className: "w-8 place" },
                    React.createElement(
                        "p",
                        { className: "text-center" },
                        row.place === null ? "" : row.place
                    )
                ),
                React.createElement(
                    "td",
                    { className: "w-8 number" },
                    React.createElement(
                        "p",
                        { className: "text-center" },
                        p.number
                    )
                ),
                React.createElement(
                    "td",
                    { className: "w-36", colSpan: "2" },
                    React.createElement(
                        "table",
                        { className: "sportsmen" },
                        React.createElement(
                            "tbody",
                            null,
                            p.formation_name ? React.createElement(
                                "tr",
                                null,
                                React.createElement(
                                    "th",
                                    { colSpan: "2" },
                                    React.createElement(
                                        "p",
                                        { className: "text-left" },
                                        p.formation_name
                                    )
                                )
                            ) : null,
                            p.sportsmen.map(function (s, idx) {
                                return React.createElement(
                                    "tr",
                                    { key: idx },
                                    React.createElement(
                                        "td",
                                        { className: "w-75" },
                                        React.createElement(
                                            "p",
                                            null,
                                            s.last_name + " " + s.first_name,
                                            s.substitute ? React.createElement(
                                                "i",
                                                null,
                                                " (",
                                                (0, _loader._)("admin.labels.sub"),
                                                ".)"
                                            ) : null
                                        )
                                    ),
                                    React.createElement(
                                        "td",
                                        { className: "w-25" },
                                        React.createElement(
                                            "p",
                                            { className: "text-center" },
                                            s.year_of_birth
                                        )
                                    )
                                );
                            })
                        )
                    )
                ),
                React.createElement(
                    "td",
                    { className: "w-24 club" },
                    React.createElement(
                        "p",
                        null,
                        p.club.name
                    )
                ),
                React.createElement(
                    "td",
                    { className: "w-24 coaches" },
                    React.createElement(
                        "p",
                        null,
                        p.coaches.split(",").map(function (c) {
                            return [c.trim(), React.createElement("br", { key: "X" })];
                        })
                    )
                )
            );
        }
    }, {
        key: "renderRows",
        value: function renderRows() {
            var result = [];
            var table = this.props.table;
            for (var i = 0; i < table.length; ++i) {
                var header = this.renderRowHeader(table[i - 1], table[i]);
                header && result.push(header);
                result.push(this.renderRow(table[i]));
            }
            return result;
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "discipline-results" },
                React.createElement(
                    "table",
                    { className: "bordered-table" },
                    React.createElement(
                        "thead",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { className: "w-8" },
                                React.createElement(
                                    "p",
                                    null,
                                    __("results.labels.place")
                                )
                            ),
                            React.createElement(
                                "th",
                                { className: "w-8" },
                                React.createElement(
                                    "p",
                                    null,
                                    __("results.labels.number")
                                )
                            ),
                            React.createElement(
                                "th",
                                { className: "w-27" },
                                React.createElement(
                                    "p",
                                    null,
                                    __("results.labels.sportsmen")
                                )
                            ),
                            React.createElement(
                                "th",
                                { className: "w-9" },
                                React.createElement(
                                    "p",
                                    null,
                                    __("results.labels.sportsmen_year_of_birth")
                                )
                            ),
                            React.createElement(
                                "th",
                                { className: "w-24" },
                                React.createElement(
                                    "p",
                                    null,
                                    __("results.labels.participant_club")
                                )
                            ),
                            React.createElement(
                                "th",
                                { className: "w-24" },
                                React.createElement(
                                    "p",
                                    null,
                                    __("results.labels.participant_coaches")
                                )
                            )
                        )
                    ),
                    React.createElement(
                        "tbody",
                        null,
                        this.renderRows()
                    )
                )
            );
        }
    }]);

    return DisciplineResultsTable;
}(React.Component);

var DisciplineResultsPresenterTableRow = function (_React$Component2) {
    _inherits(DisciplineResultsPresenterTableRow, _React$Component2);

    function DisciplineResultsPresenterTableRow(props) {
        _classCallCheck(this, DisciplineResultsPresenterTableRow);

        var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineResultsPresenterTableRow).call(this, props));

        _this2.state = {
            active: false
        };
        return _this2;
    }

    _createClass(DisciplineResultsPresenterTableRow, [{
        key: "toggleActive",
        value: function toggleActive() {
            this.setState({
                active: !this.state.active
            });
        }
    }, {
        key: "render",
        value: function render() {
            var p = this.props.participant;
            return React.createElement(
                "table",
                _extends({ className: "row" + (this.state.active ? " active" : "")
                }, (0, _tablet_components.onTouchEndOrClick)(this.toggleActive.bind(this))),
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "td",
                            { className: "place", rowSpan: "3" },
                            this.props.place === null ? "" : React.createElement(
                                "div",
                                null,
                                this.props.place,
                                React.createElement(
                                    "div",
                                    { className: "place-label" },
                                    (0, _loader._)("presenter.labels.place")
                                )
                            )
                        ),
                        React.createElement(
                            "td",
                            { className: "number" },
                            p.number
                        ),
                        React.createElement(
                            "td",
                            { className: "name" },
                            p.name
                        )
                    ),
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "td",
                            { className: "club", colSpan: "2" },
                            p.club.name
                        )
                    ),
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "td",
                            { className: "coaches", colSpan: "2" },
                            p.coaches
                        )
                    )
                )
            );
        }
    }]);

    return DisciplineResultsPresenterTableRow;
}(React.Component);

var DisciplineResultsPresenterTable = exports.DisciplineResultsPresenterTable = function (_React$Component3) {
    _inherits(DisciplineResultsPresenterTable, _React$Component3);

    function DisciplineResultsPresenterTable() {
        _classCallCheck(this, DisciplineResultsPresenterTable);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineResultsPresenterTable).apply(this, arguments));
    }

    _createClass(DisciplineResultsPresenterTable, [{
        key: "renderRowHeader",
        value: function renderRowHeader(prev_row, next_row) {
            var need_render = typeof prev_row === "undefined" || prev_row.run.tour.id !== next_row.run.tour.id;
            if (!need_render) {
                return null;
            }
            return React.createElement(
                "div",
                { className: "tour-name", key: "H" + next_row.run.id },
                next_row.run.tour.name
            );
        }
    }, {
        key: "renderRow",
        value: function renderRow(row) {
            return React.createElement(DisciplineResultsPresenterTableRow, { key: "R" + row.run.id,
                participant: row.run.participant,
                place: row.place });
        }
    }, {
        key: "renderRows",
        value: function renderRows() {
            var result = [];
            var table = this.props.table;
            for (var i = table.length - 1; i >= 0; --i) {
                var header = this.renderRowHeader(table[i + 1], table[i]);
                header && result.push(header);
                result.push(this.renderRow(table[i]));
            }
            return result;
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                this.renderRows()
            );
        }
    }]);

    return DisciplineResultsPresenterTable;
}(React.Component);

var DisciplineResultsScreenOperatorTableRow = function (_React$Component4) {
    _inherits(DisciplineResultsScreenOperatorTableRow, _React$Component4);

    function DisciplineResultsScreenOperatorTableRow() {
        _classCallCheck(this, DisciplineResultsScreenOperatorTableRow);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineResultsScreenOperatorTableRow).apply(this, arguments));
    }

    _createClass(DisciplineResultsScreenOperatorTableRow, [{
        key: "render",
        value: function render() {
            var p = this.props.participant;
            return React.createElement(
                "table",
                _extends({ className: "row" + (this.props.selected ? " selected" : "")
                }, (0, _tablet_components.onTouchEndOrClick)(this.props.onClick)),
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "td",
                            { className: "place", rowSpan: "2" },
                            this.props.place === null ? "" : React.createElement(
                                "div",
                                null,
                                this.props.place,
                                React.createElement(
                                    "div",
                                    { className: "place-label" },
                                    (0, _loader._)("presenter.labels.place")
                                )
                            )
                        ),
                        React.createElement(
                            "td",
                            { className: "number" },
                            p.number
                        ),
                        React.createElement(
                            "td",
                            { className: "name" },
                            p.name
                        )
                    ),
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "td",
                            { className: "club", colSpan: "2" },
                            p.club.name
                        )
                    )
                )
            );
        }
    }]);

    return DisciplineResultsScreenOperatorTableRow;
}(React.Component);

var DisciplineResultsScreenOperatorTable = exports.DisciplineResultsScreenOperatorTable = function (_React$Component5) {
    _inherits(DisciplineResultsScreenOperatorTable, _React$Component5);

    function DisciplineResultsScreenOperatorTable() {
        _classCallCheck(this, DisciplineResultsScreenOperatorTable);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineResultsScreenOperatorTable).apply(this, arguments));
    }

    _createClass(DisciplineResultsScreenOperatorTable, [{
        key: "renderRowHeader",
        value: function renderRowHeader(prev_row, next_row) {
            var need_render = typeof prev_row === "undefined" || prev_row.run.tour.id !== next_row.run.tour.id;
            if (!need_render) {
                return null;
            }
            return React.createElement(
                "div",
                { className: "tour-name", key: "H" + next_row.run.id },
                next_row.run.tour.name
            );
        }
    }, {
        key: "renderRow",
        value: function renderRow(row, place) {
            var _this6 = this;

            return React.createElement(DisciplineResultsScreenOperatorTableRow, {
                key: "R" + row.run.id,
                participant: row.run.participant,
                place: row.place,
                onClick: function onClick() {
                    return _this6.props.onPlaceSelect(place);
                },
                selected: this.props.selectedPlace !== null && place >= this.props.selectedPlace });
        }
    }, {
        key: "renderRows",
        value: function renderRows() {
            var result = [];
            var table = this.props.table;
            for (var i = table.length - 1; i >= 0; --i) {
                var header = this.renderRowHeader(table[i + 1], table[i]);
                header && result.push(header);
                result.push(this.renderRow(table[i], i + 1));
            }
            return result;
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                this.renderRows()
            );
        }
    }]);

    return DisciplineResultsScreenOperatorTable;
}(React.Component);

},{"l10n/loader":25,"ui/tablet_components":35}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TourAdminScoreCell = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BaseScoreInput = function (_React$Component) {
    _inherits(BaseScoreInput, _React$Component);

    function BaseScoreInput() {
        _classCallCheck(this, BaseScoreInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(BaseScoreInput).apply(this, arguments));
    }

    _createClass(BaseScoreInput, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            ReactDOM.findDOMNode(this).querySelectorAll("input")[0].select();
            this.onMount.apply(this, arguments);
        }
    }, {
        key: "onMount",
        value: function onMount() {}
    }, {
        key: "onChange",
        value: function onChange(key, event) {
            if ((typeof key === "undefined" ? "undefined" : _typeof(key)) !== "object") {
                key = [key];
            }
            var score = this.serialize();
            var score_inner = score;
            for (var idx = 0; idx < key.length - 1; ++idx) {
                score_inner = score_inner[key[idx]];
            }
            score_inner[key[key.length - 1]] = event.target.type === "checkbox" ? event.target.indeterminate ? null : event.target.checked : event.target.value;
            this.props.updateValue(score);
        }
    }, {
        key: "onKeyUp",
        value: function onKeyUp(event) {
            if (event.keyCode === 27) {
                // Esc
                this.props.stopEditing();
            }
        }
    }, {
        key: "isEmpty",
        value: function isEmpty(value) {
            return value === "" || value === null;
        }
    }, {
        key: "onSubmit",
        value: function onSubmit(e) {
            e.preventDefault();
            this.props.submitValue(this.serialize());
        }
    }, {
        key: "renderButtons",
        value: function renderButtons() {
            if (this.props.readOnly) {
                return React.createElement(
                    "button",
                    { className: "btn btn-primary", type: "button", onClick: this.props.stopEditing },
                    (0, _loader._)("global.buttons.close")
                );
            }
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "button",
                    { className: "btn btn-primary", type: "submit" },
                    (0, _loader._)("global.buttons.submit")
                ),
                " ",
                React.createElement(
                    "button",
                    { className: "btn btn-primary", type: "button", onClick: this.props.stopEditing },
                    (0, _loader._)("global.buttons.discard")
                ),
                React.createElement(ConfirmationButton, {
                    judge_role: this.props.discipline_judge.role,
                    confirmed: this.props.confirmed,
                    toggleConfirmation: this.props.toggleConfirmation,
                    onKeyUp: this.onKeyUp.bind(this) })
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "form",
                { onSubmit: this.onSubmit.bind(this), className: "form-score-input" },
                this.renderTable(),
                this.renderButtons()
            );
        }
    }]);

    return BaseScoreInput;
}(React.Component);

var DanceScoreInput = function (_BaseScoreInput) {
    _inherits(DanceScoreInput, _BaseScoreInput);

    function DanceScoreInput() {
        _classCallCheck(this, DanceScoreInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DanceScoreInput).apply(this, arguments));
    }

    _createClass(DanceScoreInput, [{
        key: "renderTable",
        value: function renderTable() {
            return React.createElement(
                "table",
                null,
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            "FW:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.fw_woman,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "fw_woman"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        ),
                        React.createElement(
                            "th",
                            null,
                            "FM:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.fw_man,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "fw_man"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        )
                    ),
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            "DF:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.dance_figs,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "dance_figs"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        ),
                        React.createElement(
                            "th",
                            null,
                            "C:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.composition,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "composition"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        )
                    ),
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            "SM:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.small_mistakes,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "small_mistakes"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        ),
                        React.createElement(
                            "th",
                            null,
                            "BM:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.big_mistakes,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "big_mistakes"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        )
                    )
                )
            );
        }
    }, {
        key: "serialize",
        value: function serialize() {
            return {
                fw_man: !this.isEmpty(this.props.score.fw_man) ? parseInt(this.props.score.fw_man) || 0 : null,
                fw_woman: !this.isEmpty(this.props.score.fw_woman) ? parseInt(this.props.score.fw_woman) || 0 : null,
                dance_figs: !this.isEmpty(this.props.score.dance_figs) ? parseFloat(this.props.score.dance_figs) || 0 : null,
                composition: !this.isEmpty(this.props.score.composition) ? parseFloat(this.props.score.composition) || 0 : null,
                small_mistakes: !this.isEmpty(this.props.score.small_mistakes) ? parseInt(this.props.score.small_mistakes) || 0 : null,
                big_mistakes: !this.isEmpty(this.props.score.big_mistakes) ? parseInt(this.props.score.big_mistakes) || 0 : null
            };
        }
    }]);

    return DanceScoreInput;
}(BaseScoreInput);

var AcroScoreInput = function (_BaseScoreInput2) {
    _inherits(AcroScoreInput, _BaseScoreInput2);

    function AcroScoreInput() {
        _classCallCheck(this, AcroScoreInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(AcroScoreInput).apply(this, arguments));
    }

    _createClass(AcroScoreInput, [{
        key: "renderTable",
        value: function renderTable() {
            var fields = this.props.score.reductions.map(function (value, idx) {
                return [React.createElement(
                    "th",
                    { key: "H" + idx },
                    "A",
                    idx + 1,
                    ":"
                ), React.createElement(
                    "td",
                    { key: "V" + idx },
                    React.createElement("input", {
                        type: "text",
                        value: this.props.score.reductions[idx],
                        readOnly: this.props.readOnly,
                        onChange: this.onChange.bind(this, ["reductions", idx]),
                        onKeyUp: this.onKeyUp.bind(this) })
                )];
            }.bind(this));
            fields.push([React.createElement(
                "th",
                { key: "HFD" },
                "FD:"
            ), React.createElement(
                "td",
                { key: "VFD" },
                React.createElement("input", {
                    type: "text",
                    value: this.props.score.mistakes,
                    readOnly: this.props.readOnly,
                    onChange: this.onChange.bind(this, "mistakes"),
                    onKeyUp: this.onKeyUp.bind(this) })
            )]);
            var rows = [];
            for (var idx = 0; idx < fields.length; idx += 2) {
                rows.push(React.createElement(
                    "tr",
                    { key: "R" + idx },
                    fields.slice(idx, idx + 2)
                ));
            }
            return React.createElement(
                "table",
                null,
                React.createElement(
                    "tbody",
                    null,
                    rows
                )
            );
        }
    }, {
        key: "serialize",
        value: function serialize() {
            return {
                reductions: this.props.score.reductions.map(function (reduction) {
                    return !this.isEmpty(reduction) ? parseInt(reduction) || 0 : null;
                }.bind(this)),
                mistakes: parseInt(this.props.score.mistakes) || 0
            };
        }
    }]);

    return AcroScoreInput;
}(BaseScoreInput);

var FormationScoreInput = function (_BaseScoreInput3) {
    _inherits(FormationScoreInput, _BaseScoreInput3);

    function FormationScoreInput() {
        _classCallCheck(this, FormationScoreInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(FormationScoreInput).apply(this, arguments));
    }

    _createClass(FormationScoreInput, [{
        key: "renderTable",
        value: function renderTable() {
            return React.createElement(
                "table",
                null,
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            "DT:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.dance_tech,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "dance_tech"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        ),
                        React.createElement(
                            "th",
                            null,
                            "DF:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.dance_figs,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "dance_figs"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        )
                    ),
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            "I:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.impression,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "impression"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        ),
                        React.createElement(
                            "th",
                            null,
                            "M:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.small_mistakes,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "small_mistakes"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        )
                    )
                )
            );
        }
    }, {
        key: "serialize",
        value: function serialize() {
            return {
                dance_tech: !this.isEmpty(this.props.score.dance_tech) ? parseFloat(this.props.score.dance_tech) || 0 : null,
                dance_figs: !this.isEmpty(this.props.score.dance_figs) ? parseFloat(this.props.score.dance_figs) || 0 : null,
                impression: !this.isEmpty(this.props.score.impression) ? parseFloat(this.props.score.impression) || 0 : null,
                mistakes: !this.isEmpty(this.props.score.mistakes) ? parseInt(this.props.score.mistakes) || 0 : null
            };
        }
    }]);

    return FormationScoreInput;
}(BaseScoreInput);

var FormationAcroScoreInput = function (_BaseScoreInput4) {
    _inherits(FormationAcroScoreInput, _BaseScoreInput4);

    function FormationAcroScoreInput() {
        _classCallCheck(this, FormationAcroScoreInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(FormationAcroScoreInput).apply(this, arguments));
    }

    _createClass(FormationAcroScoreInput, [{
        key: "renderTable",
        value: function renderTable() {
            return React.createElement(
                "table",
                null,
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            "A:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.acrobatics,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "acrobatics"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        ),
                        React.createElement(
                            "th",
                            null,
                            "DT:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.dance_tech,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "dance_tech"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        )
                    ),
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            "DF:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.dance_figs,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "dance_figs"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        ),
                        React.createElement(
                            "th",
                            null,
                            "I:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.impression,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "impression"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        )
                    ),
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            "SM:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.small_mistakes,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "small_mistakes"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        ),
                        React.createElement(
                            "th",
                            null,
                            "BM:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.small_mistakes,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "small_mistakes"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        )
                    )
                )
            );
        }
    }, {
        key: "serialize",
        value: function serialize() {
            return {
                acrobatics: !this.isEmpty(this.props.score.acrobatics) ? parseFloat(this.props.score.acrobatics) || 0 : null,
                dance_tech: !this.isEmpty(this.props.score.dance_tech) ? parseFloat(this.props.score.dance_tech) || 0 : null,
                dance_figs: !this.isEmpty(this.props.score.dance_figs) ? parseFloat(this.props.score.dance_figs) || 0 : null,
                impression: !this.isEmpty(this.props.score.impression) ? parseFloat(this.props.score.impression) || 0 : null,
                small_mistakes: !this.isEmpty(this.props.score.small_mistakes) ? parseInt(this.props.score.small_mistakes) || 0 : null,
                big_mistakes: !this.isEmpty(this.props.score.big_mistakes) ? parseInt(this.props.score.big_mistakes) || 0 : null
            };
        }
    }]);

    return FormationAcroScoreInput;
}(BaseScoreInput);

var SimplifiedScoreInput = function (_BaseScoreInput5) {
    _inherits(SimplifiedScoreInput, _BaseScoreInput5);

    function SimplifiedScoreInput() {
        _classCallCheck(this, SimplifiedScoreInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(SimplifiedScoreInput).apply(this, arguments));
    }

    _createClass(SimplifiedScoreInput, [{
        key: "renderTable",
        value: function renderTable() {
            return React.createElement(
                "table",
                null,
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            "S:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.points,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "points"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        )
                    )
                )
            );
        }
    }, {
        key: "serialize",
        value: function serialize() {
            return {
                points: !this.isEmpty(this.props.score.points) ? parseInt(this.props.score.points) || 0 : null
            };
        }
    }]);

    return SimplifiedScoreInput;
}(BaseScoreInput);

var HeadScoreInput = function (_BaseScoreInput6) {
    _inherits(HeadScoreInput, _BaseScoreInput6);

    function HeadScoreInput() {
        _classCallCheck(this, HeadScoreInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(HeadScoreInput).apply(this, arguments));
    }

    _createClass(HeadScoreInput, [{
        key: "renderTable",
        value: function renderTable() {
            return React.createElement(
                "table",
                null,
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            "P:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.penalty,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "penalty"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        ),
                        React.createElement(
                            "th",
                            null,
                            "NT:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "checkbox",
                                checked: this.props.score.nexttour,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "nexttour"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        )
                    )
                )
            );
        }
    }, {
        key: "serialize",
        value: function serialize() {
            return {
                penalty: parseInt(this.props.score.penalty) || 0,
                nexttour: this.props.score.nexttour
            };
        }
    }]);

    return HeadScoreInput;
}(BaseScoreInput);

var TechScoreInput = function (_BaseScoreInput7) {
    _inherits(TechScoreInput, _BaseScoreInput7);

    function TechScoreInput() {
        _classCallCheck(this, TechScoreInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TechScoreInput).apply(this, arguments));
    }

    _createClass(TechScoreInput, [{
        key: "renderTable",
        value: function renderTable() {
            var _this9 = this;

            return React.createElement(
                "table",
                null,
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            "JS:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "text",
                                value: this.props.score.jump_steps,
                                readOnly: this.props.readOnly,
                                onChange: this.onChange.bind(this, "jump_steps"),
                                onKeyUp: this.onKeyUp.bind(this) })
                        ),
                        React.createElement(
                            "th",
                            null,
                            "TV:"
                        ),
                        React.createElement(
                            "td",
                            null,
                            React.createElement("input", {
                                type: "checkbox",
                                ref: "cb",
                                checked: !!this.props.score.timing_violation,
                                onChange: function onChange(event) {},
                                onKeyUp: this.onKeyUp.bind(this),
                                onClick: function onClick(event) {
                                    if (_this9.props.readOnly) {
                                        event.preventDefault();
                                        return;
                                    }
                                    var cb = event.target;
                                    if (cb.readOnly) {
                                        cb.checked = cb.readOnly = false;
                                    } else if (!cb.checked) {
                                        cb.readOnly = cb.indeterminate = true;
                                    }
                                    _this9.onChange("timing_violation", event);
                                } })
                        )
                    )
                )
            );
        }
    }, {
        key: "onMount",
        value: function onMount() {
            var node = this.refs.cb;
            node.readOnly = this.props.score.timing_violation === null;
            node.indeterminate = this.props.score.timing_violation === null;
        }
    }, {
        key: "serialize",
        value: function serialize() {
            return {
                jump_steps: parseInt(this.props.score.jump_steps) || 0,
                timing_violation: this.props.score.timing_violation
            };
        }
    }]);

    return TechScoreInput;
}(BaseScoreInput);

var ConfirmationButton = function (_React$Component2) {
    _inherits(ConfirmationButton, _React$Component2);

    function ConfirmationButton() {
        _classCallCheck(this, ConfirmationButton);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ConfirmationButton).apply(this, arguments));
    }

    _createClass(ConfirmationButton, [{
        key: "render",
        value: function render() {
            if (this.props.judge_role === "head_judge") {
                return null;
            }
            return React.createElement(
                "button",
                {
                    className: "btn btn-sm btn-confirmation" + (this.props.confirmed ? " btn-danger" : " btn-success"),
                    type: "button",
                    onClick: this.props.toggleConfirmation,
                    onKeyUp: this.props.onKeyUp },
                this.props.confirmed ? (0, _loader._)("admin.buttons.unconfirm_score") : (0, _loader._)("admin.buttons.confirm_score")
            );
        }
    }]);

    return ConfirmationButton;
}(React.Component);

var TourAdminScoreInput = function (_React$Component3) {
    _inherits(TourAdminScoreInput, _React$Component3);

    function TourAdminScoreInput() {
        _classCallCheck(this, TourAdminScoreInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminScoreInput).apply(this, arguments));
    }

    _createClass(TourAdminScoreInput, [{
        key: "render",
        value: function render() {
            switch (this.props.discipline_judge.role) {
                case "acro_judge":
                    if (this.props.scoring_system_name === "rosfarr.am_final_fw") {
                        return React.createElement(DanceScoreInput, this.props);
                    }
                    return React.createElement(AcroScoreInput, this.props);
                case "dance_judge":
                    if (this.props.scoring_system_name === "rosfarr.formation") {
                        return React.createElement(FormationScoreInput, this.props);
                    }
                    if (this.props.scoring_system_name === "rosfarr.formation_acro") {
                        return React.createElement(FormationAcroScoreInput, this.props);
                    }
                    if (this.props.scoring_system_name === "rosfarr.simplified") {
                        return React.createElement(SimplifiedScoreInput, this.props);
                    }
                    return React.createElement(DanceScoreInput, this.props);
                case "head_judge":
                    return React.createElement(HeadScoreInput, this.props);
                case "tech_judge":
                    return React.createElement(TechScoreInput, this.props);
                default:
                    console.log("Unknown judge role", this.props.discipline_judge.role);
                    return null;
            }
        }
    }]);

    return TourAdminScoreInput;
}(React.Component);

var TourAdminScoreCell = exports.TourAdminScoreCell = function (_React$Component4) {
    _inherits(TourAdminScoreCell, _React$Component4);

    function TourAdminScoreCell() {
        _classCallCheck(this, TourAdminScoreCell);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminScoreCell).apply(this, arguments));
    }

    _createClass(TourAdminScoreCell, [{
        key: "render",
        value: function render() {
            if (!this.props.editing) {
                if (this.props.discipline_judge.role === "head_judge" && this.props.value.raw_data.nexttour) {
                    return React.createElement(
                        "div",
                        { onClick: this.props.startEditing },
                        "[",
                        this.props.value.total_score.toFixed(2),
                        "]"
                    );
                }
                if (this.props.discipline_judge.role === "tech_judge") {
                    var tv_str = this.props.value.raw_data.timing_violation === null ? " ?" : this.props.value.raw_data.timing_violation ? " ✗" : " ✓";
                    return React.createElement(
                        "div",
                        { onClick: this.props.startEditing },
                        this.props.value.raw_data.jump_steps + tv_str
                    );
                }
                return React.createElement(
                    "div",
                    { onClick: this.props.startEditing },
                    this.props.value.total_score.toFixed(2)
                );
            } else {
                return React.createElement(TourAdminScoreInput, {
                    readOnly: this.props.readOnly,
                    score: this.props.value.raw_data,
                    confirmed: this.props.confirmed,
                    discipline_judge: this.props.discipline_judge,
                    scoring_system_name: this.props.scoring_system_name,
                    stopEditing: this.props.stopEditing,
                    updateValue: this.props.updateValue,
                    submitValue: this.props.submitValue,
                    toggleConfirmation: this.props.toggleConfirmation });
            }
        }
    }]);

    return TourAdminScoreCell;
}(React.Component);

},{"l10n/loader":25}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TourAdminBody = exports.TourAdminButtons = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _dialogs = require("ui/dialogs");

var _tools = require("common/tools");

var _tour_admin = require("./rosfarr/tour_admin");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var current_editing_cell = null;

var TourAdminHeatValue = function (_React$Component) {
    _inherits(TourAdminHeatValue, _React$Component);

    function TourAdminHeatValue(props) {
        _classCallCheck(this, TourAdminHeatValue);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminHeatValue).call(this, props));

        _this.state = {
            editing: false,
            current_value: null
        };
        return _this;
    }

    _createClass(TourAdminHeatValue, [{
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
            if (!prevState.editing && this.state.editing) {
                ReactDOM.findDOMNode(this).querySelector("input").select();
            }
        }
    }, {
        key: "onKeyUp",
        value: function onKeyUp(event) {
            if (event.keyCode === 13) {
                // Enter
                this.submitValue();
            } else if (event.keyCode === 27) {
                // Esc
                this.stopEditing();
            }
        }
    }, {
        key: "startEditing",
        value: function startEditing() {
            if (this.props.readOnly) {
                return;
            }
            if (current_editing_cell !== null) {
                current_editing_cell.stopEditing();
            }
            current_editing_cell = this;
            this.setState({
                editing: true,
                current_value: this.props.value
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            current_editing_cell = null;
            this.setState({
                editing: false
            });
        }
    }, {
        key: "submitValue",
        value: function submitValue() {
            (0, _api.Api)("run.set", { run_id: this.props.run_id, data: { heat: this.state.current_value } }).onSuccess(function () {
                this.stopEditing();
            }.bind(this)).send();
        }
    }, {
        key: "onChange",
        value: function onChange(event) {
            var value = parseInt(event.target.value.replace(/\D/g, ''));
            if (isNaN(value)) {
                value = 0;
            }
            this.setState({
                current_value: value
            });
        }
    }, {
        key: "render",
        value: function render() {
            if (this.state.editing) {
                return React.createElement(
                    "td",
                    { className: "heat" },
                    React.createElement("input", {
                        className: "input-heat",
                        type: "text",
                        value: this.state.current_value || "",
                        onChange: this.onChange.bind(this),
                        onKeyDown: this.onKeyUp.bind(this) })
                );
            } else {
                return React.createElement(
                    "td",
                    { className: "heat", onClick: this.startEditing.bind(this) },
                    this.props.value
                );
            }
        }
    }]);

    return TourAdminHeatValue;
}(React.Component);

var TourAdminButtons = exports.TourAdminButtons = function (_React$Component2) {
    _inherits(TourAdminButtons, _React$Component2);

    function TourAdminButtons() {
        _classCallCheck(this, TourAdminButtons);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminButtons).apply(this, arguments));
    }

    _createClass(TourAdminButtons, [{
        key: "signal",
        value: function signal(message) {
            var _this3 = this;

            return function () {
                return _this3.props.onSignal(message);
            }.bind(this);
        }
    }, {
        key: "render",
        value: function render() {
            if (this.props.tour.finalized) {
                return React.createElement("div", null);
            }
            var result = [];
            if (!this.props.tour.active) {
                result = result.concat([React.createElement(
                    "button",
                    { className: "btn btn-primary", onClick: this.signal("init_tour"), key: "btn-init-tour" },
                    (0, _loader._)("judging.buttons.init_tour")
                ), React.createElement(
                    "button",
                    { className: "btn btn-primary", onClick: this.signal("finalize_tour"), key: "btn-finalize-tour" },
                    (0, _loader._)("judging.buttons.finalize_tour")
                ), React.createElement(
                    "button",
                    { className: "btn btn-primary", onClick: this.signal("shuffle_heats"), key: "btn-shuffle-heats" },
                    (0, _loader._)("judging.buttons.shuffle_heats")
                )]);
            }
            result.push(React.createElement(TourAdminStartStopTourButton, {
                tour: this.props.tour,
                onStart: this.signal("start_tour"),
                onStop: this.signal("stop_tour"),
                key: "btn-start-stop" }));
            return React.createElement(
                "div",
                null,
                result
            );
        }
    }]);

    return TourAdminButtons;
}(React.Component);

var TourAdminScoreCellWrapper = function (_React$Component3) {
    _inherits(TourAdminScoreCellWrapper, _React$Component3);

    function TourAdminScoreCellWrapper(props) {
        _classCallCheck(this, TourAdminScoreCellWrapper);

        var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminScoreCellWrapper).call(this, props));

        _this4.state = {
            editing: false,
            current_value: _this4.props.value
        };
        return _this4;
    }

    _createClass(TourAdminScoreCellWrapper, [{
        key: "startEditing",
        value: function startEditing() {
            if (current_editing_cell !== null) {
                current_editing_cell.stopEditing();
            }
            current_editing_cell = this;
            this.setState({
                editing: true,
                current_value: (0, _tools.clone)(this.props.value)
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
            current_editing_cell = null;
        }
    }, {
        key: "updateValue",
        value: function updateValue(new_value) {
            var value = this.state.current_value;
            value.raw_data = new_value;
            this.setState({
                current_value: value
            });
        }
    }, {
        key: "submitValue",
        value: function submitValue(new_value) {
            var request = {
                score_data: new_value,
                force: true
            };
            (0, _api.Api)("score.set", { score_id: this.props.score_id, data: request }).onSuccess(this.stopEditing.bind(this)).send();
        }
    }, {
        key: "toggleConfirmation",
        value: function toggleConfirmation() {
            if (this.props.confirmed) {
                (0, _api.Api)("score.unconfirm", { score_id: this.props.score_id }).send();
            } else {
                (0, _api.Api)("score.confirm", { score_id: this.props.score_id }).send();
            }
        }
    }, {
        key: "render",
        value: function render() {
            if (typeof this.props.value === "undefined") {
                return React.createElement(
                    "td",
                    { className: "no-score" },
                    " "
                );
            }
            var classes = ["judge"].concat(this.state.editing ? ["editing"] : []).concat(this.props.confirmed ? ["confirmed-score"] : []);
            return React.createElement(
                "td",
                { className: classes.join(" ") },
                React.createElement(_tour_admin.TourAdminScoreCell, {
                    readOnly: this.props.readOnly,
                    discipline_judge: this.props.discipline_judge,
                    scoring_system_name: this.props.scoring_system_name,
                    startEditing: this.startEditing.bind(this),
                    stopEditing: this.stopEditing.bind(this),
                    updateValue: this.updateValue.bind(this),
                    submitValue: this.submitValue.bind(this),
                    toggleConfirmation: this.toggleConfirmation.bind(this),
                    editing: this.state.editing,
                    value: this.state.editing ? this.state.current_value : this.props.value,
                    confirmed: this.props.confirmed })
            );
        }
    }]);

    return TourAdminScoreCellWrapper;
}(React.Component);

var TourAdminScoresRow = function (_React$Component4) {
    _inherits(TourAdminScoresRow, _React$Component4);

    function TourAdminScoresRow() {
        _classCallCheck(this, TourAdminScoresRow);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminScoresRow).apply(this, arguments));
    }

    _createClass(TourAdminScoresRow, [{
        key: "updateHeat",
        value: function updateHeat(new_value) {
            this.props.updateHeatValue(new_value);
        }
    }, {
        key: "render",
        value: function render() {
            var scores_map = {};
            this.props.run.scores.forEach(function (score_data) {
                scores_map[score_data.discipline_judge_id] = score_data;
            });
            var scores = this.props.discipline_judges.map(function (discipline_judge, idx) {
                var score = scores_map[discipline_judge.id];
                return React.createElement(TourAdminScoreCellWrapper, {
                    readOnly: this.props.readOnly,
                    key: score && score.id || "I" + idx,
                    discipline_judge: discipline_judge,
                    scoring_system_name: this.props.scoring_system_name,
                    score_id: score && score.id,
                    value: score && score.data,
                    confirmed: score && score.confirmed });
            }.bind(this));
            return React.createElement(
                "tr",
                { className: this.props.run.heat % 2 ? "odd-heat" : "" },
                React.createElement(TourAdminHeatValue, {
                    readOnly: this.props.readOnly,
                    run_id: this.props.run.id,
                    value: this.props.run.heat,
                    updateValue: this.updateHeat.bind(this) }),
                React.createElement(
                    "td",
                    { className: "number" },
                    this.props.run.participant.number
                ),
                React.createElement(
                    "td",
                    { className: "name" },
                    this.props.run.participant.name
                ),
                React.createElement(TourAdminAcrobaticsCell, {
                    readOnly: this.props.readOnly,
                    run_id: this.props.run.id,
                    program_name: this.props.run.program_name,
                    acrobatics: this.props.run.acrobatics,
                    programs: this.props.run.participant.programs }),
                React.createElement(TourAdminPerformedCell, {
                    readOnly: this.props.readOnly,
                    run: this.props.run }),
                React.createElement(
                    "td",
                    { className: "total" },
                    this.props.run.total_score
                ),
                scores
            );
        }
    }]);

    return TourAdminScoresRow;
}(React.Component);

var TourAdminStartStopTourButton = function (_React$Component5) {
    _inherits(TourAdminStartStopTourButton, _React$Component5);

    function TourAdminStartStopTourButton() {
        _classCallCheck(this, TourAdminStartStopTourButton);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminStartStopTourButton).apply(this, arguments));
    }

    _createClass(TourAdminStartStopTourButton, [{
        key: "render",
        value: function render() {
            if (this.props.tour.active) {
                return React.createElement(
                    "button",
                    { className: "btn btn-danger", onClick: this.props.onStop },
                    (0, _loader._)("judging.buttons.stop_tour")
                );
            } else {
                return React.createElement(
                    "button",
                    { className: "btn btn-success", onClick: this.props.onStart },
                    (0, _loader._)("judging.buttons.start_tour")
                );
            }
        }
    }]);

    return TourAdminStartStopTourButton;
}(React.Component);

var TourAdminAcrobaticEditorRow = function (_React$Component6) {
    _inherits(TourAdminAcrobaticEditorRow, _React$Component6);

    function TourAdminAcrobaticEditorRow() {
        _classCallCheck(this, TourAdminAcrobaticEditorRow);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminAcrobaticEditorRow).apply(this, arguments));
    }

    _createClass(TourAdminAcrobaticEditorRow, [{
        key: "onPlus",
        value: function onPlus() {
            var value = Math.round(2 * this.props.acrobatic.score + 1) / 2;
            (0, _api.Api)("acrobatic_override.set", {
                run_id: this.props.run_id,
                acrobatic_idx: this.props.acro_idx,
                score: value
            }).send();
        }
    }, {
        key: "onMinus",
        value: function onMinus() {
            var value = Math.max(0, Math.round(2 * this.props.acrobatic.score - 1) / 2);
            (0, _api.Api)("acrobatic_override.set", {
                run_id: this.props.run_id,
                acrobatic_idx: this.props.acro_idx,
                score: value
            }).send();
        }
    }, {
        key: "onReset",
        value: function onReset() {
            (0, _api.Api)("acrobatic_override.set", {
                run_id: this.props.run_id,
                acrobatic_idx: this.props.acro_idx,
                score: null
            }).send();
        }
    }, {
        key: "renderControls",
        value: function renderControls() {
            if (this.props.readOnly) {
                return null;
            }
            return React.createElement(
                "td",
                { className: "controls" },
                this.props.acrobatic.has_override ? React.createElement(
                    "button",
                    { className: "btn btn-default btn-sm", onClick: this.onReset.bind(this) },
                    (0, _loader._)("judging.buttons.reset_acrobatic_override")
                ) : null,
                React.createElement(
                    "button",
                    { className: "btn btn-default btn-sm", onClick: this.onMinus.bind(this) },
                    "−"
                ),
                React.createElement(
                    "button",
                    { className: "btn btn-default btn-sm", onClick: this.onPlus.bind(this) },
                    "+"
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "tr",
                null,
                React.createElement(
                    "td",
                    { className: "description" },
                    this.props.acrobatic.description
                ),
                React.createElement(
                    "td",
                    { className: "old-score" },
                    this.props.acrobatic.original_score.toFixed(1)
                ),
                React.createElement(
                    "td",
                    { className: "new-score" },
                    this.props.acrobatic.has_override ? this.props.acrobatic.score.toFixed(1) : null
                ),
                this.renderControls()
            );
        }
    }]);

    return TourAdminAcrobaticEditorRow;
}(React.Component);

var TourAdminAcrobaticLoader = function (_React$Component7) {
    _inherits(TourAdminAcrobaticLoader, _React$Component7);

    function TourAdminAcrobaticLoader() {
        _classCallCheck(this, TourAdminAcrobaticLoader);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminAcrobaticLoader).apply(this, arguments));
    }

    _createClass(TourAdminAcrobaticLoader, [{
        key: "onSubmit",
        value: function onSubmit(e) {
            var _this9 = this;

            e.preventDefault();
            var value = this.refs.selector.value;
            if (value === "null") {
                value = null;
            }
            (0, _dialogs.showConfirm)((0, _loader._)("judging.confirms.load_program"), function () {
                _this9.props.onLoad(value);
                swal.close();
            });
        }
    }, {
        key: "renderSelector",
        value: function renderSelector() {
            return React.createElement(
                "select",
                { defaultValue: "null", ref: "selector" },
                React.createElement(
                    "option",
                    { value: "null" },
                    "-"
                ),
                this.props.programs.map(function (program) {
                    return React.createElement(
                        "option",
                        { value: program.id, key: program.id },
                        program.name
                    );
                })
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "form",
                { onSubmit: this.onSubmit.bind(this), className: "acro-loader pull-left" },
                this.renderSelector(),
                React.createElement(
                    "button",
                    { className: "btn btn-primary btn-sm" },
                    (0, _loader._)("global.buttons.load")
                )
            );
        }
    }]);

    return TourAdminAcrobaticLoader;
}(React.Component);

var TourAdminAcrobaticEditor = function (_React$Component8) {
    _inherits(TourAdminAcrobaticEditor, _React$Component8);

    function TourAdminAcrobaticEditor() {
        _classCallCheck(this, TourAdminAcrobaticEditor);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminAcrobaticEditor).apply(this, arguments));
    }

    _createClass(TourAdminAcrobaticEditor, [{
        key: "loadAcrobatics",
        value: function loadAcrobatics(program_id) {
            (0, _api.Api)("run.load_program", { program_id: program_id, run_id: this.props.run_id }).send();
        }
    }, {
        key: "renderBody",
        value: function renderBody() {
            var _this11 = this;

            return React.createElement(
                "div",
                null,
                React.createElement(
                    "h4",
                    null,
                    this.props.program_name
                ),
                React.createElement(
                    "table",
                    { className: "acrobatics" },
                    React.createElement(
                        "tbody",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { className: "description" },
                                (0, _loader._)("judging.labels.acro_description")
                            ),
                            React.createElement(
                                "th",
                                { className: "old-score" },
                                (0, _loader._)("judging.labels.old_score")
                            ),
                            React.createElement(
                                "th",
                                { className: "new-score" },
                                (0, _loader._)("judging.labels.new_score")
                            ),
                            this.props.readOnly ? null : React.createElement("th", { className: "controls" })
                        ),
                        this.props.acrobatics.map(function (acro, idx) {
                            return React.createElement(TourAdminAcrobaticEditorRow, {
                                readOnly: _this11.props.readOnly,
                                acrobatic: acro,
                                acro_idx: idx,
                                run_id: _this11.props.run_id,
                                key: idx });
                        })
                    )
                )
            );
        }
    }, {
        key: "renderMock",
        value: function renderMock() {
            return React.createElement(
                "div",
                { className: "no-program text-center" },
                "No program loaded"
            );
        }
    }, {
        key: "renderLoader",
        value: function renderLoader() {
            if (this.props.readOnly) {
                return null;
            }
            return React.createElement(TourAdminAcrobaticLoader, {
                onLoad: this.loadAcrobatics.bind(this),
                programs: this.props.programs });
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "form-acro-input" },
                this.props.program_name === null ? this.renderMock() : this.renderBody(),
                this.renderLoader(),
                React.createElement(
                    "button",
                    { className: "btn btn-primary btn-sm pull-right", onClick: this.props.stopEditing },
                    (0, _loader._)("global.buttons.close")
                ),
                React.createElement("div", { className: "clearfix" })
            );
        }
    }]);

    return TourAdminAcrobaticEditor;
}(React.Component);

var TourAdminAcrobaticsCell = function (_React$Component9) {
    _inherits(TourAdminAcrobaticsCell, _React$Component9);

    function TourAdminAcrobaticsCell(props) {
        _classCallCheck(this, TourAdminAcrobaticsCell);

        var _this12 = _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminAcrobaticsCell).call(this, props));

        _this12.state = {
            editing: false
        };
        return _this12;
    }

    _createClass(TourAdminAcrobaticsCell, [{
        key: "startEditing",
        value: function startEditing() {
            if (current_editing_cell !== null) {
                current_editing_cell.stopEditing();
            }
            current_editing_cell = this;
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
            current_editing_cell = null;
        }
    }, {
        key: "render",
        value: function render() {
            if (this.state.editing) {
                return React.createElement(
                    "td",
                    { className: "acrobatics editing" },
                    React.createElement(TourAdminAcrobaticEditor, _extends({
                        readOnly: this.props.readOnly,
                        stopEditing: this.stopEditing.bind(this)
                    }, this.props))
                );
            }
            if (this.props.program_name === null) {
                return React.createElement(
                    "td",
                    { className: "acrobatics", onClick: this.startEditing.bind(this) },
                    "—"
                );
            }
            var has_overrides = false;
            var original_score = 0;
            var score = 0;
            this.props.acrobatics.forEach(function (acro) {
                original_score += acro.original_score;
                score += acro.score;
                has_overrides = has_overrides || acro.score !== acro.original_score;
            });
            return React.createElement(
                "td",
                { className: "acrobatics", onClick: this.startEditing.bind(this) },
                has_overrides ? original_score.toFixed(1) + " → " + score.toFixed(1) : score.toFixed(1)
            );
        }
    }]);

    return TourAdminAcrobaticsCell;
}(React.Component);

var TourAdminPerformedCell = function (_React$Component10) {
    _inherits(TourAdminPerformedCell, _React$Component10);

    function TourAdminPerformedCell() {
        _classCallCheck(this, TourAdminPerformedCell);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminPerformedCell).apply(this, arguments));
    }

    _createClass(TourAdminPerformedCell, [{
        key: "toggleState",
        value: function toggleState() {
            if (this.props.readOnly) {
                return;
            }
            var method = this.props.run.performed ? "run.mark_not_performed" : "run.mark_performed";
            (0, _api.Api)(method, { run_id: this.props.run.id }).send();
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "td",
                { className: "performed" },
                React.createElement("input", {
                    type: "checkbox",
                    checked: this.props.run.performed,
                    onChange: this.toggleState.bind(this) })
            );
        }
    }]);

    return TourAdminPerformedCell;
}(React.Component);

var TourAdminBody = exports.TourAdminBody = function (_React$Component11) {
    _inherits(TourAdminBody, _React$Component11);

    // Intiialization

    function TourAdminBody(props) {
        _classCallCheck(this, TourAdminBody);

        var _this14 = _possibleConstructorReturn(this, Object.getPrototypeOf(TourAdminBody).call(this, props));

        _this14.state = {
            tour: null
        };
        return _this14;
    }

    _createClass(TourAdminBody, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            this.storage = _storage.storage.getDomain("judging_" + this.props.tour_id);
            this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
            this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
            this.loadData();
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
            _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
            _storage.storage.delDomain("judging_" + this.props.tour_id);
        }
    }, {
        key: "reloadFromStorage",
        value: function reloadFromStorage() {
            var SCHEMA = {
                discipline: {
                    competition: {},
                    discipline_judges: {
                        judge: {}
                    }
                },
                runs: {
                    scores: {},
                    participant: {
                        programs: {}
                    }
                }
            };
            var serialized = this.storage.get("Tour").by_id(this.props.tour_id).serialize(SCHEMA);
            this.setState({
                tour: serialized
            });
        }
    }, {
        key: "loadData",
        value: function loadData() {
            (0, _api.Api)("tour.get", {
                tour_id: this.props.tour_id,
                children: {
                    discipline: {
                        competition: {},
                        discipline_judges: {
                            judge: {}
                        }
                    },
                    runs: {
                        acrobatics: {},
                        scores: {},
                        participant: {
                            programs: {}
                        }
                    }
                }
            }).addToDB("Tour", this.props.tour_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
        }

        // Listeners

    }, {
        key: "onSignal",
        value: function onSignal(message) {
            var _this15 = this;

            switch (message) {
                case "init_tour":
                    (0, _dialogs.showConfirm)((0, _loader._)("judging.confirms.init_tour"), function () {
                        (0, _api.Api)("tour.init", { tour_id: _this15.props.tour_id }).onSuccess(function () {
                            return swal.close();
                        }).send();
                    });
                    break;
                case "finalize_tour":
                    (0, _dialogs.showConfirm)((0, _loader._)("judging.confirms.finalize_tour"), function () {
                        (0, _api.Api)("tour.finalize", { tour_id: _this15.props.tour_id }).onSuccess(function () {
                            swal.close();
                            _this15.props.switchPage("results-1");
                        }).send();
                    });
                    break;
                case "shuffle_heats":
                    (0, _dialogs.showConfirm)((0, _loader._)("judging.confirms.shuffle_heats"), function () {
                        (0, _api.Api)("tour.shuffle_heats", { tour_id: _this15.props.tour_id }).onSuccess(function () {
                            return swal.close();
                        }).send();
                    });
                    break;
                case "start_tour":
                    (0, _api.Api)("tour.start", { tour_id: this.props.tour_id }).send();
                    break;
                case "stop_tour":
                    (0, _api.Api)("tour.stop", { tour_id: this.props.tour_id }).send();
                    break;
                default:
                    console.error("Unknown signal received:", message);
            }
        }

        // Helpers

    }, {
        key: "getAcrobaticOverrides",
        value: function getAcrobaticOverrides() {
            var result = [];
            this.state.tour.runs.forEach(function (run) {
                run.acrobatics.forEach(function (acro, idx) {
                    if (acro.original_score !== acro.score) {
                        result.push({
                            run: run,
                            acro_idx: idx + 1,
                            acro_description: acro.description,
                            score: acro.score,
                            original_score: acro.original_score
                        });
                    }
                });
            });
            return result;
        }

        // Rendering

    }, {
        key: "render",
        value: function render() {
            if (this.state.tour === null) {
                return React.createElement(_components.Loader, null);
            }
            var discipline_judges = this.state.tour.discipline.discipline_judges;
            var rows = this.state.tour.runs.map(function (run) {
                return React.createElement(TourAdminScoresRow, {
                    readOnly: this.state.tour.finalized,
                    key: run.id,
                    run: run,
                    scoring_system_name: this.state.tour.scoring_system_name,
                    discipline_judges: discipline_judges });
            }.bind(this));
            var judges_header = discipline_judges.map(function (discipline_judge) {
                // TODO: move role staff to scoring system logic
                return React.createElement(
                    "th",
                    { className: "judge", key: discipline_judge.id },
                    discipline_judge.judge.number + (discipline_judge.role === "acro_judge" ? "*" : "")
                );
            }.bind(this));
            return React.createElement(
                "div",
                { className: "tour-admin" },
                React.createElement(
                    "table",
                    { className: "bordered-table" },
                    React.createElement(
                        "tbody",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { className: "heat" },
                                (0, _loader._)("judging.labels.heat")
                            ),
                            React.createElement(
                                "th",
                                { className: "number" },
                                (0, _loader._)("judging.labels.number")
                            ),
                            React.createElement(
                                "th",
                                { className: "name" },
                                (0, _loader._)("judging.labels.participant_name")
                            ),
                            React.createElement(
                                "th",
                                { className: "acrobatics" },
                                (0, _loader._)("judging.labels.acrobatics")
                            ),
                            React.createElement(
                                "th",
                                { className: "performed" },
                                (0, _loader._)("judging.labels.performed")
                            ),
                            React.createElement(
                                "th",
                                { className: "total" },
                                (0, _loader._)("judging.labels.total_score")
                            ),
                            judges_header
                        ),
                        rows
                    )
                )
            );
        }
    }]);

    return TourAdminBody;
}(React.Component);

},{"./rosfarr/tour_admin":6,"common/tools":24,"l10n/loader":25,"server/api":28,"server/message_dispatcher":29,"server/storage":30,"ui/components":32,"ui/dialogs":33}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TourResultsBody = exports.TourResultsButtons = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _printable = require("ui/printable");

var _docx = require("common/docx");

var _loader2 = require("rules_sets/loader");

var _loader3 = _interopRequireDefault(_loader2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TourResultsButtons = exports.TourResultsButtons = function (_React$Component) {
    _inherits(TourResultsButtons, _React$Component);

    function TourResultsButtons() {
        _classCallCheck(this, TourResultsButtons);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourResultsButtons).apply(this, arguments));
    }

    _createClass(TourResultsButtons, [{
        key: "signal",
        value: function signal(message) {
            var _this2 = this;

            return function () {
                return _this2.props.onSignal(message);
            }.bind(this);
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "button",
                    { className: "btn btn-primary", onClick: this.signal("docx") },
                    "DOCX"
                )
            );
        }
    }]);

    return TourResultsButtons;
}(React.Component);

var TourResultsBody = exports.TourResultsBody = function (_React$Component2) {
    _inherits(TourResultsBody, _React$Component2);

    // Initialization

    function TourResultsBody(props) {
        _classCallCheck(this, TourResultsBody);

        var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(TourResultsBody).call(this, props));

        _this3.state = {
            tour: null,
            results: null
        };
        _this3.TOUR_SCHEMA = {
            discipline: {
                competition: {},
                discipline_judges: {
                    judge: {}
                }
            },
            runs: {
                acrobatics: {},
                scores: {},
                participant: {
                    club: {}
                }
            }
        };
        return _this3;
    }

    _createClass(TourResultsBody, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            var _this4 = this;

            this.storage = _storage.storage.getDomain("results_" + this.props.tour_id);
            this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
            this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
            this.results_change_listener = _message_dispatcher.message_dispatcher.addListener("tour_results_changed reload_data", function (message) {
                if (!message || message.tour_id === this.props.tour_id) {
                    this.loadResults();
                }
            }.bind(this));
            this.loadData();
            this.loadResults();
            if (this.props.autoDocx) {
                (function () {
                    var interval_id = setInterval(function () {
                        if (_this4.refs.content) {
                            clearInterval(interval_id);
                            _this4.createDocx(_this4.props.autoDocx.filename);
                            _this4.props.autoDocx.callback(_this4.props.autoDocx.filename);
                        }
                    }, 500);
                })();
            }
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
            _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
            _message_dispatcher.message_dispatcher.removeListener(this.results_change_listener);
            _storage.storage.delDomain("results_" + this.props.tour_id);
        }
    }, {
        key: "reloadFromStorage",
        value: function reloadFromStorage() {
            var serialized = this.storage.get("Tour").by_id(this.props.tour_id).serialize(this.TOUR_SCHEMA);
            this.setState({
                tour: serialized
            });
        }
    }, {
        key: "loadResults",
        value: function loadResults() {
            (0, _api.Api)("tour.get_results", { tour_id: this.props.tour_id }).onSuccess(function (new_results) {
                this.setState({
                    "results": new_results
                });
                this.reloadFromStorage();
            }.bind(this)).send();
        }
    }, {
        key: "loadData",
        value: function loadData() {
            (0, _api.Api)("tour.get", { tour_id: this.props.tour_id, children: this.TOUR_SCHEMA }).addToDB("Tour", this.props.tour_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
        }

        // Listeners

    }, {
        key: "onSignal",
        value: function onSignal(message) {
            switch (message) {
                case "docx":
                    this.createDocx();
                    break;
                default:
                    console.log("Unknown message:", message);
            }
        }

        // Rendering

    }, {
        key: "renderNonFinalizedWarning",
        value: function renderNonFinalizedWarning() {
            if (!this.state.tour.finalized) {
                return React.createElement(
                    "div",
                    { className: "alert alert-danger" },
                    (0, _loader._)("results.alerts.not_finalized")
                );
            }
        }
    }, {
        key: "render",
        value: function render() {
            // eslint-disable-line react/sort-comp
            if (this.state.tour === null || this.state.results === null) {
                return React.createElement(_components.Loader, null);
            }
            var table = null;
            if (this.props.verbosity === "3") {
                var ResultsComponent = _loader3.default.tour_results_table_3;
                table = React.createElement(ResultsComponent, this.state);
            } else if (this.props.verbosity === "2") {
                var ResultsComponent = _loader3.default.tour_results_table_2;
                table = React.createElement(ResultsComponent, this.state);
            } else {
                var ResultsComponent = _loader3.default.tour_results_table_1;
                table = React.createElement(ResultsComponent, this.state);
            }
            this.rendered = true;
            if (this.props.tableOnly) {
                return React.createElement(
                    "div",
                    { className: "tour-results", ref: "content" },
                    this.renderNonFinalizedWarning(),
                    table
                );
            }
            var body = React.createElement(
                "div",
                { className: "tour-results p-content", ref: "content" },
                this.renderNonFinalizedWarning(),
                table
            );
            return this.props.printable ? React.createElement(_printable.Printable, {
                ref: "printable",
                header: this.state.tour.discipline.competition.name + ", " + this.state.tour.discipline.competition.date,
                title1: (0, _loader._)("admin.headers.tour_results"),
                title2: this.state.tour.discipline.name,
                title3: this.state.tour.name,
                body: body }) : body;
        }
    }, {
        key: "createDocx",
        value: function createDocx() {
            var filename = arguments.length <= 0 || arguments[0] === undefined ? "tour-results.docx" : arguments[0];

            (0, _docx.Docx)(filename).setMargins([10, 10, 15, 10]).setHeader(this.state.tour.discipline.competition.name + ", " + this.state.tour.discipline.competition.date).setTitle1((0, _loader._)("admin.headers.tour_results")).setTitle2(this.state.tour.discipline.name).setTitle3(this.state.tour.name).setBody(ReactDOM.findDOMNode(this.refs.content).innerHTML).addStyle(".bordered-table", "font-size", this.props.verbosity === "1" ? "12pt" : "9pt").addStyle(".bordered-table .acro-table td", "font-size", "9pt").addStyle(".bordered-table .acro-table td", "padding", "0 3pt").addStyle(".bordered-table .acro-table td", "border", "0.5pt solid black").addStyle(".bordered-table .score-breakdown td, .bordered-table .score-breakdown th", "font-size", "9pt").addStyle(".bordered-table .score-breakdown td, .bordered-table .score-breakdown th", "border", "none").addStyle(".bordered-table .score-breakdown th", "padding", "0 1pt 0 0").addStyle(".bordered-table .score-breakdown td", "padding", "0 0 0 1pt").addStyle(".score-breakdown th", "text-align", "right").addStyle(".score-breakdown td", "text-align", "left").addStyle(".score-breakdown td", "text-align", "left").addStyle(".score-breakdown", "width", "50pt").addStyle(".advances-header", "background-color", "#ddd").addStyle(".total-score", "font-weight", "bold").addStyle(".head_judge", "width", "5%").addStyle(".dance_judge", "width", "8%").addStyle(".acro_judge", "width", "8%").save();
        }
    }]);

    return TourResultsBody;
}(React.Component);

},{"common/docx":23,"l10n/loader":25,"rules_sets/loader":27,"server/api":28,"server/message_dispatcher":29,"server/storage":30,"ui/components":32,"ui/printable":34}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Admin = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _main = require("./management/main");

var _main2 = require("./judging/main");

var _main3 = require("./service/main");

var _components = require("ui/components");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Admin = exports.Admin = function (_React$Component) {
    _inherits(Admin, _React$Component);

    // Intialization

    function Admin(props) {
        _classCallCheck(this, Admin);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Admin).call(this, props));

        _this.state = {
            active_app: _this.getActiveAppFromHash(),
            name: null
        };
        _message_dispatcher.message_dispatcher.addListener("db_update", _this.reloadFromStorage.bind(_this));
        _message_dispatcher.message_dispatcher.addListener("reload_data", _this.loadData.bind(_this));
        _this.loadData();
        return _this;
    }

    _createClass(Admin, [{
        key: "reloadFromStorage",
        value: function reloadFromStorage() {
            var SCHEMA = {
                clubs: {},
                judges: {},
                plan: {},
                disciplines: {
                    discipline_judges: {
                        judge: {}
                    },
                    tours: {}
                }
            };
            this.setState(_storage.storage.get("Competition").by_id(this.props.competition_id).serialize(SCHEMA));
        }
    }, {
        key: "loadData",
        value: function loadData() {
            (0, _api.Api)("competition.get", {
                competition_id: this.props.competition_id,
                children: {
                    clubs: {},
                    judges: {},
                    plan: {},
                    disciplines: {
                        discipline_judges: {
                            judge: {}
                        },
                        tours: {}
                    }
                }
            }).addToDB("Competition", this.props.competition_id).onSuccess(this.reloadFromStorage.bind(this)).send();
        }

        // Navigation

    }, {
        key: "setApp",
        value: function setApp(app) {
            this.setState({
                active_app: app
            });
            window.location.hash = "#" + app;
        }
    }, {
        key: "getActiveAppFromHash",
        value: function getActiveAppFromHash(app) {
            var chunks = window.location.hash.substr(1).split("/");
            if (chunks[0] && ["judging", "management", "service"].indexOf(chunks[0]) >= 0) {
                return chunks[0];
            }
            return "management";
        }

        // Rendering

    }, {
        key: "renderActiveApp",
        value: function renderActiveApp() {
            switch (this.state.active_app) {
                case "judging":
                    return React.createElement(_main2.Judging, {
                        competition_plan: this.state.plan,
                        disciplines: this.state.disciplines });
                case "management":
                    return React.createElement(_main.Management, {
                        disciplines: this.state.disciplines,
                        clubs: this.state.clubs,
                        judges: this.state.judges,
                        competition_plan: this.state.plan,
                        competition_name: this.state.name,
                        competition_date: this.state.date,
                        competition_id: this.props.competition_id,
                        rules_set: this.state.rules_set });
                case "service":
                    return React.createElement(_main3.Service, {
                        competition_id: this.props.competition_id,
                        disciplines: this.state.disciplines });
            }
        }
    }, {
        key: "render",
        value: function render() {
            if (this.state.name === null) {
                return React.createElement(_components.Loader, null);
            }
            return React.createElement(
                "div",
                { className: "wrapper" },
                React.createElement(
                    "div",
                    { className: "header" },
                    React.createElement(
                        "div",
                        { className: "caption" },
                        this.state.name,
                        " (",
                        this.state.date,
                        ")"
                    )
                ),
                React.createElement(
                    "div",
                    { className: "body" },
                    React.createElement(
                        "div",
                        { className: "left-col noselect" },
                        React.createElement(
                            "div",
                            { className: "button" + (this.state.active_app === "management" ? " active" : ""), onClick: this.setApp.bind(this, "management") },
                            React.createElement(
                                "div",
                                { className: "icon" },
                                "M"
                            ),
                            React.createElement(
                                "div",
                                { className: "label" },
                                "Management"
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "button" + (this.state.active_app === "judging" ? " active" : ""), onClick: this.setApp.bind(this, "judging") },
                            React.createElement(
                                "div",
                                { className: "icon" },
                                "J"
                            ),
                            React.createElement(
                                "div",
                                { className: "label" },
                                "Judging"
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "button" + (this.state.active_app === "service" ? " active" : ""), onClick: this.setApp.bind(this, "service") },
                            React.createElement(
                                "div",
                                { className: "icon" },
                                "S"
                            ),
                            React.createElement(
                                "div",
                                { className: "label" },
                                "Service"
                            )
                        ),
                        React.createElement("div", { className: "spacer" }),
                        React.createElement(
                            "div",
                            { className: "bottom-cell" },
                            React.createElement(
                                "a",
                                { className: "btn-back", href: "/" },
                                (0, _loader._)("admin.buttons.to_start_page")
                            )
                        )
                    ),
                    this.renderActiveApp()
                )
            );
        }
    }]);

    return Admin;
}(React.Component);

},{"./judging/main":4,"./management/main":16,"./service/main":21,"l10n/loader":25,"server/api":28,"server/message_dispatcher":29,"server/storage":30,"ui/components":32}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Clubs = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _dialogs = require("ui/dialogs");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Clubs = exports.Clubs = function (_React$Component) {
    _inherits(Clubs, _React$Component);

    function Clubs(props) {
        _classCallCheck(this, Clubs);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Clubs).call(this, props));

        _this.state = {
            creating: false
        };
        return _this;
    }

    _createClass(Clubs, [{
        key: "renderTable",
        value: function renderTable() {
            var rows = this.props.clubs.map(function (club) {
                return React.createElement(ClubRow, {
                    key: club.id,
                    club: club });
            }.bind(this));
            return React.createElement(
                "div",
                { className: "manage-clubs" },
                React.createElement(
                    "table",
                    { className: "table table-striped" },
                    React.createElement(
                        "tbody",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { className: "name" },
                                (0, _loader._)("models.club.name")
                            ),
                            React.createElement(
                                "th",
                                { className: "city" },
                                (0, _loader._)("models.club.city")
                            ),
                            React.createElement(
                                "th",
                                { className: "external-id" },
                                (0, _loader._)("models.club.external_id")
                            ),
                            React.createElement("th", { className: "delete" })
                        ),
                        rows,
                        React.createElement(ClubCreationRow, { competition_id: this.props.competition_id })
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "app-content" },
                React.createElement(
                    "header",
                    { className: "app-header" },
                    React.createElement(
                        "h1",
                        null,
                        (0, _loader._)("admin.headers.clubs_management")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "app-body" },
                    this.renderTable()
                )
            );
        }
    }]);

    return Clubs;
}(React.Component);

var ClubEditorRow = function (_React$Component2) {
    _inherits(ClubEditorRow, _React$Component2);

    function ClubEditorRow() {
        _classCallCheck(this, ClubEditorRow);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ClubEditorRow).apply(this, arguments));
    }

    _createClass(ClubEditorRow, [{
        key: "sertialize",
        value: function sertialize() {
            return {
                name: this._name.value,
                city: this._city.value,
                external_id: this._external_id.value
            };
        }
    }, {
        key: "onSubmit",
        value: function onSubmit(event) {
            event.preventDefault();
            if (!this.props.newClub) {
                (0, _api.Api)("club.set", {
                    club_id: this.props.club.id,
                    data: this.sertialize()
                }).onSuccess(this.props.stopEditing).send();
            } else {
                (0, _api.Api)("club.create", {
                    competition_id: this.props.competition_id,
                    data: this.sertialize()
                }).onSuccess(this.props.stopEditing).send();
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            return React.createElement(
                "tr",
                { className: "editor" + (this.props.newClub ? " create" : "") },
                React.createElement(
                    "td",
                    { colSpan: "4" },
                    React.createElement(
                        "form",
                        { onSubmit: this.onSubmit.bind(this) },
                        React.createElement(
                            "div",
                            { className: "rows" },
                            React.createElement(
                                "div",
                                { className: "col-md-5" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.club.name"),
                                    React.createElement("input", {
                                        ref: function (e) {
                                            if (e) {
                                                e.select();this._name = e;
                                            }
                                        }.bind(this),
                                        className: "full-width",
                                        defaultValue: this.props.club.name })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-md-2" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.club.city"),
                                    React.createElement("input", {
                                        ref: function ref(e) {
                                            return e && (_this3._city = e);
                                        },
                                        className: "full-width",
                                        defaultValue: this.props.club.city })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-md-2" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.club.external_id"),
                                    React.createElement("br", null),
                                    React.createElement("input", {
                                        ref: function ref(e) {
                                            return e && (_this3._external_id = e);
                                        },
                                        defaultValue: this.props.club.external_id })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-md-3" },
                                React.createElement(
                                    "div",
                                    { className: "buttons" },
                                    React.createElement(
                                        "button",
                                        {
                                            type: "submit",
                                            className: "btn btn-primary" },
                                        (0, _loader._)("global.buttons.submit")
                                    ),
                                    React.createElement(
                                        "button",
                                        {
                                            type: "button",
                                            className: "btn btn-danger",
                                            onClick: this.props.stopEditing },
                                        (0, _loader._)("global.buttons.discard")
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return ClubEditorRow;
}(React.Component);

var ClubRow = function (_React$Component3) {
    _inherits(ClubRow, _React$Component3);

    function ClubRow(props) {
        _classCallCheck(this, ClubRow);

        var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(ClubRow).call(this, props));

        _this4.state = {
            editing: false
        };
        return _this4;
    }

    _createClass(ClubRow, [{
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "onDelete",
        value: function onDelete(event) {
            var _this5 = this;

            event.stopPropagation();
            (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_club"), function () {
                (0, _api.Api)("club.delete", {
                    club_id: _this5.props.club.id
                }).onSuccess(function () {
                    return swal.close();
                }).send();
            });
        }
    }, {
        key: "renderEditor",
        value: function renderEditor() {
            return React.createElement(ClubEditorRow, _extends({
                newClub: false,
                stopEditing: this.stopEditing.bind(this)
            }, this.props));
        }
    }, {
        key: "renderViewer",
        value: function renderViewer() {
            var c = this.props.club;
            return React.createElement(
                "tr",
                { className: "viewer", onClick: this.startEditing.bind(this) },
                React.createElement(
                    "td",
                    { className: "name" },
                    c.name
                ),
                React.createElement(
                    "td",
                    { className: "city" },
                    c.city
                ),
                React.createElement(
                    "td",
                    { className: "external-id" },
                    c.external_id
                ),
                React.createElement(
                    "td",
                    { className: "delete" },
                    React.createElement(
                        "button",
                        { className: "btn btn-danger", onClick: this.onDelete.bind(this) },
                        "X"
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            if (this.state.editing) {
                return this.renderEditor();
            } else {
                return this.renderViewer();
            }
        }
    }]);

    return ClubRow;
}(React.Component);

var ClubCreationRow = function (_React$Component4) {
    _inherits(ClubCreationRow, _React$Component4);

    function ClubCreationRow(props) {
        _classCallCheck(this, ClubCreationRow);

        var _this6 = _possibleConstructorReturn(this, Object.getPrototypeOf(ClubCreationRow).call(this, props));

        _this6.state = {
            editing: false
        };
        return _this6;
    }

    _createClass(ClubCreationRow, [{
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "renderEditor",
        value: function renderEditor() {
            var empty_data = {
                "name": "",
                "city": "",
                "external_id": ""
            };
            return React.createElement(ClubEditorRow, _extends({
                newClub: true,
                stopEditing: this.stopEditing.bind(this),
                club: empty_data
            }, this.props));
        }
    }, {
        key: "renderButton",
        value: function renderButton() {
            return React.createElement(
                "tr",
                null,
                React.createElement(
                    "td",
                    { colSpan: "4" },
                    React.createElement(
                        "button",
                        {
                            type: "button",
                            className: "btn btn-default full-width",
                            onClick: this.startEditing.bind(this) },
                        (0, _loader._)("admin.buttons.add_club")
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return this.state.editing ? this.renderEditor() : this.renderButton();
        }
    }]);

    return ClubCreationRow;
}(React.Component);

},{"l10n/loader":25,"server/api":28,"ui/dialogs":33}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CompetitionPlan = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _docx = require("common/docx");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CompetitionPlan = exports.CompetitionPlan = function (_React$Component) {
    _inherits(CompetitionPlan, _React$Component);

    function CompetitionPlan(props) {
        _classCallCheck(this, CompetitionPlan);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CompetitionPlan).call(this, props));

        _this.state = {
            creating: false
        };
        return _this;
    }

    _createClass(CompetitionPlan, [{
        key: "genTours",
        value: function genTours() {
            var result = [];
            this.props.disciplines.forEach(function (discipline) {
                return discipline.tours.forEach(function (tour) {
                    return result.push({
                        id: tour.id,
                        name: discipline.name + " — " + tour.name,
                        discipline_id: discipline.id,
                        discipline_name: discipline.name,
                        tour_name: tour.name
                    });
                });
            });
            return result;
        }
    }, {
        key: "renderTable",
        value: function renderTable(tours) {
            var tours_count = {};
            var tours_index = {};
            var disciplines_index = {};
            tours.forEach(function (tour) {
                return tours_index[tour.id] = tour;
            });
            this.props.items.forEach(function (item) {
                if (item.tour_id) {
                    tours_count[item.tour_id] = tours_count[item.tour_id] ? tours_count[item.tour_id] + 1 : 1;
                }
            });
            var discipline_cursors = {};
            this.props.disciplines.forEach(function (discipline) {
                return discipline_cursors[discipline.id] = 0;
            });
            this.props.disciplines.forEach(function (discipline) {
                return disciplines_index[discipline.id] = discipline;
            });
            var rows = this.props.items.map(function (item) {
                var error = (tours_count[item.tour_id] || 0) > 2;
                if (item.tour_id) {
                    var discipline_id = tours_index[item.tour_id].discipline_id;
                    var tour_idx = discipline_cursors[discipline_id];
                    if (!disciplines_index[discipline_id].tours[tour_idx] || item.tour_id !== disciplines_index[discipline_id].tours[tour_idx].id) {
                        error = true;
                        disciplines_index[discipline_id].tours.forEach(function (tour, idx) {
                            if (tour.id === item.tour_id) {
                                tour_idx = idx;
                            }
                        });
                    }
                    discipline_cursors[discipline_id] = tour_idx + 1;
                }
                return React.createElement(CompetitionPlanItemRow, {
                    key: item.id,
                    error: error,
                    tours: tours,
                    item: item });
            });
            var unpicked_tours = tours.filter(function (tour) {
                return !tours_count[tour.id];
            });
            var unpicked_tours_html = !unpicked_tours.length ? null : React.createElement(
                "div",
                null,
                React.createElement(
                    "h4",
                    null,
                    (0, _loader._)("admin.headers.unpicked_tours")
                ),
                React.createElement(
                    "ul",
                    { className: "unpicked-tours" },
                    unpicked_tours.map(function (tour) {
                        return React.createElement(
                            "li",
                            { className: "item", key: tour.id },
                            tour.name
                        );
                    })
                )
            );
            return React.createElement(
                "div",
                { className: "manage-competition-plan" },
                React.createElement(
                    "table",
                    { className: "table table-striped" },
                    React.createElement(
                        "tbody",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { className: "sp" },
                                (0, _loader._)("models.competition_plan_item.sp")
                            ),
                            React.createElement(
                                "th",
                                { className: "discipline" },
                                (0, _loader._)("models.competition_plan_item.discipline")
                            ),
                            React.createElement(
                                "th",
                                { className: "tour" },
                                (0, _loader._)("models.competition_plan_item.tour")
                            ),
                            React.createElement(
                                "th",
                                { className: "estimated_beginning" },
                                (0, _loader._)("models.competition_plan_item.estimated_beginning")
                            ),
                            React.createElement(
                                "th",
                                { className: "estimated_duration" },
                                (0, _loader._)("models.competition_plan_item.estimated_duration")
                            ),
                            React.createElement("th", { className: "delete" })
                        ),
                        rows,
                        React.createElement(CompetitionPlanItemCreationRow, { competition_id: this.props.competition_id, tours: tours })
                    )
                ),
                unpicked_tours_html
            );
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            // eslint-disable-line react/sort-comp
            var tours = this.genTours();
            return React.createElement(
                "div",
                { className: "app-content" },
                React.createElement(
                    "header",
                    { className: "app-header" },
                    React.createElement(
                        "div",
                        { className: "controls" },
                        React.createElement(
                            "button",
                            { className: "btn btn-primary", onClick: function onClick() {
                                    return _this2.createDocx();
                                }, key: "btn-init-tour" },
                            "DOCX"
                        )
                    ),
                    React.createElement(
                        "h1",
                        null,
                        (0, _loader._)("admin.headers.competition_plan_management")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "app-body" },
                    this.renderTable(tours),
                    React.createElement(PrintableCompetitionPlan, _extends({ ref: "printable_competition_plan", tours: tours }, this.props))
                )
            );
        }
    }, {
        key: "createDocx",
        value: function createDocx() {
            var filename = arguments.length <= 0 || arguments[0] === undefined ? "program.docx" : arguments[0];

            (0, _docx.Docx)(filename).setMargins([10, 15, 10, 15]).setHeader(this.props.competition_name + ", " + this.props.competition_date).setTitle1((0, _loader._)("admin.headers.competition_plan")).setBody(ReactDOM.findDOMNode(this.refs.printable_competition_plan).innerHTML).save();
        }
    }]);

    return CompetitionPlan;
}(React.Component);

var PrintableCompetitionPlanRow = function (_React$Component2) {
    _inherits(PrintableCompetitionPlanRow, _React$Component2);

    function PrintableCompetitionPlanRow() {
        _classCallCheck(this, PrintableCompetitionPlanRow);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(PrintableCompetitionPlanRow).apply(this, arguments));
    }

    _createClass(PrintableCompetitionPlanRow, [{
        key: "renderName",
        value: function renderName() {
            var _this4 = this;

            if (this.props.item.verbose_name) {
                return React.createElement(
                    "td",
                    { colSpan: "2" },
                    React.createElement(
                        "p",
                        null,
                        React.createElement(
                            "strong",
                            null,
                            this.props.item.verbose_name
                        )
                    )
                );
            }
            if (this.props.item.tour_id) {
                var result = "";
                this.props.tours.forEach(function (tour) {
                    if (tour.id === _this4.props.item.tour_id) {
                        result = tour;
                    }
                });
                return [React.createElement(
                    "td",
                    { key: "D" },
                    React.createElement(
                        "p",
                        null,
                        result.discipline_name
                    )
                ), React.createElement(
                    "td",
                    { key: "T" },
                    React.createElement(
                        "p",
                        { className: "text-center" },
                        result.tour_name
                    )
                )];
            }
            return React.createElement(
                "td",
                { colSpan: "2" },
                React.createElement("p", null)
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "tr",
                null,
                React.createElement(
                    "td",
                    null,
                    React.createElement(
                        "p",
                        { className: "text-center" },
                        this.props.item.estimated_beginning || React.createElement(
                            "span",
                            null,
                            " "
                        )
                    )
                ),
                this.renderName(),
                React.createElement(
                    "td",
                    null,
                    React.createElement(
                        "p",
                        { className: "text-center" },
                        this.props.item.estimated_duration || React.createElement(
                            "span",
                            null,
                            " "
                        )
                    )
                )
            );
        }
    }]);

    return PrintableCompetitionPlanRow;
}(React.Component);

var PrintableCompetitionPlan = function (_React$Component3) {
    _inherits(PrintableCompetitionPlan, _React$Component3);

    function PrintableCompetitionPlan() {
        _classCallCheck(this, PrintableCompetitionPlan);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(PrintableCompetitionPlan).apply(this, arguments));
    }

    _createClass(PrintableCompetitionPlan, [{
        key: "render",
        value: function render() {
            var _this6 = this;

            return React.createElement(
                "div",
                { className: "print-only" },
                React.createElement(
                    "table",
                    { className: "bordered-table" },
                    React.createElement(
                        "thead",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                null,
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("models.competition_plan_item.estimated_beginning")
                                )
                            ),
                            React.createElement(
                                "th",
                                null,
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("models.competition_plan_item.discipline")
                                )
                            ),
                            React.createElement(
                                "th",
                                null,
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("models.competition_plan_item.tour")
                                )
                            ),
                            React.createElement(
                                "th",
                                null,
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("models.competition_plan_item.estimated_duration")
                                )
                            )
                        )
                    ),
                    React.createElement(
                        "tbody",
                        null,
                        this.props.items.map(function (item) {
                            return React.createElement(PrintableCompetitionPlanRow, { item: item, tours: _this6.props.tours, key: item.id });
                        })
                    )
                )
            );
        }
    }]);

    return PrintableCompetitionPlan;
}(React.Component);

var CompetitionPlanItemEditorRow = function (_React$Component4) {
    _inherits(CompetitionPlanItemEditorRow, _React$Component4);

    function CompetitionPlanItemEditorRow() {
        _classCallCheck(this, CompetitionPlanItemEditorRow);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(CompetitionPlanItemEditorRow).apply(this, arguments));
    }

    _createClass(CompetitionPlanItemEditorRow, [{
        key: "sertialize",
        value: function sertialize() {
            return {
                sp: parseInt(this._sp.value) || 0,
                tour_id: this._tour_id.value === "" ? null : parseInt(this._tour_id.value),
                verbose_name: this._verbose_name.value,
                estimated_beginning: this._estimated_beginning.value,
                estimated_duration: this._estimated_duration.value
            };
        }
    }, {
        key: "onSubmit",
        value: function onSubmit(event) {
            event.preventDefault();
            if (!this.props.newCompetitionPlanItem) {
                (0, _api.Api)("competition_plan_item.set", {
                    competition_plan_item_id: this.props.item.id,
                    data: this.sertialize()
                }).onSuccess(this.props.stopEditing).send();
            } else {
                (0, _api.Api)("competition_plan_item.create", {
                    competition_id: this.props.competition_id,
                    data: this.sertialize()
                }).onSuccess(this.props.stopEditing).send();
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this8 = this;

            return React.createElement(
                "tr",
                { className: "editor" + (this.props.newCompetitionPlanItem ? " create" : "") },
                React.createElement(
                    "td",
                    { colSpan: "6" },
                    React.createElement(
                        "form",
                        { onSubmit: this.onSubmit.bind(this) },
                        React.createElement(
                            "div",
                            { className: "rows" },
                            React.createElement(
                                "div",
                                { className: "col-md-2" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.competition_plan_item.sp"),
                                    React.createElement("input", {
                                        ref: function (e) {
                                            if (e) {
                                                e.select();this._sp = e;
                                            }
                                        }.bind(this),
                                        className: "full-width",
                                        defaultValue: this.props.item.sp })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-md-5" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.competition_plan_item.verbose_name"),
                                    React.createElement("input", {
                                        ref: function ref(e) {
                                            return e && (_this8._verbose_name = e);
                                        },
                                        className: "full-width",
                                        defaultValue: this.props.item.verbose_name })
                                ),
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.competition_plan_item.tour"),
                                    React.createElement(
                                        "select",
                                        {
                                            ref: function ref(e) {
                                                return e && (_this8._tour_id = e);
                                            },
                                            className: "full-width",
                                            defaultValue: this.props.item.tour_id || "" },
                                        React.createElement(
                                            "option",
                                            { value: "" },
                                            "----------"
                                        ),
                                        this.props.tours.map(function (tour) {
                                            return React.createElement(
                                                "option",
                                                { value: tour.id, key: tour.id },
                                                tour.name
                                            );
                                        })
                                    )
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-md-2" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.competition_plan_item.estimated_beginning"),
                                    React.createElement("input", {
                                        ref: function ref(e) {
                                            return e && (_this8._estimated_beginning = e);
                                        },
                                        className: "full-width",
                                        defaultValue: this.props.item.estimated_beginning })
                                ),
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.competition_plan_item.estimated_duration"),
                                    React.createElement("input", {
                                        ref: function ref(e) {
                                            return e && (_this8._estimated_duration = e);
                                        },
                                        className: "full-width",
                                        defaultValue: this.props.item.estimated_duration })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-md-3" },
                                React.createElement(
                                    "div",
                                    { className: "buttons" },
                                    React.createElement(
                                        "button",
                                        {
                                            type: "submit",
                                            className: "btn btn-primary" },
                                        (0, _loader._)("global.buttons.submit")
                                    ),
                                    React.createElement(
                                        "button",
                                        {
                                            type: "button",
                                            className: "btn btn-danger",
                                            onClick: this.props.stopEditing },
                                        (0, _loader._)("global.buttons.discard")
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return CompetitionPlanItemEditorRow;
}(React.Component);

var CompetitionPlanItemRow = function (_React$Component5) {
    _inherits(CompetitionPlanItemRow, _React$Component5);

    function CompetitionPlanItemRow(props) {
        _classCallCheck(this, CompetitionPlanItemRow);

        var _this9 = _possibleConstructorReturn(this, Object.getPrototypeOf(CompetitionPlanItemRow).call(this, props));

        _this9.state = {
            editing: false
        };
        return _this9;
    }

    _createClass(CompetitionPlanItemRow, [{
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "onDelete",
        value: function onDelete(event) {
            event.stopPropagation();
            (0, _api.Api)("competition_plan_item.delete", {
                competition_plan_item_id: this.props.item.id
            }).send();
        }
    }, {
        key: "getName",
        value: function getName() {
            var c = this.props.item;
            if (c.verbose_name) {
                return React.createElement(
                    "td",
                    { colSpan: "2" },
                    React.createElement(
                        "b",
                        null,
                        c.verbose_name
                    )
                );
            }
            var result = React.createElement("td", { colSpan: "2" });
            this.props.tours.forEach(function (tour) {
                if (tour.id === c.tour_id) {
                    result = [React.createElement(
                        "td",
                        { key: "D" },
                        tour.discipline_name
                    ), React.createElement(
                        "td",
                        { key: "T" },
                        tour.tour_name
                    )];
                }
            });
            return result;
        }
    }, {
        key: "renderEditor",
        value: function renderEditor() {
            return React.createElement(CompetitionPlanItemEditorRow, _extends({
                newCompetitionPlanItem: false,
                stopEditing: this.stopEditing.bind(this)
            }, this.props));
        }
    }, {
        key: "renderViewer",
        value: function renderViewer() {
            var c = this.props.item;
            return React.createElement(
                "tr",
                { className: "viewer" + (this.props.error ? " error" : ""), onClick: this.startEditing.bind(this) },
                React.createElement(
                    "td",
                    { className: "sp" },
                    c.sp
                ),
                this.getName(),
                React.createElement(
                    "td",
                    { className: "estimated_beginning" },
                    c.estimated_beginning
                ),
                React.createElement(
                    "td",
                    { className: "estimated_duration" },
                    c.estimated_duration
                ),
                React.createElement(
                    "td",
                    { className: "delete" },
                    React.createElement(
                        "button",
                        { className: "btn btn-danger", onClick: this.onDelete.bind(this) },
                        "X"
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            if (this.state.editing) {
                return this.renderEditor();
            } else {
                return this.renderViewer();
            }
        }
    }]);

    return CompetitionPlanItemRow;
}(React.Component);

var CompetitionPlanItemCreationRow = function (_React$Component6) {
    _inherits(CompetitionPlanItemCreationRow, _React$Component6);

    function CompetitionPlanItemCreationRow(props) {
        _classCallCheck(this, CompetitionPlanItemCreationRow);

        var _this10 = _possibleConstructorReturn(this, Object.getPrototypeOf(CompetitionPlanItemCreationRow).call(this, props));

        _this10.state = {
            editing: false
        };
        return _this10;
    }

    _createClass(CompetitionPlanItemCreationRow, [{
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "renderEditor",
        value: function renderEditor() {
            var empty_data = {
                "sp": "",
                "verbose_name": "",
                "tour_id": null,
                "estimated_duration": "",
                "estimated_beginning": ""
            };
            return React.createElement(CompetitionPlanItemEditorRow, _extends({
                newCompetitionPlanItem: true,
                stopEditing: this.stopEditing.bind(this),
                item: empty_data
            }, this.props));
        }
    }, {
        key: "renderButton",
        value: function renderButton() {
            return React.createElement(
                "tr",
                null,
                React.createElement(
                    "td",
                    { colSpan: "6" },
                    React.createElement(
                        "button",
                        {
                            type: "button",
                            className: "btn btn-default full-width",
                            onClick: this.startEditing.bind(this) },
                        (0, _loader._)("admin.buttons.add_competition_plan_item")
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return this.state.editing ? this.renderEditor() : this.renderButton();
        }
    }]);

    return CompetitionPlanItemCreationRow;
}(React.Component);

},{"common/docx":23,"l10n/loader":25,"server/api":28}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CompetitionReport = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _admin_components = require("ui/admin_components");

var _components = require("ui/components");

var _printable = require("ui/printable");

var _docx = require("common/docx");

var _tools = require("common/tools");

var _discipline_results = require("../judging/discipline_results");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CompetitionReport = exports.CompetitionReport = function (_React$Component) {
    _inherits(CompetitionReport, _React$Component);

    function CompetitionReport(props) {
        _classCallCheck(this, CompetitionReport);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CompetitionReport).call(this, props));

        _this.onConfigChange = function (new_config) {
            _this.setState({
                config: new_config
            });
        };

        _this.createDocx = function () {
            (0, _docx.Docx)("report.docx").setMargins([10, 15, 10, 25]).setTitle1(_this.getTitle()).setBody(_this.refs.printable.fetchPrintableData()).addStyle(".spacer td", "height", "5pt").addStyle(".tour-name", "background", "#ddd").addStyle(".bordered-table .sportsmen td, .bordered-table .sportsmen th", "border", "none").addStyle(".bordered-table .sportsmen td, .bordered-table .sportsmen th", "padding", "0").addStyle(".sportsmen", "width", "100%").save();
        };

        _this.state = {
            competition: null,
            config: {
                include_extended_info: true,
                include_clubs: true,
                include_judges: true,
                include_discipline_judges: false,
                disciplines: {}
            }
        };
        _message_dispatcher.message_dispatcher.addListener("db_update", _this.reloadFromStorage.bind(_this));
        _message_dispatcher.message_dispatcher.addListener("reload_data", _this.loadData.bind(_this));
        return _this;
    }

    _createClass(CompetitionReport, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            this.storage = _storage.storage.getDomain("start_list_" + this.props.competition_id);
            this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
            this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
            this.loadData();
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
            _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
            _storage.storage.delDomain("start_list_" + this.props.competition_id);
        }
    }, {
        key: "reloadFromStorage",
        value: function reloadFromStorage() {
            var SCHEMA = {
                disciplines: {
                    discipline_judges: {
                        judge: {}
                    }
                },
                judges: {},
                clubs: {
                    participants: {}
                }
            };
            var competition = this.storage.get("Competition").by_id(this.props.competition_id).serialize(SCHEMA);
            var config = (0, _tools.clone)(this.state.config);
            var new_disciplines = {};
            competition.disciplines.forEach(function (discipline) {
                new_disciplines[discipline.id] = discipline.id in config.disciplines ? config.disciplines[discipline.id] : true;
            });
            config.disciplines = new_disciplines;
            this.setState({
                config: config,
                competition: competition
            });
        }
    }, {
        key: "loadData",
        value: function loadData() {
            (0, _api.Api)("competition.get", {
                competition_id: this.props.competition_id,
                children: {
                    disciplines: {
                        discipline_judges: {
                            judge: {}
                        }
                    },
                    judges: {},
                    clubs: {
                        participants: {}
                    }
                }
            }).addToDB("Competition", this.props.competition_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
        }
    }, {
        key: "getTitle",
        value: function getTitle() {
            var _this2 = this;

            var n_disciplines = Object.keys(this.state.config.disciplines).filter(function (key) {
                return _this2.state.config.disciplines[key];
            }).length;
            var title = n_disciplines > 0 ? (0, _loader._)("admin.headers.competition_report") : (0, _loader._)("admin.headers.competition_info");
            return title;
        }
    }, {
        key: "render",
        value: function render() {
            // eslint-disable-line react/sort-comp
            if (this.state.competition === null) {
                return React.createElement(_components.Loader, null);
            }
            var title = this.getTitle();
            var body = React.createElement(
                "div",
                null,
                React.createElement(Info, this.state),
                React.createElement(Clubs, this.state),
                React.createElement(Judges, this.state),
                React.createElement(DisciplineJudges, this.state),
                React.createElement(Results, this.state)
            );
            return React.createElement(
                "div",
                { className: "app-content" },
                React.createElement(
                    "header",
                    { className: "app-header" },
                    React.createElement(
                        "div",
                        { className: "controls" },
                        React.createElement(
                            "button",
                            { className: "btn btn-primary", onClick: this.createDocx },
                            "DOCX"
                        )
                    ),
                    React.createElement(
                        "h1",
                        null,
                        title
                    )
                ),
                React.createElement(
                    "div",
                    { className: "app-body competition-report" },
                    React.createElement(_admin_components.DisciplinesControls, {
                        custom_controls: [{ key: "include_extended_info", label: (0, _loader._)("admin.labels.include_extended_info") }, { key: "include_clubs", label: (0, _loader._)("admin.labels.include_clubs") }, { key: "include_judges", label: (0, _loader._)("admin.labels.include_judges") }, { key: "include_discipline_judges", label: (0, _loader._)("admin.labels.include_discipline_judges") }],
                        config: this.state.config,
                        disciplines: this.state.competition.disciplines,
                        onChange: this.onConfigChange }),
                    React.createElement(_printable.Printable, {
                        ref: "printable",
                        title1: title,
                        body: body })
                )
            );
        }
    }]);

    return CompetitionReport;
}(React.Component);

var Info = function (_React$Component2) {
    _inherits(Info, _React$Component2);

    function Info() {
        _classCallCheck(this, Info);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Info).apply(this, arguments));
    }

    _createClass(Info, [{
        key: "renderExtendedInfo",
        value: function renderExtendedInfo() {
            if (!this.props.config.include_extended_info) {
                return null;
            }
            return this.props.competition.info.map(function (row, idx) {
                return React.createElement(
                    "tr",
                    { key: idx },
                    React.createElement(
                        "th",
                        { className: "w-40" },
                        React.createElement(
                            "p",
                            { className: "text-left" },
                            row[0]
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "w-60" },
                        React.createElement(
                            "p",
                            null,
                            row[1]
                        )
                    )
                );
            });
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "table",
                { className: "info" },
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "w-40" },
                            React.createElement(
                                "p",
                                { className: "text-left" },
                                (0, _loader._)("admin.labels.competition_name")
                            )
                        ),
                        React.createElement(
                            "td",
                            { className: "w-60" },
                            React.createElement(
                                "p",
                                null,
                                React.createElement(
                                    "strong",
                                    null,
                                    this.props.competition.name
                                )
                            )
                        )
                    ),
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "w-40" },
                            React.createElement(
                                "p",
                                { className: "text-left" },
                                (0, _loader._)("admin.labels.competition_date")
                            )
                        ),
                        React.createElement(
                            "td",
                            { className: "w-60" },
                            React.createElement(
                                "p",
                                null,
                                React.createElement(
                                    "strong",
                                    null,
                                    this.props.competition.date
                                )
                            )
                        )
                    ),
                    this.renderExtendedInfo()
                )
            );
        }
    }]);

    return Info;
}(React.Component);

var Clubs = function (_React$Component3) {
    _inherits(Clubs, _React$Component3);

    function Clubs() {
        _classCallCheck(this, Clubs);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Clubs).apply(this, arguments));
    }

    _createClass(Clubs, [{
        key: "render",
        value: function render() {
            if (!this.props.config.include_clubs) {
                return null;
            }
            var clubs = this.props.competition.clubs.filter(function (club) {
                return club.participants.length > 0;
            });
            var clubs_dict = {};
            var cities = [];
            clubs.forEach(function (club) {
                return clubs_dict[club.city] = [];
            });
            clubs.forEach(function (club) {
                return clubs_dict[club.city].push(club.name);
            });
            clubs.forEach(function (club) {
                return clubs_dict[club.city].sort;
            });
            Object.getOwnPropertyNames(clubs_dict).forEach(function (city) {
                return cities.push(city);
            });
            cities.sort();
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "h4",
                    null,
                    React.createElement(
                        "p",
                        null,
                        (0, _loader._)("admin.headers.clubs")
                    )
                ),
                React.createElement(
                    "table",
                    { className: "clubs" },
                    React.createElement(
                        "tbody",
                        null,
                        cities.map(function (city) {
                            return React.createElement(
                                "tr",
                                { key: city, className: "va-top" },
                                React.createElement(
                                    "th",
                                    { className: "w-20" },
                                    React.createElement(
                                        "p",
                                        { className: "text-left" },
                                        city
                                    )
                                ),
                                React.createElement(
                                    "td",
                                    { className: "w-80" },
                                    React.createElement(
                                        "p",
                                        null,
                                        clubs_dict[city].join(", ")
                                    )
                                )
                            );
                        })
                    )
                )
            );
        }
    }]);

    return Clubs;
}(React.Component);

var Judges = function (_React$Component4) {
    _inherits(Judges, _React$Component4);

    function Judges() {
        _classCallCheck(this, Judges);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Judges).apply(this, arguments));
    }

    _createClass(Judges, [{
        key: "renderIdx",
        value: function renderIdx(idx, numbers) {
            if (!this.props.config.include_discipline_judges) {
                return null;
            }
            return React.createElement(
                "td",
                { className: "w-10" },
                React.createElement(
                    "p",
                    { className: "text-right" },
                    numbers[idx]
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            var _this6 = this;

            if (!this.props.config.include_judges) {
                return null;
            }
            var numbers = Judges.genJudgesNumbers(this.props.competition);
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "h4",
                    null,
                    React.createElement(
                        "p",
                        null,
                        (0, _loader._)("admin.headers.judges")
                    )
                ),
                React.createElement(
                    "table",
                    { className: "judges" },
                    React.createElement(
                        "tbody",
                        null,
                        this.props.competition.judges.map(function (judge, idx) {
                            return React.createElement(
                                "tr",
                                { key: judge.id },
                                _this6.renderIdx(idx, numbers),
                                React.createElement(
                                    "th",
                                    { className: "w-35" },
                                    React.createElement(
                                        "p",
                                        { className: "text-left" },
                                        judge.role_description || (0, _loader._)("global.phrases.judge_n", judge.number)
                                    )
                                ),
                                React.createElement(
                                    "td",
                                    { className: "w-55" },
                                    React.createElement(
                                        "p",
                                        null,
                                        judge.name,
                                        ", ",
                                        judge.category
                                    )
                                )
                            );
                        })
                    )
                )
            );
        }
    }], [{
        key: "genJudgesNumbers",
        value: function genJudgesNumbers(competition) {
            var result = [];
            var numbers_used = {};
            competition.judges.forEach(function (j, idx) {
                var number = j.number;
                var appendix = "";
                var cnt = 0;
                while (numbers_used[number + appendix]) {
                    appendix = number === "" ? cnt.toString() : "-" + ++cnt;
                }
                numbers_used[number + appendix] = true;
                result.push(number + appendix);
            });
            return result;
        }
    }]);

    return Judges;
}(React.Component);

var DisciplineJudges = function (_React$Component5) {
    _inherits(DisciplineJudges, _React$Component5);

    function DisciplineJudges() {
        _classCallCheck(this, DisciplineJudges);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineJudges).apply(this, arguments));
    }

    _createClass(DisciplineJudges, [{
        key: "getJudgesDisciplines",
        value: function getJudgesDisciplines() {
            var _this8 = this;

            var judges_used = {};
            var roles = {};
            this.props.competition.disciplines.forEach(function (discipline) {
                discipline.discipline_judges.forEach(function (discipline_judge) {
                    roles[discipline.id + "_" + discipline_judge.judge.id] = discipline_judge.role;
                    judges_used[discipline_judge.judge.id] = true;
                });
            });
            var judges = [];
            var judges_numbers = Judges.genJudgesNumbers(this.props.competition);
            this.props.competition.judges.forEach(function (j, idx) {
                if (judges_used[j.id]) {
                    judges.push({
                        number: judges_numbers[idx],
                        idx: idx
                    });
                }
            });
            var table = this.props.competition.disciplines.map(function (discipline) {
                return judges.map(function (judge) {
                    return roles[discipline.id + "_" + _this8.props.competition.judges[judge.idx].id] || null;
                });
            });
            return { judges: judges, table: table };
        }
    }, {
        key: "render",
        value: function render() {
            var _this9 = this;

            if (!this.props.config.include_discipline_judges) {
                return null;
            }
            var data = this.getJudgesDisciplines();
            var style = { width: (60 / data.judges.length).toFixed(3) + "%" };
            return React.createElement(
                "div",
                { div: true, className: "discipline-judges" },
                React.createElement(
                    "h4",
                    null,
                    React.createElement(
                        "p",
                        null,
                        (0, _loader._)("admin.headers.discipline_judges")
                    )
                ),
                React.createElement(
                    "table",
                    { className: "bordered-table" },
                    React.createElement(
                        "tbody",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { className: "w-40" },
                                React.createElement(
                                    "p",
                                    { className: "text-left" },
                                    (0, _loader._)("admin.labels.discipline")
                                )
                            ),
                            data.judges.map(function (judge) {
                                return React.createElement(
                                    "th",
                                    { style: style, key: judge.idx },
                                    React.createElement(
                                        "p",
                                        { className: "text-center" },
                                        judge.number
                                    )
                                );
                            })
                        ),
                        data.table.map(function (row, idx) {
                            var discipline = _this9.props.competition.disciplines[idx];
                            return React.createElement(
                                "tr",
                                { key: discipline.id },
                                React.createElement(
                                    "th",
                                    { className: "w-40" },
                                    React.createElement(
                                        "p",
                                        { className: "text-left" },
                                        discipline.name
                                    )
                                ),
                                row.map(function (cell, idx) {
                                    return React.createElement(
                                        "td",
                                        { style: style, key: idx },
                                        React.createElement(
                                            "p",
                                            { className: "text-center" },
                                            cell ? (0, _loader._)("models.discipline_judge.roles." + cell) : "—"
                                        )
                                    );
                                })
                            );
                        })
                    )
                ),
                (0, _loader._)("models.discipline_judge.roles_legend")
            );
        }
    }]);

    return DisciplineJudges;
}(React.Component);

var Results = function (_React$Component6) {
    _inherits(Results, _React$Component6);

    function Results() {
        var _Object$getPrototypeO;

        var _temp, _this10, _ret;

        _classCallCheck(this, Results);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this10 = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Results)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this10), _this10.renderDiscipline = function (discipline) {
            if (!_this10.props.config.disciplines[discipline.id]) {
                return null;
            }
            return React.createElement(
                "div",
                { key: discipline.id },
                React.createElement(
                    "h5",
                    null,
                    React.createElement(
                        "p",
                        null,
                        discipline.name
                    )
                ),
                React.createElement(_discipline_results.DisciplineResults, {
                    discipline_id: discipline.id,
                    renderer: "table" })
            );
        }, _temp), _possibleConstructorReturn(_this10, _ret);
    }

    _createClass(Results, [{
        key: "render",
        value: function render() {
            var has_disciplines = false;
            for (var i = 0; i < this.props.competition.disciplines.length; ++i) {
                var discipline_id = this.props.competition.disciplines[i].id;
                if (this.props.config.disciplines[discipline_id]) {
                    has_disciplines = true;
                    break;
                }
            }
            if (!has_disciplines) {
                return null;
            }
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "h4",
                    null,
                    React.createElement(
                        "p",
                        null,
                        (0, _loader._)("admin.headers.competition_results")
                    )
                ),
                this.props.competition.disciplines.map(this.renderDiscipline)
            );
        }
    }]);

    return Results;
}(React.Component);

},{"../judging/discipline_results":2,"common/docx":23,"common/tools":24,"l10n/loader":25,"server/api":28,"server/message_dispatcher":29,"server/storage":30,"ui/admin_components":31,"ui/components":32,"ui/printable":34}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Disciplines = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _dialogs = require("ui/dialogs");

var _definitions = require("common/definitions");

var _tools = require("common/tools");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Disciplines = exports.Disciplines = function (_React$Component) {
    _inherits(Disciplines, _React$Component);

    function Disciplines(props) {
        _classCallCheck(this, Disciplines);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Disciplines).call(this, props));

        _this.state = {
            creating: false
        };
        return _this;
    }

    _createClass(Disciplines, [{
        key: "renderTable",
        value: function renderTable() {
            var rows = this.props.disciplines.map(function (discipline) {
                return React.createElement(DisciplineRow, {
                    key: discipline.id,
                    judges: this.props.judges,
                    discipline: discipline,
                    all_disciplines: this.props.disciplines });
            }.bind(this));
            return React.createElement(
                "div",
                { className: "manage-disciplines" },
                React.createElement(
                    "table",
                    { className: "table table-striped" },
                    React.createElement(
                        "tbody",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { className: "name" },
                                (0, _loader._)("models.discipline.name")
                            ),
                            React.createElement(
                                "th",
                                { className: "sp" },
                                (0, _loader._)("models.discipline.sp")
                            ),
                            React.createElement(
                                "th",
                                { className: "external-id" },
                                (0, _loader._)("models.discipline.external_id")
                            ),
                            React.createElement("th", { className: "delete" })
                        ),
                        rows,
                        React.createElement(DisciplineCreationRow, {
                            judges: this.props.judges,
                            competition_id: this.props.competition_id })
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "app-content" },
                React.createElement(
                    "header",
                    { className: "app-header" },
                    React.createElement(
                        "h1",
                        null,
                        (0, _loader._)("admin.headers.disciplines_management")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "app-body" },
                    this.renderTable()
                )
            );
        }
    }]);

    return Disciplines;
}(React.Component);

var DisciplineEditorRow = function (_React$Component2) {
    _inherits(DisciplineEditorRow, _React$Component2);

    function DisciplineEditorRow(props) {
        _classCallCheck(this, DisciplineEditorRow);

        var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineEditorRow).call(this, props));

        _this2.state = {
            discipline_judges: props.discipline.discipline_judges.map(function (dj) {
                return {
                    judge_id: dj.judge.id,
                    role: dj.role
                };
            })
        };
        return _this2;
    }

    _createClass(DisciplineEditorRow, [{
        key: "addDisciplineJudge",
        value: function addDisciplineJudge() {
            var discipline_judges = (0, _tools.clone)(this.state.discipline_judges);
            var new_idx = discipline_judges.length;
            discipline_judges.push({
                judge_id: this.props.judges[0] && this.props.judges[0].id,
                role: _definitions.GL.judge_roles[0]
            });
            this.latest_added = "j" + new_idx;
            this.setState({
                discipline_judges: discipline_judges
            });
        }
    }, {
        key: "removeDisciplineJudge",
        value: function removeDisciplineJudge(idx) {
            var discipline_judges = (0, _tools.clone)(this.state.discipline_judges);
            discipline_judges.splice(idx, 1);
            this.setState({
                discipline_judges: discipline_judges
            });
        }
    }, {
        key: "validate",
        value: function validate() {
            var used_judges = {};
            this.state.discipline_judges.forEach(function (dj) {
                if (used_judges[dj.judge_id]) {
                    var judge = this.props.judges.filter(function (j) {
                        return j.id === dj.judge_id;
                    })[0];
                    throw (0, _loader._)("errors.discipline_judge.repeating_judge", judge.name);
                }
                used_judges[dj.judge_id] = true;
            }.bind(this));
        }
    }, {
        key: "serialize",
        value: function serialize() {
            return {
                name: this._name.value,
                sp: this._sp.value,
                discipline_judges: this.state.discipline_judges.map(function (dj) {
                    return {
                        judge_id: parseInt(dj.judge_id),
                        role: dj.role
                    };
                }),
                external_id: this._external_id.value
            };
        }
    }, {
        key: "onDisciplineJudgeChange",
        value: function onDisciplineJudgeChange(idx, field, event) {
            var discipline_judges = (0, _tools.clone)(this.state.discipline_judges);
            discipline_judges[idx][field] = event.target.value;
            this.setState({
                discipline_judges: discipline_judges
            });
        }
    }, {
        key: "onSubmit",
        value: function onSubmit(event) {
            event.preventDefault();
            try {
                this.validate();
                if (!this.props.newDiscipline) {
                    (0, _api.Api)("discipline.set", {
                        discipline_id: this.props.discipline.id,
                        data: this.serialize()
                    }).onSuccess(this.props.stopEditing).send();
                } else {
                    (0, _api.Api)("discipline.create", {
                        competition_id: this.props.competition_id,
                        data: this.serialize()
                    }).onSuccess(this.props.stopEditing).send();
                }
            } catch (ex) {
                (0, _dialogs.showError)(ex);
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            return React.createElement(
                "tr",
                { className: "editor" + (this.props.newDiscipline ? " create" : "") },
                React.createElement(
                    "td",
                    { colSpan: "5" },
                    React.createElement(
                        "form",
                        { onSubmit: this.onSubmit.bind(this) },
                        React.createElement(
                            "div",
                            { className: "row" },
                            React.createElement(
                                "div",
                                { className: "col-lg-4" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.discipline.name"),
                                    React.createElement("input", {
                                        ref: function (e) {
                                            if (e) {
                                                this._name = e;
                                            }
                                        }.bind(this),
                                        className: "full-width",
                                        defaultValue: this.props.discipline.name })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "row" },
                                    React.createElement(
                                        "div",
                                        { className: "col-lg-6" },
                                        React.createElement(
                                            "label",
                                            { className: "full-width" },
                                            (0, _loader._)("models.discipline.sp"),
                                            React.createElement("input", {
                                                ref: function ref(e) {
                                                    return e && (_this3._sp = e);
                                                },
                                                className: "full-width",
                                                defaultValue: this.props.discipline.sp })
                                        )
                                    ),
                                    React.createElement(
                                        "div",
                                        { className: "col-lg-6" },
                                        React.createElement(
                                            "label",
                                            { className: "full-width" },
                                            (0, _loader._)("models.discipline.external_id"),
                                            React.createElement("br", null),
                                            React.createElement("input", {
                                                ref: function ref(e) {
                                                    return e && (_this3._external_id = e);
                                                },
                                                className: "full-width",
                                                defaultValue: this.props.discipline.external_id })
                                        )
                                    )
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-lg-6" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.discipline.discipline_judges")
                                ),
                                this.state.discipline_judges.map(function (dj, idx) {
                                    return React.createElement(
                                        "div",
                                        { key: idx },
                                        React.createElement(
                                            "select",
                                            { value: dj.judge_id, className: "judge", onChange: _this3.onDisciplineJudgeChange.bind(_this3, idx, "judge_id") },
                                            _this3.props.judges.map(function (j) {
                                                return React.createElement(
                                                    "option",
                                                    { value: j.id, key: j.id },
                                                    j.name
                                                );
                                            })
                                        ),
                                        React.createElement(
                                            "select",
                                            { value: dj.role, className: "judge-role", onChange: _this3.onDisciplineJudgeChange.bind(_this3, idx, "role") },
                                            _definitions.GL.judge_roles.map(function (jr) {
                                                return React.createElement(
                                                    "option",
                                                    { value: jr, key: jr },
                                                    (0, _loader._)("judge_roles." + jr)
                                                );
                                            })
                                        ),
                                        React.createElement(
                                            "button",
                                            {
                                                type: "button",
                                                className: "del btn btn-danger",
                                                onClick: _this3.removeDisciplineJudge.bind(_this3, idx) },
                                            "X"
                                        )
                                    );
                                }),
                                React.createElement(
                                    "button",
                                    {
                                        type: "button",
                                        className: "full-width btn btn-sm btn-default",
                                        onClick: this.addDisciplineJudge.bind(this) },
                                    (0, _loader._)("global.buttons.add")
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-lg-2" },
                                React.createElement(
                                    "label",
                                    null,
                                    " "
                                ),
                                React.createElement(
                                    "div",
                                    { className: "buttons" },
                                    React.createElement(
                                        "button",
                                        {
                                            type: "submit",
                                            className: "btn btn-primary" },
                                        (0, _loader._)("global.buttons.submit")
                                    ),
                                    React.createElement("br", null),
                                    React.createElement(
                                        "button",
                                        {
                                            type: "button",
                                            className: "btn btn-danger",
                                            onClick: this.props.stopEditing },
                                        (0, _loader._)("global.buttons.discard")
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return DisciplineEditorRow;
}(React.Component);

var DisciplineRow = function (_React$Component3) {
    _inherits(DisciplineRow, _React$Component3);

    function DisciplineRow(props) {
        _classCallCheck(this, DisciplineRow);

        var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineRow).call(this, props));

        _this4.state = {
            editing: false
        };
        return _this4;
    }

    _createClass(DisciplineRow, [{
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "onDelete",
        value: function onDelete(event) {
            var _this5 = this;

            event.stopPropagation();
            (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_discipline"), function () {
                (0, _api.Api)("discipline.delete", {
                    discipline_id: _this5.props.discipline.id
                }).onSuccess(function () {
                    return swal.close();
                }).send();
            });
        }
    }, {
        key: "renderEditor",
        value: function renderEditor() {
            return React.createElement(DisciplineEditorRow, _extends({
                newDiscipline: false,
                stopEditing: this.stopEditing.bind(this)
            }, this.props));
        }
    }, {
        key: "renderViewer",
        value: function renderViewer() {
            var c = this.props.discipline;
            return React.createElement(
                "tr",
                { className: "viewer", onClick: this.startEditing.bind(this) },
                React.createElement(
                    "td",
                    { className: "name" },
                    c.name
                ),
                React.createElement(
                    "td",
                    { className: "sp" },
                    c.sp
                ),
                React.createElement(
                    "td",
                    { className: "external-id" },
                    c.external_id
                ),
                React.createElement(
                    "td",
                    { className: "delete" },
                    React.createElement(
                        "button",
                        { className: "btn btn-danger", onClick: this.onDelete.bind(this) },
                        "X"
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            if (this.state.editing) {
                return this.renderEditor();
            } else {
                return this.renderViewer();
            }
        }
    }]);

    return DisciplineRow;
}(React.Component);

var DisciplineCreationRow = function (_React$Component4) {
    _inherits(DisciplineCreationRow, _React$Component4);

    function DisciplineCreationRow(props) {
        _classCallCheck(this, DisciplineCreationRow);

        var _this6 = _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineCreationRow).call(this, props));

        _this6.state = {
            editing: false
        };
        return _this6;
    }

    _createClass(DisciplineCreationRow, [{
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "renderEditor",
        value: function renderEditor() {
            var empty_data = {
                "name": "",
                "discipline_judges": [],
                "sp": "0",
                "external_id": ""
            };
            return React.createElement(DisciplineEditorRow, _extends({
                newDiscipline: true,
                stopEditing: this.stopEditing.bind(this),
                discipline: empty_data
            }, this.props));
        }
    }, {
        key: "renderButton",
        value: function renderButton() {
            return React.createElement(
                "tr",
                null,
                React.createElement(
                    "td",
                    { colSpan: "5" },
                    React.createElement(
                        "button",
                        {
                            type: "button",
                            className: "btn btn-default full-width",
                            onClick: this.startEditing.bind(this) },
                        (0, _loader._)("admin.buttons.add_discipline")
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return this.state.editing ? this.renderEditor() : this.renderButton();
        }
    }]);

    return DisciplineCreationRow;
}(React.Component);

},{"common/definitions":22,"common/tools":24,"l10n/loader":25,"server/api":28,"ui/dialogs":33}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ImportExport = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _tools = require("common/tools");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ImportExport = exports.ImportExport = function (_React$Component) {
    _inherits(ImportExport, _React$Component);

    function ImportExport(props) {
        _classCallCheck(this, ImportExport);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ImportExport).call(this, props));

        _this.makeSelectorRef = function (e) {
            _this._selector = e;
        };

        _this.state = {
            import_files: [],
            submitting: false
        };
        return _this;
    }

    _createClass(ImportExport, [{
        key: "import",
        value: function _import() {
            var _this2 = this;

            var reader = new FileReader();
            this.setState({
                submitting: true
            });
            reader.onload = function (f) {
                (0, _api.Api)("competition.load", {
                    competition_id: _this2.props.competition_id,
                    data: f.target.result,
                    items: _this2._selector.getValue()
                }).onSuccess(function () {
                    swal({
                        title: (0, _loader._)("global.messages.success"),
                        type: "success",
                        animation: false
                    });
                }).onDone(function () {
                    _this2.setState({
                        submitting: false
                    });
                }).send();
            };
            reader.readAsText(this.state.import_files[0]);
        }
    }, {
        key: "export",
        value: function _export() {
            (0, _api.Api)("competition.export", { competition_id: this.props.competition_id }).onSuccess(function (r) {
                return saveAs(new Blob([JSON.stringify(r)], { type: 'application/json' }), "rockjudge.export.json");
            }).send();
        }
    }, {
        key: "onSubmit",
        value: function onSubmit(event) {
            event.preventDefault();
            var data = this._input.value;
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            return React.createElement(
                "div",
                { className: "app-content load-competition-page" },
                React.createElement(
                    "header",
                    { className: "app-head" },
                    React.createElement(
                        "h1",
                        null,
                        (0, _loader._)("admin.headers.import_export")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "import-export" },
                    React.createElement(
                        "h3",
                        null,
                        (0, _loader._)("admin.headers.import_competition")
                    ),
                    React.createElement(
                        "form",
                        { className: "import-form", onSubmit: function onSubmit(e) {
                                e.preventDefault();_this3.import();
                            } },
                        React.createElement(
                            "label",
                            { className: "browse" },
                            React.createElement(
                                "div",
                                null,
                                (0, _loader._)("global.labels.browse")
                            ),
                            this.state.import_files.length === 0 ? (0, _loader._)("admin.labels.no_files_selected") : this.state.import_files[0].name,
                            React.createElement("input", { type: "file",
                                onChange: function onChange(e) {
                                    return _this3.setState({ import_files: e.target.files });
                                } })
                        ),
                        React.createElement("br", null),
                        React.createElement(ImportItemsSelector, {
                            ref: this.makeSelectorRef }),
                        React.createElement("br", null),
                        React.createElement(
                            "button",
                            { type: "submit",
                                className: "btn btn-primary",
                                disabled: this.state.import_files.length !== 1 || this.state.submitting },
                            (0, _loader._)("admin.buttons.import")
                        )
                    ),
                    React.createElement(
                        "h3",
                        null,
                        (0, _loader._)("admin.headers.export_competition")
                    ),
                    React.createElement(
                        "button",
                        { type: "button",
                            className: "btn btn-primary",
                            onClick: this.export.bind(this) },
                        (0, _loader._)("admin.buttons.export")
                    )
                )
            );
        }
    }]);

    return ImportExport;
}(React.Component);

var ImportItemsSelector = function (_React$Component2) {
    _inherits(ImportItemsSelector, _React$Component2);

    function ImportItemsSelector(props) {
        _classCallCheck(this, ImportItemsSelector);

        var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(ImportItemsSelector).call(this, props));

        _this4.onChange = function (type, value) {
            var new_items = (0, _tools.clone)(_this4.state.items);
            new_items[type] = value;
            if (type === "disciplines" && !value) {
                new_items.tours = false;
                new_items.participants = false;
                new_items.discipline_judges = false;
            }
            if (type === "clubs" && !value) {
                new_items.participants = false;
            }
            if (type === "judges" && !value) {
                new_items.discipline_judges = false;
            }
            _this4.setState({
                items: new_items
            });
        };

        _this4.state = {
            items: {
                disciplines: true,
                tours: true,
                participants: true,
                discipline_judges: true,
                plan: true,
                judges: true,
                clubs: true
            }
        };
        return _this4;
    }

    _createClass(ImportItemsSelector, [{
        key: "getValue",
        value: function getValue() {
            return this.state.items;
        }
    }, {
        key: "renderCheckbox",
        value: function renderCheckbox(type) {
            var disabled = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

            return React.createElement(ImportItemsCheckbox, {
                type: type,
                label: (0, _loader._)("admin.labels." + type),
                value: this.state.items[type],
                disabled: disabled,
                onChange: this.onChange });
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "import-items-selector" },
                this.renderCheckbox("disciplines"),
                this.renderCheckbox("clubs"),
                this.renderCheckbox("judges"),
                this.renderCheckbox("tours", !this.state.items.disciplines),
                this.renderCheckbox("participants", !this.state.items.disciplines || !this.state.items.clubs),
                this.renderCheckbox("discipline_judges", !this.state.items.disciplines || !this.state.items.judges),
                this.renderCheckbox("plan")
            );
        }
    }]);

    return ImportItemsSelector;
}(React.Component);

var ImportItemsCheckbox = function (_React$Component3) {
    _inherits(ImportItemsCheckbox, _React$Component3);

    function ImportItemsCheckbox(props) {
        _classCallCheck(this, ImportItemsCheckbox);

        var _this5 = _possibleConstructorReturn(this, Object.getPrototypeOf(ImportItemsCheckbox).call(this, props));

        _this5.onChange = function (e) {
            _this5.props.onChange(_this5.props.type, e.target.checked);
        };

        return _this5;
    }

    _createClass(ImportItemsCheckbox, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "switch" },
                React.createElement(
                    "label",
                    null,
                    React.createElement("input", {
                        type: "checkbox",
                        checked: this.props.value,
                        disabled: this.props.disabled,
                        onChange: this.onChange }),
                    this.props.label
                )
            );
        }
    }]);

    return ImportItemsCheckbox;
}(React.Component);

},{"common/tools":24,"l10n/loader":25,"server/api":28}],15:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Judges = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _dialogs = require("ui/dialogs");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Judges = exports.Judges = function (_React$Component) {
    _inherits(Judges, _React$Component);

    function Judges(props) {
        _classCallCheck(this, Judges);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Judges).call(this, props));

        _this.state = {
            creating: false
        };
        return _this;
    }

    _createClass(Judges, [{
        key: "renderTable",
        value: function renderTable() {
            var rows = this.props.judges.map(function (judge) {
                return React.createElement(JudgeRow, {
                    key: judge.id,
                    judge: judge });
            }.bind(this));
            return React.createElement(
                "div",
                { className: "manage-judges" },
                React.createElement(
                    "table",
                    { className: "table table-striped" },
                    React.createElement(
                        "tbody",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { className: "role_description" },
                                (0, _loader._)("models.judge.role_description")
                            ),
                            React.createElement(
                                "th",
                                { className: "name" },
                                (0, _loader._)("models.judge.name")
                            ),
                            React.createElement(
                                "th",
                                { className: "category" },
                                (0, _loader._)("models.judge.category")
                            ),
                            React.createElement("th", { className: "delete" })
                        ),
                        rows,
                        React.createElement(JudgeCreationRow, { competition_id: this.props.competition_id })
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "app-content" },
                React.createElement(
                    "header",
                    { className: "app-header" },
                    React.createElement(
                        "h1",
                        null,
                        (0, _loader._)("admin.headers.judges_management")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "app-body" },
                    this.renderTable()
                )
            );
        }
    }]);

    return Judges;
}(React.Component);

var JudgeEditorRow = function (_React$Component2) {
    _inherits(JudgeEditorRow, _React$Component2);

    function JudgeEditorRow() {
        _classCallCheck(this, JudgeEditorRow);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(JudgeEditorRow).apply(this, arguments));
    }

    _createClass(JudgeEditorRow, [{
        key: "sertialize",
        value: function sertialize() {
            return {
                name: this._name.value,
                number: this._number.value,
                category: this._category.value,
                role_description: this._role_description.value,
                sp: this._sp.value,
                external_id: this._external_id.value
            };
        }
    }, {
        key: "onSubmit",
        value: function onSubmit(event) {
            event.preventDefault();
            if (!this.props.newJudge) {
                (0, _api.Api)("judge.set", {
                    judge_id: this.props.judge.id,
                    data: this.sertialize()
                }).onSuccess(this.props.stopEditing).send();
            } else {
                (0, _api.Api)("judge.create", {
                    competition_id: this.props.competition_id,
                    data: this.sertialize()
                }).onSuccess(this.props.stopEditing).send();
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            return React.createElement(
                "tr",
                { className: "editor" + (this.props.newJudge ? " create" : "") },
                React.createElement(
                    "td",
                    { colSpan: "5" },
                    React.createElement(
                        "form",
                        { onSubmit: this.onSubmit.bind(this) },
                        React.createElement(
                            "div",
                            { className: "row" },
                            React.createElement(
                                "div",
                                { className: "col-lg-1" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.judge.number"),
                                    React.createElement("input", {
                                        ref: function ref(e) {
                                            if (e) {
                                                if (!_this3._number) {
                                                    e.select();_this3._number = e;
                                                }
                                            }
                                        },
                                        className: "full-width",
                                        defaultValue: this.props.judge.number })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-lg-1" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.judge.category"),
                                    React.createElement("input", {
                                        ref: function ref(e) {
                                            return e && (_this3._category = e);
                                        },
                                        className: "full-width",
                                        defaultValue: this.props.judge.category })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-lg-3" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.judge.name"),
                                    React.createElement("input", {
                                        ref: function ref(e) {
                                            return e && (_this3._name = e);
                                        },
                                        className: "full-width",
                                        defaultValue: this.props.judge.name })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-lg-3" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.judge.role_description"),
                                    React.createElement("input", {
                                        ref: function ref(e) {
                                            return e && (_this3._role_description = e);
                                        },
                                        className: "full-width",
                                        defaultValue: this.props.judge.role_description })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-lg-1" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.judge.external_id"),
                                    React.createElement("input", {
                                        ref: function ref(e) {
                                            return e && (_this3._external_id = e);
                                        },
                                        className: "full-width",
                                        defaultValue: this.props.judge.external_id })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-lg-1" },
                                React.createElement(
                                    "label",
                                    { className: "full-width" },
                                    (0, _loader._)("models.judge.sp"),
                                    React.createElement("input", {
                                        ref: function ref(e) {
                                            return e && (_this3._sp = e);
                                        },
                                        className: "full-width",
                                        defaultValue: this.props.judge.sp })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-lg-2" },
                                React.createElement(
                                    "div",
                                    { className: "buttons" },
                                    React.createElement(
                                        "button",
                                        {
                                            type: "submit",
                                            className: "btn btn-sm btn-primary" },
                                        (0, _loader._)("global.buttons.submit")
                                    ),
                                    React.createElement(
                                        "button",
                                        {
                                            type: "button",
                                            className: "btn btn-sm btn-danger",
                                            onClick: this.props.stopEditing },
                                        (0, _loader._)("global.buttons.discard")
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return JudgeEditorRow;
}(React.Component);

var JudgeRow = function (_React$Component3) {
    _inherits(JudgeRow, _React$Component3);

    function JudgeRow(props) {
        _classCallCheck(this, JudgeRow);

        var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(JudgeRow).call(this, props));

        _this4.state = {
            editing: false
        };
        return _this4;
    }

    _createClass(JudgeRow, [{
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "onDelete",
        value: function onDelete(event) {
            var _this5 = this;

            event.stopPropagation();
            (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_judge"), function () {
                (0, _api.Api)("judge.delete", {
                    judge_id: _this5.props.judge.id
                }).onSuccess(function () {
                    return swal.close();
                }).send();
            });
        }
    }, {
        key: "renderEditor",
        value: function renderEditor() {
            return React.createElement(JudgeEditorRow, _extends({
                newJudge: false,
                stopEditing: this.stopEditing.bind(this)
            }, this.props));
        }
    }, {
        key: "renderViewer",
        value: function renderViewer() {
            var j = this.props.judge;
            return React.createElement(
                "tr",
                { className: "viewer", onClick: this.startEditing.bind(this) },
                React.createElement(
                    "td",
                    { className: "role-description" },
                    j.role_description || (0, _loader._)("global.phrases.judge_n", j.number)
                ),
                React.createElement(
                    "td",
                    { className: "name" },
                    j.name
                ),
                React.createElement(
                    "td",
                    { className: "category" },
                    j.category
                ),
                React.createElement(
                    "td",
                    { className: "delete" },
                    React.createElement(
                        "button",
                        { className: "btn btn-danger", onClick: this.onDelete.bind(this) },
                        "X"
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            if (this.state.editing) {
                return this.renderEditor();
            } else {
                return this.renderViewer();
            }
        }
    }]);

    return JudgeRow;
}(React.Component);

var JudgeCreationRow = function (_React$Component4) {
    _inherits(JudgeCreationRow, _React$Component4);

    function JudgeCreationRow(props) {
        _classCallCheck(this, JudgeCreationRow);

        var _this6 = _possibleConstructorReturn(this, Object.getPrototypeOf(JudgeCreationRow).call(this, props));

        _this6.state = {
            editing: false
        };
        return _this6;
    }

    _createClass(JudgeCreationRow, [{
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "renderEditor",
        value: function renderEditor() {
            var empty_data = {
                "name": "",
                "number": "",
                "role_description": "",
                "category": ""
            };
            return React.createElement(JudgeEditorRow, _extends({
                newJudge: true,
                stopEditing: this.stopEditing.bind(this),
                judge: empty_data
            }, this.props));
        }
    }, {
        key: "renderButton",
        value: function renderButton() {
            return React.createElement(
                "tr",
                null,
                React.createElement(
                    "td",
                    { colSpan: "5" },
                    React.createElement(
                        "button",
                        {
                            type: "button",
                            className: "btn btn-default full-width",
                            onClick: this.startEditing.bind(this) },
                        (0, _loader._)("admin.buttons.add_judge")
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return this.state.editing ? this.renderEditor() : this.renderButton();
        }
    }]);

    return JudgeCreationRow;
}(React.Component);

},{"l10n/loader":25,"server/api":28,"ui/dialogs":33}],16:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Management = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _clubs = require("./clubs");

var _competition_plan = require("./competition_plan");

var _competition_report = require("./competition_report");

var _disciplines = require("./disciplines");

var _import_export = require("./import_export");

var _judges = require("./judges");

var _participants = require("./participants");

var _start_list = require("./start_list");

var _tours = require("./tours");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Management = exports.Management = function (_React$Component) {
    _inherits(Management, _React$Component);

    function Management(props) {
        _classCallCheck(this, Management);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Management).call(this, props));

        _this.state = {
            "page": _this.getPageFromHash(),
            "page_props": _this.getPagePropsFromHash()
        };
        return _this;
    }

    _createClass(Management, [{
        key: "switchPage",
        value: function switchPage(page, props) {
            this.setState({
                page: page,
                page_props: props
            });
            var props_pairs = [];
            Object.getOwnPropertyNames(props).forEach(function (key) {
                props_pairs.push([key, props[key]]);
            });
            window.location.hash = "#management/" + page + "/" + props_pairs.map(function (p) {
                return p.join("=");
            }).join("$");
        }
    }, {
        key: "getPageFromHash",
        value: function getPageFromHash() {
            var chunks = window.location.hash.substr(1).split("/");
            if (chunks[1] && ["import_export", "manage_competition_plan", "manage_tours", "manage_participants", "manage_judges", "manage_clubs", "manage_disciplines", "start_list", "competition_report"].indexOf(chunks[1]) >= 0) {
                return chunks[1];
            }
            return null;
        }
    }, {
        key: "getPagePropsFromHash",
        value: function getPagePropsFromHash() {
            var chunks = window.location.hash.substr(1).split("/");
            if (chunks[2]) {
                var _ret = function () {
                    var result = {};
                    chunks[2].split("$").forEach(function (pair_str) {
                        var pair = pair_str.split("=");
                        result[pair[0]] = pair[1];
                    });
                    return {
                        v: result
                    };
                }();

                if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
            }
            return {};
        }
    }, {
        key: "renderDiscipline",
        value: function renderDiscipline(ic, page) {
            return React.createElement(
                "div",
                {
                    className: "level-2" + (this.state.page === page && this.state.page_props.discipline_id === ic.id ? " active" : ""),
                    key: ic.id,
                    onClick: this.switchPage.bind(this, page, { discipline_id: ic.id }) },
                ic.name
            );
        }
    }, {
        key: "renderContent",
        value: function renderContent() {
            switch (this.state.page) {
                case "import_export":
                    return React.createElement(_import_export.ImportExport, { competition_id: this.props.competition_id });
                case "manage_tours":
                    // Seeking for discipline with given ID
                    var ic = null;
                    this.props.disciplines.forEach(function (el) {
                        if (el.id === this.state.page_props.discipline_id) {
                            ic = el;
                        }
                    }.bind(this));
                    return React.createElement(_tours.Tours, {
                        key: this.state.page_props.discipline_id,
                        rules_set: this.props.rules_set,
                        discipline: ic });
                case "manage_participants":
                    return React.createElement(_participants.Participants, {
                        key: this.state.page_props.discipline_id,
                        discipline_id: this.state.page_props.discipline_id });
                case "manage_judges":
                    return React.createElement(_judges.Judges, {
                        judges: this.props.judges,
                        competition_id: this.props.competition_id });
                case "manage_clubs":
                    return React.createElement(_clubs.Clubs, {
                        clubs: this.props.clubs,
                        competition_id: this.props.competition_id });
                case "manage_competition_plan":
                    return React.createElement(_competition_plan.CompetitionPlan, {
                        items: this.props.competition_plan,
                        disciplines: this.props.disciplines,
                        competition_name: this.props.competition_name,
                        competition_date: this.props.competition_date,
                        competition_id: this.props.competition_id });
                case "manage_disciplines":
                    return React.createElement(_disciplines.Disciplines, {
                        disciplines: this.props.disciplines,
                        judges: this.props.judges,
                        competition_id: this.props.competition_id });
                case "start_list":
                    return React.createElement(_start_list.StartList, {
                        competition_id: this.props.competition_id });
                case "competition_report":
                    return React.createElement(_competition_report.CompetitionReport, {
                        competition_id: this.props.competition_id });
            }
        }
    }, {
        key: "renderSideMenu",
        value: function renderSideMenu() {
            var ics_tours = this.props.disciplines.map(function (ic) {
                return this.renderDiscipline(ic, "manage_tours");
            }.bind(this));
            var ics_participants = this.props.disciplines.map(function (ic) {
                return this.renderDiscipline(ic, "manage_participants");
            }.bind(this));
            return React.createElement(
                "div",
                { className: "side-menu" },
                React.createElement(
                    "div",
                    { className: "block" },
                    React.createElement(
                        "div",
                        {
                            className: "level-1" + (this.state.page === "import_export" ? " active" : ""),
                            onClick: this.switchPage.bind(this, "import_export", {}) },
                        (0, _loader._)("admin.menu.import_export")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "block" },
                    React.createElement(
                        "div",
                        {
                            className: "level-1" + (this.state.page === "manage_judges" ? " active" : ""),
                            onClick: this.switchPage.bind(this, "manage_judges", {}) },
                        (0, _loader._)("admin.menu.manage_judges")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "block" },
                    React.createElement(
                        "div",
                        {
                            className: "level-1" + (this.state.page === "manage_disciplines" ? " active" : ""),
                            onClick: this.switchPage.bind(this, "manage_disciplines", {}) },
                        (0, _loader._)("admin.menu.manage_disciplines")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "block" },
                    React.createElement(
                        "div",
                        {
                            className: "level-1" + (this.state.page === "manage_clubs" ? " active" : ""),
                            onClick: this.switchPage.bind(this, "manage_clubs", {}) },
                        (0, _loader._)("admin.menu.manage_clubs")
                    )
                ),
                React.createElement(
                    "details",
                    { className: "block", open: !!parseInt(sessionStorage.getItem("D_SPORTSMEN")) },
                    React.createElement(
                        "summary",
                        { className: "level-1", onClick: function onClick(e) {
                                return sessionStorage.setItem("D_SPORTSMEN", e.target.parentNode.open ? 0 : 1);
                            } },
                        (0, _loader._)("admin.menu.manage_sportsmen")
                    ),
                    ics_participants
                ),
                React.createElement(
                    "details",
                    { className: "block", open: !!parseInt(sessionStorage.getItem("D_TOURS")) },
                    React.createElement(
                        "summary",
                        { className: "level-1", onClick: function onClick(e) {
                                return sessionStorage.setItem("D_TOURS", e.target.parentNode.open ? 0 : 1);
                            } },
                        (0, _loader._)("admin.menu.manage_tours")
                    ),
                    ics_tours
                ),
                React.createElement(
                    "div",
                    { className: "block" },
                    React.createElement(
                        "div",
                        {
                            className: "level-1" + (this.state.page === "manage_competition_plan" ? " active" : ""),
                            onClick: this.switchPage.bind(this, "manage_competition_plan", {}) },
                        (0, _loader._)("admin.menu.manage_competition_plan")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "block" },
                    React.createElement(
                        "div",
                        {
                            className: "level-1" + (this.state.page === "start_list" ? " active" : ""),
                            onClick: this.switchPage.bind(this, "start_list", {}) },
                        (0, _loader._)("admin.menu.start_list")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "block" },
                    React.createElement(
                        "div",
                        {
                            className: "level-1" + (this.state.page === "competition_report" ? " active" : ""),
                            onClick: this.switchPage.bind(this, "competition_report", {}) },
                        (0, _loader._)("admin.menu.competition_report")
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "app" },
                this.renderSideMenu(),
                this.renderContent()
            );
        }
    }]);

    return Management;
}(React.Component);

},{"./clubs":10,"./competition_plan":11,"./competition_report":12,"./disciplines":13,"./import_export":14,"./judges":15,"./participants":17,"./start_list":18,"./tours":19,"l10n/loader":25}],17:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Participants = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _dialogs = require("ui/dialogs");

var _tools = require("common/tools");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Participants = exports.Participants = function (_React$Component) {
    _inherits(Participants, _React$Component);

    function Participants(props) {
        _classCallCheck(this, Participants);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Participants).call(this, props));

        _this.state = {
            name: null
        };
        return _this;
    }

    _createClass(Participants, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            this.storage = _storage.storage.getDomain("participants_" + this.props.discipline_id);
            this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
            this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
            this.loadData();
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
            _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
            _storage.storage.delDomain("participants_" + this.props.discipline_id);
        }
    }, {
        key: "reloadFromStorage",
        value: function reloadFromStorage() {
            var SCHEMA = {
                competition: {
                    clubs: {}
                },
                participants: {
                    club: {},
                    programs: {}
                }
            };
            var serialized = this.storage.get("Discipline").by_id(this.props.discipline_id).serialize(SCHEMA);
            this.setState(serialized);
        }
    }, {
        key: "loadData",
        value: function loadData() {
            (0, _api.Api)("discipline.get", {
                discipline_id: this.props.discipline_id,
                children: {
                    competition: {
                        clubs: {}
                    },
                    participants: {
                        club: {},
                        programs: {}
                    }
                }
            }).addToDB("Discipline", this.props.discipline_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
        }
    }, {
        key: "renderTable",
        value: function renderTable() {
            var _this2 = this;

            var rows = this.state.participants.map(function (participant) {
                return React.createElement(ParticipantRow, {
                    key: participant.id,
                    participant: participant,
                    clubs: _this2.state.competition.clubs });
            });
            return React.createElement(
                "div",
                { className: "manage-participants" },
                React.createElement(
                    "table",
                    { className: "table table-striped" },
                    React.createElement(
                        "tbody",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { className: "number" },
                                (0, _loader._)("models.participant.number")
                            ),
                            React.createElement(
                                "th",
                                { className: "name" },
                                (0, _loader._)("models.participant.name")
                            ),
                            React.createElement(
                                "th",
                                { className: "club-name" },
                                (0, _loader._)("models.participant.club_name")
                            ),
                            React.createElement(
                                "th",
                                { className: "club-city" },
                                (0, _loader._)("models.participant.club_city")
                            ),
                            React.createElement("th", { className: "delete" })
                        ),
                        rows,
                        React.createElement(ParticipantCreationRow, {
                            clubs: this.state.competition.clubs,
                            discipline_id: this.props.discipline_id })
                    )
                ),
                React.createElement(
                    "div",
                    { className: "total-participants" },
                    (0, _loader._)("admin.phrases.total_n_participants", this.state.participants.length)
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            if (this.state.name === null) {
                return React.createElement(_components.Loader, null);
            }
            return React.createElement(
                "div",
                { className: "app-content" },
                React.createElement(
                    "header",
                    { className: "app-header" },
                    React.createElement(
                        "h1",
                        null,
                        this.state.name
                    ),
                    React.createElement(
                        "h2",
                        null,
                        (0, _loader._)("admin.headers.participants_management")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "app-body" },
                    this.renderTable()
                )
            );
        }
    }]);

    return Participants;
}(React.Component);

var ClubsSelector = function (_React$Component2) {
    _inherits(ClubsSelector, _React$Component2);

    function ClubsSelector() {
        _classCallCheck(this, ClubsSelector);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ClubsSelector).apply(this, arguments));
    }

    _createClass(ClubsSelector, [{
        key: "renderList",
        value: function renderList() {
            return this.props.clubs.map(function (club) {
                return React.createElement(
                    "option",
                    { value: club.id, key: club.id },
                    club.name
                );
            });
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "select",
                {
                    className: "full-width",
                    value: this.props.club_id,
                    onChange: this.props.onChange },
                this.renderList()
            );
        }
    }]);

    return ClubsSelector;
}(React.Component);

var ParticipantEditorRowGeneralInfo = function (_React$Component3) {
    _inherits(ParticipantEditorRowGeneralInfo, _React$Component3);

    function ParticipantEditorRowGeneralInfo() {
        _classCallCheck(this, ParticipantEditorRowGeneralInfo);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantEditorRowGeneralInfo).apply(this, arguments));
    }

    _createClass(ParticipantEditorRowGeneralInfo, [{
        key: "genOnChange",
        value: function genOnChange(field) {
            var _this5 = this;

            return function (event) {
                return _this5.props.onChange(field, event.target.value);
            };
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "h4",
                    null,
                    (0, _loader._)("models.participant.general_info")
                ),
                React.createElement("input", {
                    placeholder: (0, _loader._)("models.participant.number"),
                    className: "full-width",
                    value: this.props.participant.number,
                    onChange: this.genOnChange("number") }),
                React.createElement(ClubsSelector, {
                    className: "full-width",
                    participant: this.props.participant,
                    club_id: this.props.participant.club_id,
                    clubs: this.props.clubs,
                    onChange: this.genOnChange("club_id") }),
                React.createElement("input", {
                    placeholder: (0, _loader._)("models.participant.coaches"),
                    className: "full-width",
                    value: this.props.participant.coaches,
                    onChange: this.genOnChange("coaches") }),
                React.createElement("input", {
                    placeholder: (0, _loader._)("models.participant.formation_name"),
                    className: "full-width",
                    value: this.props.participant.formation_name,
                    onChange: this.genOnChange("formation_name") })
            );
        }
    }]);

    return ParticipantEditorRowGeneralInfo;
}(React.Component);

var ParticipantEditorRowSportsman = function (_React$Component4) {
    _inherits(ParticipantEditorRowSportsman, _React$Component4);

    function ParticipantEditorRowSportsman() {
        _classCallCheck(this, ParticipantEditorRowSportsman);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantEditorRowSportsman).apply(this, arguments));
    }

    _createClass(ParticipantEditorRowSportsman, [{
        key: "genOnChange",
        value: function genOnChange(field) {
            var _this7 = this;

            return function (event) {
                return _this7.props.onChange(field, event.target.value);
            };
        }
    }, {
        key: "genOnSubstituteChange",
        value: function genOnSubstituteChange() {
            var _this8 = this;

            return function (event) {
                return _this8.props.onChange("substitute", event.target.value === "Y");
            };
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "sportsman" },
                React.createElement("input", {
                    type: "text",
                    className: "last-name",
                    placeholder: (0, _loader._)("models.participant.last_name"),
                    value: this.props.sportsman.last_name,
                    onChange: this.genOnChange("last_name") }),
                React.createElement("input", {
                    type: "text",
                    className: "first-name",
                    placeholder: (0, _loader._)("models.participant.first_name"),
                    value: this.props.sportsman.first_name,
                    onChange: this.genOnChange("first_name") }),
                React.createElement("input", {
                    type: "text",
                    className: "yob",
                    placeholder: (0, _loader._)("models.participant.yob"),
                    value: this.props.sportsman.year_of_birth,
                    onChange: this.genOnChange("year_of_birth") }),
                React.createElement(
                    "select",
                    {
                        className: "gender",
                        value: this.props.sportsman.gender,
                        onChange: this.genOnChange("gender") },
                    React.createElement(
                        "option",
                        { value: "F" },
                        (0, _loader._)("models.participant.gender_f")
                    ),
                    React.createElement(
                        "option",
                        { value: "M" },
                        (0, _loader._)("models.participant.gender_m")
                    )
                ),
                React.createElement(
                    "select",
                    {
                        className: "substitute",
                        value: this.props.sportsman.substitute ? "Y" : "N",
                        onChange: this.genOnSubstituteChange() },
                    React.createElement(
                        "option",
                        { value: "N" },
                        (0, _loader._)("models.participant.substitute_n")
                    ),
                    React.createElement(
                        "option",
                        { value: "Y" },
                        (0, _loader._)("models.participant.substitute_y")
                    )
                ),
                React.createElement(
                    "button",
                    {
                        type: "button",
                        className: "del btn btn-danger",
                        onClick: this.props.onSportsmanRemove },
                    "X"
                )
            );
        }
    }]);

    return ParticipantEditorRowSportsman;
}(React.Component);

var ParticipantEditorRowSportsmenList = function (_React$Component5) {
    _inherits(ParticipantEditorRowSportsmenList, _React$Component5);

    function ParticipantEditorRowSportsmenList() {
        _classCallCheck(this, ParticipantEditorRowSportsmenList);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantEditorRowSportsmenList).apply(this, arguments));
    }

    _createClass(ParticipantEditorRowSportsmenList, [{
        key: "genOnChange",
        value: function genOnChange(idx) {
            var _this10 = this;

            return function (field, value) {
                var list = (0, _tools.clone)(_this10.props.sportsmen);
                list[idx][field] = value;
                _this10.props.onChange("sportsmen", list);
            };
        }
    }, {
        key: "addSportsman",
        value: function addSportsman() {
            var list = (0, _tools.clone)(this.props.sportsmen);
            list.push({
                "last_name": "",
                "first_name": "",
                "year_of_birth": "0",
                "gender": "F",
                "substitute": false
            });
            this.props.onChange("sportsmen", list);
        }
    }, {
        key: "removeSportsman",
        value: function removeSportsman(idx) {
            var list = (0, _tools.clone)(this.props.sportsmen);
            list.splice(idx, 1);
            this.props.onChange("sportsmen", list);
        }
    }, {
        key: "render",
        value: function render() {
            var _this11 = this;

            return React.createElement(
                "div",
                null,
                React.createElement(
                    "h4",
                    null,
                    (0, _loader._)("models.participant.sportsmen")
                ),
                this.props.sportsmen.map(function (sp, idx) {
                    return React.createElement(ParticipantEditorRowSportsman, {
                        key: idx,
                        sportsman: sp,
                        onSportsmanRemove: _this11.removeSportsman.bind(_this11, idx),
                        onChange: _this11.genOnChange(idx) });
                }),
                React.createElement(
                    "button",
                    {
                        type: "button",
                        className: "full-width btn btn-sm btn-default",
                        onClick: this.addSportsman.bind(this) },
                    (0, _loader._)("global.buttons.add")
                )
            );
        }
    }]);

    return ParticipantEditorRowSportsmenList;
}(React.Component);

var ParticipantEditorRowProgramEditorElement = function (_React$Component6) {
    _inherits(ParticipantEditorRowProgramEditorElement, _React$Component6);

    function ParticipantEditorRowProgramEditorElement() {
        _classCallCheck(this, ParticipantEditorRowProgramEditorElement);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantEditorRowProgramEditorElement).apply(this, arguments));
    }

    _createClass(ParticipantEditorRowProgramEditorElement, [{
        key: "genOnChange",
        value: function genOnChange(field) {
            var _this13 = this;

            return function (event) {
                return _this13.props.onChange(field, event.target.value);
            };
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "acrobatic" },
                React.createElement("input", {
                    type: "text",
                    className: "description",
                    placeholder: (0, _loader._)("models.participant.acro_description"),
                    value: this.props.element.description,
                    onChange: this.genOnChange("description") }),
                React.createElement("input", {
                    type: "text",
                    className: "score",
                    placeholder: (0, _loader._)("models.participant.acro_score"),
                    value: this.props.element.score,
                    onChange: this.genOnChange("score") }),
                React.createElement(
                    "button",
                    {
                        type: "button",
                        className: "del btn btn-danger",
                        onClick: this.props.onElementRemove },
                    "X"
                )
            );
        }
    }]);

    return ParticipantEditorRowProgramEditorElement;
}(React.Component);

var ParticipantEditorRowProgramEditorElements = function (_React$Component7) {
    _inherits(ParticipantEditorRowProgramEditorElements, _React$Component7);

    function ParticipantEditorRowProgramEditorElements(props) {
        _classCallCheck(this, ParticipantEditorRowProgramEditorElements);

        var _this14 = _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantEditorRowProgramEditorElements).call(this, props));

        _this14.state = {
            elements: (0, _tools.clone)(_this14.props.elements)
        };
        return _this14;
    }

    _createClass(ParticipantEditorRowProgramEditorElements, [{
        key: "changeElements",
        value: function changeElements(func) {
            var elements = (0, _tools.clone)(this.state.elements);
            elements = func(elements);
            this.setState({ elements: elements });
        }
    }, {
        key: "onChange",
        value: function onChange(idx, field, value) {
            this.changeElements(function (elements) {
                elements[idx][field] = value;
                return elements;
            });
        }
    }, {
        key: "addElement",
        value: function addElement() {
            this.changeElements(function (elements) {
                elements.push({
                    description: "",
                    score: 0
                });
                return elements;
            });
        }
    }, {
        key: "removeElement",
        value: function removeElement(idx) {
            this.changeElements(function (elements) {
                elements.splice(idx, 1);
                return elements;
            });
        }
    }, {
        key: "load",
        value: function load(data) {
            this.setState({
                elements: data.map(function (e) {
                    return {
                        description: e[0],
                        score: e[1]
                    };
                })
            });
        }
    }, {
        key: "serialize",
        value: function serialize() {
            return this.state.elements.map(function (element) {
                return {
                    description: element.description,
                    score: parseFloat(element.score) || 0
                };
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this15 = this;

            return React.createElement(
                "div",
                { className: "elements" },
                this.state.elements.map(function (element, idx) {
                    return React.createElement(ParticipantEditorRowProgramEditorElement, {
                        key: idx,
                        element: element,
                        onChange: _this15.onChange.bind(_this15, idx),
                        onElementRemove: _this15.removeElement.bind(_this15, idx) });
                }),
                React.createElement(
                    "button",
                    { type: "button", className: "btn btn-sm btn-default full-width", onClick: this.addElement.bind(this) },
                    (0, _loader._)("global.buttons.add")
                )
            );
        }
    }]);

    return ParticipantEditorRowProgramEditorElements;
}(React.Component);

var ParticipantEditorRowProgramEditor = function (_React$Component8) {
    _inherits(ParticipantEditorRowProgramEditor, _React$Component8);

    function ParticipantEditorRowProgramEditor() {
        _classCallCheck(this, ParticipantEditorRowProgramEditor);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantEditorRowProgramEditor).apply(this, arguments));
    }

    _createClass(ParticipantEditorRowProgramEditor, [{
        key: "loadAcrobatics",
        value: function loadAcrobatics() {
            var _this17 = this;

            swal({
                title: (0, _loader._)("admin.headers.load_acrobatics"),
                text: (0, _loader._)("admin.labels.paste_acro"),
                showCancelButton: true,
                closeOnConfirm: false,
                type: "input",
                animation: false
            }, function (value) {
                try {
                    var data = JSON.parse(value);
                    _this17.refs.elements_editor.load(data);
                    swal.close();
                } catch (SyntaxError) {
                    (0, _dialogs.showError)((0, _loader._)("errors.admin.load_syntax_error"));
                }
            });
        }
    }, {
        key: "serialize",
        value: function serialize() {
            return {
                name: this.refs.name.value,
                default_for: this.refs.default_for.value,
                acrobatics: this.refs.elements_editor.serialize()
            };
        }
    }, {
        key: "render",
        value: function render() {
            var _this18 = this;

            var classes = ["program-editor"];
            if (this.props.creating) {
                classes.push("create");
            }
            return React.createElement(
                "form",
                { className: classes.join(" "), onSubmit: function onSubmit(e) {
                        e.preventDefault();_this18.props.onSubmit(_this18.serialize());
                    } },
                React.createElement("input", {
                    ref: "name",
                    className: "name",
                    defaultValue: this.props.program.name || "",
                    placeholder: (0, _loader._)("models.program.name") }),
                React.createElement("input", {
                    ref: "default_for",
                    className: "default-for",
                    defaultValue: this.props.program.default_for || "",
                    placeholder: (0, _loader._)("models.program.default_for") }),
                React.createElement(ParticipantEditorRowProgramEditorElements, {
                    ref: "elements_editor",
                    elements: this.props.program.acrobatics || [] }),
                React.createElement(
                    "div",
                    { className: "pull-right" },
                    React.createElement(
                        "button",
                        { type: "button", className: "btn btn-sm btn-default", onClick: this.loadAcrobatics.bind(this) },
                        (0, _loader._)("admin.buttons.load_acro")
                    )
                ),
                React.createElement(
                    "button",
                    { className: "btn btn-sm btn-primary" },
                    (0, _loader._)("global.buttons.submit")
                ),
                React.createElement(
                    "button",
                    { type: "button", className: "btn btn-sm btn-danger", onClick: this.props.onStopEditing },
                    (0, _loader._)("global.buttons.discard")
                )
            );
        }
    }]);

    return ParticipantEditorRowProgramEditor;
}(React.Component);

var ParticipantEditorRowProgramCreator = function (_React$Component9) {
    _inherits(ParticipantEditorRowProgramCreator, _React$Component9);

    function ParticipantEditorRowProgramCreator(props) {
        _classCallCheck(this, ParticipantEditorRowProgramCreator);

        var _this19 = _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantEditorRowProgramCreator).call(this, props));

        _this19.state = {
            editing: false
        };
        return _this19;
    }

    _createClass(ParticipantEditorRowProgramCreator, [{
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "onSubmit",
        value: function onSubmit(data) {
            (0, _api.Api)("program.create", { participant_id: this.props.participant_id, data: data }).onSuccess(this.stopEditing.bind(this)).send();
        }
    }, {
        key: "renderBody",
        value: function renderBody() {
            if (this.state.editing) {
                return React.createElement(ParticipantEditorRowProgramEditor, {
                    creating: true,
                    onSubmit: this.onSubmit.bind(this),
                    onStopEditing: this.stopEditing.bind(this),
                    program: {} });
            }
            return React.createElement(
                "button",
                { type: "button", className: "btn btn-sm btn-default full-width", onClick: this.startEditing.bind(this) },
                (0, _loader._)("global.buttons.add")
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "program-creator" },
                this.renderBody()
            );
        }
    }]);

    return ParticipantEditorRowProgramCreator;
}(React.Component);

var ParticipantEditorRowProgram = function (_React$Component10) {
    _inherits(ParticipantEditorRowProgram, _React$Component10);

    function ParticipantEditorRowProgram(props) {
        _classCallCheck(this, ParticipantEditorRowProgram);

        var _this20 = _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantEditorRowProgram).call(this, props));

        _this20.state = {
            editing: false
        };
        return _this20;
    }

    _createClass(ParticipantEditorRowProgram, [{
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "onDelClick",
        value: function onDelClick(event) {
            var _this21 = this;

            event.preventDefault();
            (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_program"), function () {
                (0, _api.Api)("program.delete", { program_id: _this21.props.program.id }).onSuccess(function () {
                    return swal.close();
                }).send();
            });
        }
    }, {
        key: "onSubmit",
        value: function onSubmit(data) {
            (0, _api.Api)("program.set", { program_id: this.props.program.id, data: data }).onSuccess(this.stopEditing.bind(this)).send();
        }
    }, {
        key: "render",
        value: function render() {
            var _this22 = this;

            if (this.state.editing) {
                return React.createElement(ParticipantEditorRowProgramEditor, _extends({
                    onSubmit: this.onSubmit.bind(this),
                    onStopEditing: this.stopEditing.bind(this)
                }, this.props));
            }
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "h5",
                    null,
                    this.props.program.name,
                    this.props.program.default_for ? React.createElement(
                        "em",
                        null,
                        " (",
                        this.props.program.default_for,
                        ")"
                    ) : null,
                    " / ",
                    React.createElement(
                        "a",
                        { href: "#", onClick: function onClick(e) {
                                e.preventDefault();_this22.startEditing();
                            } },
                        "Редактировать"
                    ),
                    " / ",
                    React.createElement(
                        "a",
                        { href: "#", onClick: this.onDelClick.bind(this) },
                        "Удалить"
                    )
                ),
                React.createElement(
                    "table",
                    { className: "full-width program" },
                    React.createElement(
                        "tbody",
                        null,
                        this.props.program.acrobatics.map(function (element, idx) {
                            return React.createElement(
                                "tr",
                                { key: idx },
                                React.createElement(
                                    "td",
                                    null,
                                    element.description
                                ),
                                React.createElement(
                                    "td",
                                    { className: "text-right" },
                                    element.score.toFixed(1)
                                )
                            );
                        })
                    )
                )
            );
        }
    }]);

    return ParticipantEditorRowProgram;
}(React.Component);

var ParticipantEditorRowPrograms = function (_React$Component11) {
    _inherits(ParticipantEditorRowPrograms, _React$Component11);

    function ParticipantEditorRowPrograms() {
        _classCallCheck(this, ParticipantEditorRowPrograms);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantEditorRowPrograms).apply(this, arguments));
    }

    _createClass(ParticipantEditorRowPrograms, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "h4",
                    null,
                    (0, _loader._)("models.participant.programs")
                ),
                this.props.programs.map(function (p) {
                    return React.createElement(ParticipantEditorRowProgram, {
                        key: p.id,
                        program: p });
                }),
                this.props.newParticipant ? React.createElement(
                    "div",
                    { className: "alert alert-info" },
                    (0, _loader._)("admin.alerts.add_programs_after_creation")
                ) : React.createElement(ParticipantEditorRowProgramCreator, {
                    participant_id: this.props.participant_id })
            );
        }
    }]);

    return ParticipantEditorRowPrograms;
}(React.Component);

var ParticipantEditorRow = function (_React$Component12) {
    _inherits(ParticipantEditorRow, _React$Component12);

    function ParticipantEditorRow(props) {
        _classCallCheck(this, ParticipantEditorRow);

        var _this24 = _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantEditorRow).call(this, props));

        var p = _this24.props.participant;
        _this24.state = {
            participant: {
                number: p.number,
                club_id: p.club.id,
                coaches: p.coaches,
                formation_name: p.formation_name,
                sportsmen: (0, _tools.clone)(p.sportsmen)
            }
        };
        return _this24;
    }

    _createClass(ParticipantEditorRow, [{
        key: "onChange",
        value: function onChange(field, value) {
            var participant = (0, _tools.clone)(this.state.participant);
            participant[field] = value;
            this.setState({
                participant: participant
            });
        }
    }, {
        key: "sertialize",
        value: function sertialize() {
            return this.state.participant;
        }
    }, {
        key: "onSubmit",
        value: function onSubmit(event) {
            event.preventDefault();
            if (!this.props.newParticipant) {
                (0, _api.Api)("participant.set", {
                    participant_id: this.props.participant.id,
                    data: this.sertialize()
                }).onSuccess(this.props.stopEditing).send();
            } else {
                (0, _api.Api)("participant.create", {
                    discipline_id: this.props.discipline_id,
                    data: this.sertialize()
                }).onSuccess(this.props.stopEditing).send();
            }
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "tr",
                { className: "editor" + (this.props.newParticipant ? " create" : "") },
                React.createElement(
                    "td",
                    { colSpan: "6" },
                    React.createElement(
                        "div",
                        { className: "row" },
                        React.createElement(
                            "div",
                            { className: "col-md-7" },
                            React.createElement(
                                "form",
                                { onSubmit: this.onSubmit.bind(this), className: "row" },
                                React.createElement(
                                    "div",
                                    { className: "col-md-5 general-info" },
                                    React.createElement(ParticipantEditorRowGeneralInfo, {
                                        participant: this.state.participant,
                                        clubs: this.props.clubs,
                                        onChange: this.onChange.bind(this) }),
                                    React.createElement(
                                        "div",
                                        { className: "buttons" },
                                        React.createElement(
                                            "button",
                                            {
                                                type: "submit",
                                                className: "btn btn-primary" },
                                            (0, _loader._)("global.buttons.submit")
                                        ),
                                        React.createElement(
                                            "button",
                                            {
                                                type: "button",
                                                className: "btn btn-danger",
                                                onClick: this.props.stopEditing },
                                            (0, _loader._)("global.buttons.discard")
                                        )
                                    )
                                ),
                                React.createElement(
                                    "div",
                                    { className: "col-md-7" },
                                    React.createElement(ParticipantEditorRowSportsmenList, {
                                        sportsmen: this.state.participant.sportsmen,
                                        onChange: this.onChange.bind(this) })
                                )
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-md-5" },
                            React.createElement(ParticipantEditorRowPrograms, {
                                newParticipant: this.props.newParticipant,
                                participant_id: this.props.participant.id,
                                programs: this.props.participant.programs,
                                onChange: this.onChange.bind(this) })
                        )
                    )
                )
            );
        }
    }]);

    return ParticipantEditorRow;
}(React.Component);

var ParticipantRow = function (_React$Component13) {
    _inherits(ParticipantRow, _React$Component13);

    function ParticipantRow(props) {
        _classCallCheck(this, ParticipantRow);

        var _this25 = _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantRow).call(this, props));

        _this25.state = {
            editing: false
        };
        return _this25;
    }

    _createClass(ParticipantRow, [{
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "onDelete",
        value: function onDelete(event) {
            var _this26 = this;

            event.stopPropagation();
            (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_participant"), function () {
                (0, _api.Api)("participant.delete", {
                    participant_id: _this26.props.participant.id
                }).onSuccess(function () {
                    return swal.close();
                }).send();
            });
        }
    }, {
        key: "renderEditor",
        value: function renderEditor() {
            return React.createElement(ParticipantEditorRow, _extends({
                newParticipant: false,
                stopEditing: this.stopEditing.bind(this)
            }, this.props));
        }
    }, {
        key: "renderViewer",
        value: function renderViewer() {
            var p = this.props.participant;
            return React.createElement(
                "tr",
                { className: "viewer", onClick: this.startEditing.bind(this) },
                React.createElement(
                    "td",
                    { className: "number" },
                    p.number
                ),
                React.createElement(
                    "td",
                    { className: "name" },
                    p.name
                ),
                React.createElement(
                    "td",
                    { className: "club-name" },
                    p.club.name
                ),
                React.createElement(
                    "td",
                    { className: "club-city" },
                    p.club.city
                ),
                React.createElement(
                    "td",
                    { className: "delete" },
                    React.createElement(
                        "button",
                        { className: "btn btn-danger", onClick: this.onDelete.bind(this) },
                        "X"
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            if (this.state.editing) {
                return this.renderEditor();
            } else {
                return this.renderViewer();
            }
        }
    }]);

    return ParticipantRow;
}(React.Component);

var ParticipantCreationRow = function (_React$Component14) {
    _inherits(ParticipantCreationRow, _React$Component14);

    function ParticipantCreationRow(props) {
        _classCallCheck(this, ParticipantCreationRow);

        var _this27 = _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantCreationRow).call(this, props));

        _this27.state = {
            editing: false
        };
        return _this27;
    }

    _createClass(ParticipantCreationRow, [{
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "renderEditor",
        value: function renderEditor() {
            var empty_data = {
                "formation_name": "",
                "coaches": "",
                "number": "",
                "club": { "id": this.props.clubs[0] ? this.props.clubs[0].id : null },
                "sportsmen": [],
                "acrobatics": [],
                "programs": []
            };
            return React.createElement(ParticipantEditorRow, _extends({
                newParticipant: true,
                stopEditing: this.stopEditing.bind(this),
                participant: empty_data
            }, this.props));
        }
    }, {
        key: "renderButton",
        value: function renderButton() {
            return React.createElement(
                "tr",
                null,
                React.createElement(
                    "td",
                    { colSpan: "6" },
                    React.createElement(
                        "button",
                        {
                            type: "button",
                            className: "btn btn-default full-width",
                            onClick: this.startEditing.bind(this) },
                        (0, _loader._)("admin.buttons.add_participant")
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return this.state.editing ? this.renderEditor() : this.renderButton();
        }
    }]);

    return ParticipantCreationRow;
}(React.Component);

},{"common/tools":24,"l10n/loader":25,"server/api":28,"server/message_dispatcher":29,"server/storage":30,"ui/components":32,"ui/dialogs":33}],18:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StartList = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _admin_components = require("ui/admin_components");

var _components = require("ui/components");

var _printable = require("ui/printable");

var _docx = require("common/docx");

var _tools = require("common/tools");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ParticipantNumbersNumber = function (_React$Component) {
    _inherits(ParticipantNumbersNumber, _React$Component);

    function ParticipantNumbersNumber() {
        _classCallCheck(this, ParticipantNumbersNumber);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantNumbersNumber).apply(this, arguments));
    }

    _createClass(ParticipantNumbersNumber, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "participant" },
                React.createElement(
                    "p",
                    { className: "spacer-top" },
                    " "
                ),
                React.createElement(
                    "div",
                    { className: "competition" },
                    React.createElement(
                        "p",
                        null,
                        this.props.competition_name,
                        " "
                    )
                ),
                React.createElement(
                    "p",
                    { className: "spacer-top2" },
                    " "
                ),
                React.createElement(
                    "p",
                    { className: "number" },
                    this.props.participant.number
                ),
                React.createElement(
                    "p",
                    { className: "name" },
                    this.props.participant.name,
                    " "
                ),
                React.createElement(
                    "p",
                    { className: "discipline" },
                    this.props.participant.discipline_name,
                    " "
                ),
                React.createElement(
                    "p",
                    { className: "club" },
                    this.props.participant.club.name,
                    " — ",
                    this.props.participant.club.city
                ),
                React.createElement(
                    "p",
                    { className: "spacer-bottom" },
                    " "
                )
            );
        }
    }]);

    return ParticipantNumbersNumber;
}(React.Component);

var ParticipantNumbers = function (_React$Component2) {
    _inherits(ParticipantNumbers, _React$Component2);

    function ParticipantNumbers() {
        _classCallCheck(this, ParticipantNumbers);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantNumbers).apply(this, arguments));
    }

    _createClass(ParticipantNumbers, [{
        key: "makeParticipantsList",
        value: function makeParticipantsList() {
            var res = [];
            this.props.participants.forEach(function (group) {
                res = res.concat(group.participants.map(function (participant) {
                    return {
                        id: participant.id,
                        number: participant.number,
                        name: participant.name,
                        club: participant.club ? participant.club : group.club,
                        discipline_name: participant.discipline ? participant.discipline.name : group.name
                    };
                }));
            });
            return res;
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            // eslint-disable-line react/sort-comp
            return React.createElement(
                "div",
                { ref: "content", className: "print-only" },
                this.makeParticipantsList().map(function (participant) {
                    return React.createElement(ParticipantNumbersNumber, {
                        participant: participant,
                        competition_name: _this3.props.competition_name,
                        key: participant.id });
                })
            );
        }
    }, {
        key: "createDocx",
        value: function createDocx() {
            var filename = arguments.length <= 0 || arguments[0] === undefined ? "numbers.docx" : arguments[0];

            (0, _docx.Docx)(filename).setMargins([0, 10, 0, 10]).setBody(this.refs.content.innerHTML).addStyle("div", "margin", "0").addStyle("div", "padding", "0").addStyle("p", "mso-line-height-rule", "exactly").addStyle("div", "mso-line-height-rule", "exactly").addStyle(".participant", "text-align", "center").addStyle(".spacer-top", "line-height", "20pt").addStyle(".competition", "line-height", "15pt").addStyle(".spacer-top2", "line-height", "30pt").addStyle(".number", "line-height", "300pt").addStyle(".name", "line-height", "10pt").addStyle(".club", "line-height", "10pt").addStyle(".discipline", "line-height", "10pt").addStyle(".spacer-bottom", "line-height", "16pt").addStyle(".number", "font-size", "350pt").addStyle(".number", "letter-spacing:", "-20.0pt").addStyle(".competition", "font-size", "12pt").addStyle(".competition", "font-weight", "bold").addStyle(".competition", "border-bottom", "1pt solid black").addStyle(".name", "font-size", "12pt").addStyle(".name", "font-weight", "bold").addStyle(".club", "font-size", "12pt").addStyle(".discipline", "font-size", "12pt").save();
        }
    }]);

    return ParticipantNumbers;
}(React.Component);

var StartList = exports.StartList = function (_React$Component3) {
    _inherits(StartList, _React$Component3);

    function StartList(props) {
        _classCallCheck(this, StartList);

        var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(StartList).call(this, props));

        _this4.onConfigChange = function (new_config) {
            _this4.setState({
                config: new_config
            });
        };

        _this4.state = {
            competition: null,
            config: {
                include_formation_sportsmen: false,
                include_acrobatics: false,
                group_by_clubs: false,
                show_sportsmen_only: false,
                show_summary: false,
                disciplines: {},
                clubs: {}
            }
        };
        _message_dispatcher.message_dispatcher.addListener("db_update", _this4.reloadFromStorage.bind(_this4));
        _message_dispatcher.message_dispatcher.addListener("reload_data", _this4.loadData.bind(_this4));
        return _this4;
    }

    _createClass(StartList, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            this.storage = _storage.storage.getDomain("start_list_" + this.props.competition_id);
            this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
            this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
            this.loadData();
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
            _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
            _storage.storage.delDomain("start_list_" + this.props.competition_id);
        }
    }, {
        key: "reloadFromStorage",
        value: function reloadFromStorage() {
            var SCHEMA = {
                disciplines: {
                    participants: {
                        club: {},
                        programs: {}
                    }
                },
                clubs: {}
            };
            var competition = this.storage.get("Competition").by_id(this.props.competition_id).serialize(SCHEMA);
            var config = (0, _tools.clone)(this.state.config);
            var new_disciplines = {};
            var new_clubs = {};
            competition.disciplines.forEach(function (discipline) {
                new_disciplines[discipline.id] = discipline.id in config.disciplines ? config.disciplines[discipline.id] : true;
            });
            competition.clubs.forEach(function (club) {
                new_clubs[club.id] = club.id in config.clubs ? config.clubs[club.id] : true;
            });
            config.disciplines = new_disciplines;
            config.clubs = new_clubs;
            this.setState({
                config: config,
                competition: competition
            });
        }
    }, {
        key: "loadData",
        value: function loadData() {
            (0, _api.Api)("competition.get", {
                competition_id: this.props.competition_id,
                children: {
                    disciplines: {
                        participants: {
                            club: {},
                            programs: {}
                        }
                    },
                    clubs: {}
                }
            }).addToDB("Competition", this.props.competition_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
        }
    }, {
        key: "renderBody",
        value: function renderBody() {
            var props = {
                competition: this.state.competition,
                config: this.state.config
            };
            if (this.state.config.show_summary) {
                if (this.state.config.group_by_clubs) {
                    return React.createElement(ClubsSummaryTable, props);
                }
                return React.createElement(DisciplinesSummaryTable, props);
            }
            if (this.state.config.group_by_clubs) {
                return React.createElement(Clubs, props);
            }
            return React.createElement(Disciplines, props);
        }
    }, {
        key: "renderParticipantNumbers",
        value: function renderParticipantNumbers() {
            var participants = groupParticipants(this.state.competition, this.state.config);
            return React.createElement(ParticipantNumbers, {
                competition_name: this.state.competition.name,
                participants: participants,
                ref: "numbers" });
        }
    }, {
        key: "getTitle",
        value: function getTitle() {
            if (this.state.config.show_summary) {
                if (this.state.config.group_by_clubs) {
                    return (0, _loader._)("admin.headers.clubs_summary");
                }
                return (0, _loader._)("admin.headers.disciplines_summary");
            }
            if (this.state.config.show_sportsmen_only) {
                return (0, _loader._)("admin.headers.sportsmen_list");
            }
            return (0, _loader._)("admin.headers.start_list");
        }
    }, {
        key: "render",
        value: function render() {
            var _this5 = this;

            // eslint-disable-line react/sort-comp
            if (this.state.competition === null) {
                return React.createElement(_components.Loader, null);
            }
            return React.createElement(
                "div",
                { className: "app-content" },
                React.createElement(
                    "header",
                    { className: "app-header" },
                    React.createElement(
                        "div",
                        { className: "controls" },
                        React.createElement(
                            "button",
                            { className: "btn btn-primary", onClick: function onClick() {
                                    return _this5.createDocx();
                                } },
                            "DOCX"
                        ),
                        React.createElement(
                            "button",
                            { className: "btn btn-primary", onClick: function onClick() {
                                    return _this5.refs.numbers.createDocx();
                                } },
                            (0, _loader._)("admin.buttons.docx_numbers")
                        )
                    ),
                    React.createElement(
                        "h1",
                        null,
                        (0, _loader._)("admin.headers.start_list")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "app-body start-list" },
                    React.createElement(_admin_components.DisciplinesControls, {
                        custom_controls: [{ key: "include_acrobatics", label: (0, _loader._)("admin.labels.include_acrobatics") }, { key: "include_formation_sportsmen", label: (0, _loader._)("admin.labels.include_formation_sportsmen") }, { key: "group_by_clubs", label: (0, _loader._)("admin.labels.group_by_clubs") }, { key: "show_sportsmen_only", label: (0, _loader._)("admin.labels.show_sportsmen_only") }, { key: "show_summary", label: (0, _loader._)("admin.labels.show_summary") }],
                        config: this.state.config,
                        disciplines: this.state.competition.disciplines,
                        clubs: this.state.competition.clubs,
                        onChange: this.onConfigChange }),
                    React.createElement(_printable.Printable, {
                        ref: "printable",
                        header: this.state.competition.name + ", " + this.state.competition.date,
                        title1: this.getTitle(),
                        body: this.renderBody() }),
                    this.renderParticipantNumbers()
                )
            );
        }
    }, {
        key: "createDocx",
        value: function createDocx() {
            var filename = arguments.length <= 0 || arguments[0] === undefined ? "start-list.docx" : arguments[0];

            (0, _docx.Docx)(filename).setMargins([10, 15, 10, 25]).setHeader(this.state.competition.name + ", " + this.state.competition.date).setTitle1(this.getTitle()).setBody(this.refs.printable.fetchPrintableData()).addStyle(".bordered-table .inner td, .bordered-table .inner th", "border", "none").addStyle(".bordered-table .inner td, .bordered-table .inner th", "padding", "0").addStyle(".inner", "width", "100%").addStyle(".acro", "border-top", "none !important").addStyle(".has-acro td", "border-bottom", "1px solid #555 !important").addStyle(".has-acro td td", "border-bottom", "none !important").addStyle("tr.tr-acro", "page-break-inside", "auto").save();
        }
    }]);

    return StartList;
}(React.Component);

function groupParticipants(competition, config) {
    if (config.group_by_clubs) {
        var _ret = function () {
            var clubs = (0, _tools.clone)(competition.clubs);
            var disciplines = (0, _tools.clone)(competition.disciplines);
            var grouped = {};
            disciplines.forEach(function (discipline) {
                if (!config.disciplines[discipline.id]) {
                    return;
                }
                discipline.participants.forEach(function (participant) {
                    if (!config.clubs[participant.club.id]) {
                        return;
                    }
                    var club_id = participant.club.id;
                    if (!(club_id in grouped)) {
                        grouped[club_id] = [];
                    }
                    participant.discipline = discipline;
                    grouped[club_id].push(participant);
                });
            });
            clubs.forEach(function (club) {
                club.participants = grouped[club.id];
            });
            return {
                v: clubs.filter(function (club) {
                    return club.participants;
                })
            };
        }();

        if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
    } else {
        var disciplines = (0, _tools.clone)(competition.disciplines);
        disciplines = disciplines.filter(function (discipline) {
            return config.disciplines[discipline.id];
        });
        disciplines.forEach(function (discipline) {
            discipline.participants = discipline.participants.filter(function (participant) {
                return config.clubs[participant.club.id];
            });
        });
        return disciplines.filter(function (discipline) {
            return discipline.participants.length > 0;
        });
    }
}

var DisciplinesSummaryTable = function (_React$Component4) {
    _inherits(DisciplinesSummaryTable, _React$Component4);

    function DisciplinesSummaryTable() {
        _classCallCheck(this, DisciplinesSummaryTable);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplinesSummaryTable).apply(this, arguments));
    }

    _createClass(DisciplinesSummaryTable, [{
        key: "render",
        value: function render() {
            var disciplines = groupParticipants(this.props.competition, this.props.config);
            var all_participants = [].concat.apply([], disciplines.map(function (d) {
                return d.participants;
            }));
            return React.createElement(
                "div",
                { className: "summary" },
                React.createElement(ClubsShown, this.props),
                React.createElement(
                    "table",
                    { className: "bordered-table" },
                    React.createElement(
                        "tbody",
                        null,
                        disciplines.map(function (discipline) {
                            return React.createElement(ParticipantsStats, {
                                table_row: true,
                                key: discipline.id,
                                label: discipline.name,
                                participants: discipline.participants });
                        })
                    )
                ),
                React.createElement(
                    "p",
                    null,
                    " "
                ),
                React.createElement(ParticipantsStats, {
                    participants: all_participants })
            );
        }
    }]);

    return DisciplinesSummaryTable;
}(React.Component);

var ClubsSummaryTable = function (_React$Component5) {
    _inherits(ClubsSummaryTable, _React$Component5);

    function ClubsSummaryTable() {
        _classCallCheck(this, ClubsSummaryTable);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ClubsSummaryTable).apply(this, arguments));
    }

    _createClass(ClubsSummaryTable, [{
        key: "render",
        value: function render() {
            var clubs = groupParticipants(this.props.competition, this.props.config);
            var all_participants = [].concat.apply([], clubs.map(function (c) {
                return c.participants;
            }));
            return React.createElement(
                "div",
                { className: "summary" },
                React.createElement(DisciplinesShown, this.props),
                React.createElement(
                    "table",
                    { className: "bordered-table" },
                    React.createElement(
                        "tbody",
                        null,
                        clubs.map(function (club) {
                            return React.createElement(ParticipantsStats, {
                                table_row: true,
                                key: club.id,
                                label: club.name + ", " + club.city,
                                participants: club.participants });
                        })
                    )
                ),
                React.createElement(
                    "p",
                    null,
                    " "
                ),
                React.createElement(ParticipantsStats, {
                    participants: all_participants })
            );
        }
    }]);

    return ClubsSummaryTable;
}(React.Component);

var DisciplinesShown = function (_React$Component6) {
    _inherits(DisciplinesShown, _React$Component6);

    function DisciplinesShown() {
        _classCallCheck(this, DisciplinesShown);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplinesShown).apply(this, arguments));
    }

    _createClass(DisciplinesShown, [{
        key: "hasDisabledDisciplines",
        value: function hasDisabledDisciplines() {
            var _this9 = this;

            return this.props.competition.disciplines.filter(function (d) {
                return !_this9.props.config.disciplines[d.id];
            }).length > 0;
        }
    }, {
        key: "getEnabledDisciplines",
        value: function getEnabledDisciplines() {
            var _this10 = this;

            return this.props.competition.disciplines.filter(function (d) {
                return _this10.props.config.disciplines[d.id];
            });
        }
    }, {
        key: "render",
        value: function render() {
            if (!this.hasDisabledDisciplines()) {
                return null;
            }
            var disciplines = this.getEnabledDisciplines();
            if (disciplines.length === 0) {
                return null;
            }
            return React.createElement(
                "div",
                { className: "disciplines-shown" },
                React.createElement(
                    "p",
                    null,
                    React.createElement(
                        "strong",
                        null,
                        (0, _loader._)("admin.headers.disciplines_shown")
                    )
                ),
                React.createElement(
                    "ul",
                    null,
                    disciplines.map(function (d) {
                        return React.createElement(
                            "li",
                            { key: d.id },
                            d.name
                        );
                    })
                )
            );
        }
    }]);

    return DisciplinesShown;
}(React.Component);

var ClubsShown = function (_React$Component7) {
    _inherits(ClubsShown, _React$Component7);

    function ClubsShown() {
        _classCallCheck(this, ClubsShown);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ClubsShown).apply(this, arguments));
    }

    _createClass(ClubsShown, [{
        key: "hasDisabledClubs",
        value: function hasDisabledClubs() {
            var _this12 = this;

            return this.props.competition.clubs.filter(function (d) {
                return !_this12.props.config.clubs[d.id];
            }).length > 0;
        }
    }, {
        key: "getEnabledClubs",
        value: function getEnabledClubs() {
            var _this13 = this;

            return this.props.competition.clubs.filter(function (d) {
                return _this13.props.config.clubs[d.id];
            });
        }
    }, {
        key: "render",
        value: function render() {
            if (!this.hasDisabledClubs()) {
                return null;
            }
            var clubs = this.getEnabledClubs();
            if (clubs.length === 0) {
                return null;
            }
            return React.createElement(
                "div",
                { className: "clubs-shown" },
                React.createElement(
                    "p",
                    null,
                    React.createElement(
                        "strong",
                        null,
                        (0, _loader._)("admin.headers.clubs_shown")
                    )
                ),
                React.createElement(
                    "ul",
                    null,
                    clubs.map(function (d) {
                        return React.createElement(
                            "li",
                            { key: d.id },
                            d.name
                        );
                    })
                )
            );
        }
    }]);

    return ClubsShown;
}(React.Component);

var Disciplines = function (_React$Component8) {
    _inherits(Disciplines, _React$Component8);

    function Disciplines() {
        _classCallCheck(this, Disciplines);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Disciplines).apply(this, arguments));
    }

    _createClass(Disciplines, [{
        key: "render",
        value: function render() {
            var _this15 = this;

            var disciplines = groupParticipants(this.props.competition, this.props.config);
            return React.createElement(
                "div",
                null,
                React.createElement(ClubsShown, this.props),
                disciplines.map(function (discipline) {
                    return React.createElement(DisciplineSection, _extends({
                        key: discipline.id,
                        discipline: discipline
                    }, _this15.props));
                })
            );
        }
    }]);

    return Disciplines;
}(React.Component);

var DisciplineSection = function (_React$Component9) {
    _inherits(DisciplineSection, _React$Component9);

    function DisciplineSection() {
        _classCallCheck(this, DisciplineSection);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineSection).apply(this, arguments));
    }

    _createClass(DisciplineSection, [{
        key: "renderRows",
        value: function renderRows() {
            var _this17 = this;

            var result = [];
            this.props.discipline.participants.forEach(function (p) {
                var include_acrobatics = _this17.props.config.include_acrobatics && p.programs.length !== 0;
                result.push(React.createElement(DisciplineSectionRow, {
                    key: "P" + p.id,
                    config: _this17.props.config,
                    acro_included: include_acrobatics,
                    participant: p }));
                if (include_acrobatics) {
                    result.push(React.createElement(Acrobatics, {
                        key: "A" + p.id,
                        config: _this17.props.config,
                        participant: p }));
                }
            });
            return result;
        }
    }, {
        key: "renderBody",
        value: function renderBody() {
            if (this.props.config.show_sportsmen_only) {
                return React.createElement(SportsmenList, {
                    config: this.props.config,
                    participants: this.props.discipline.participants });
            }
            return React.createElement(
                "table",
                { className: "bordered-table" },
                React.createElement(
                    "thead",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "w-8 number" },
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.participant.number")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-27 name" },
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.participant.sportsmen")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-9 year-of-birth" },
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.participant.sportsmen_year_of_birth")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-28 club" },
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.participant.club_name")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-28 coaches" },
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.participant.coaches")
                            )
                        )
                    )
                ),
                React.createElement(
                    "tbody",
                    null,
                    this.renderRows()
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            if (!this.props.config.disciplines[this.props.discipline.id]) {
                return null;
            }
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "h5",
                    null,
                    React.createElement(
                        "p",
                        null,
                        this.props.discipline.name
                    )
                ),
                React.createElement(
                    "div",
                    { className: "discipline" },
                    this.renderBody(),
                    React.createElement(ParticipantsStats, {
                        participants: this.props.discipline.participants })
                )
            );
        }
    }]);

    return DisciplineSection;
}(React.Component);

var DisciplineSectionRow = function (_React$Component10) {
    _inherits(DisciplineSectionRow, _React$Component10);

    function DisciplineSectionRow() {
        _classCallCheck(this, DisciplineSectionRow);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(DisciplineSectionRow).apply(this, arguments));
    }

    _createClass(DisciplineSectionRow, [{
        key: "render",
        value: function render() {
            var class_name = this.props.acro_included ? "has-acro" : "";
            var p = this.props.participant;
            return React.createElement(
                "tr",
                { className: class_name },
                React.createElement(
                    "td",
                    { className: "w-8 number" },
                    React.createElement(
                        "p",
                        { className: "text-center" },
                        p.number
                    )
                ),
                React.createElement(
                    "td",
                    { className: "w-36 name", colSpan: "2" },
                    React.createElement(SportsmenTable, {
                        config: this.props.config,
                        participant: p })
                ),
                React.createElement(
                    "td",
                    { className: "w-28 club" },
                    React.createElement(
                        "p",
                        null,
                        p.club.name
                    )
                ),
                React.createElement(
                    "td",
                    { className: "w-28 coaches" },
                    React.createElement(
                        "p",
                        null,
                        p.coaches.split(",").map(function (c) {
                            return [c.trim(), React.createElement("br", { key: "X" })];
                        })
                    )
                )
            );
        }
    }]);

    return DisciplineSectionRow;
}(React.Component);

var Clubs = function (_React$Component11) {
    _inherits(Clubs, _React$Component11);

    function Clubs() {
        _classCallCheck(this, Clubs);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Clubs).apply(this, arguments));
    }

    _createClass(Clubs, [{
        key: "render",
        value: function render() {
            var _this20 = this;

            var clubs = groupParticipants(this.props.competition, this.props.config);
            return React.createElement(
                "div",
                null,
                React.createElement(DisciplinesShown, this.props),
                clubs.map(function (club) {
                    return React.createElement(ClubSection, _extends({
                        key: club.id,
                        club: club
                    }, _this20.props));
                })
            );
        }
    }]);

    return Clubs;
}(React.Component);

var ClubSection = function (_React$Component12) {
    _inherits(ClubSection, _React$Component12);

    function ClubSection() {
        _classCallCheck(this, ClubSection);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ClubSection).apply(this, arguments));
    }

    _createClass(ClubSection, [{
        key: "renderRows",
        value: function renderRows() {
            var _this22 = this;

            var result = [];
            this.props.club.participants.forEach(function (p) {
                var include_acrobatics = _this22.props.config.include_acrobatics && p.programs.length !== 0;
                result.push(React.createElement(ClubSectionRow, {
                    key: "P" + p.id,
                    config: _this22.props.config,
                    acro_included: include_acrobatics,
                    participant: p }));
                if (include_acrobatics) {
                    result.push(React.createElement(Acrobatics, {
                        key: "A" + p.id,
                        config: _this22.props.config,
                        participant: p }));
                }
            });
            return result;
        }
    }, {
        key: "renderBody",
        value: function renderBody() {
            if (this.props.config.show_sportsmen_only) {
                return React.createElement(SportsmenList, {
                    config: this.props.config,
                    participants: this.props.club.participants });
            }
            return React.createElement(
                "table",
                { className: "bordered-table" },
                React.createElement(
                    "thead",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "w-8 number" },
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.participant.number")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-27 name" },
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.participant.sportsmen")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-9 year-of-birth" },
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.participant.sportsmen_year_of_birth")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-28 discipline" },
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.participant.discipline_name")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-28 coaches" },
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.participant.coaches")
                            )
                        )
                    )
                ),
                React.createElement(
                    "tbody",
                    null,
                    this.renderRows()
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "h5",
                    null,
                    React.createElement(
                        "p",
                        null,
                        this.props.club.name,
                        ", ",
                        this.props.club.city
                    )
                ),
                React.createElement(
                    "div",
                    { className: "club" },
                    this.renderBody(),
                    React.createElement(ParticipantsStats, {
                        participants: this.props.club.participants })
                )
            );
        }
    }]);

    return ClubSection;
}(React.Component);

var ClubSectionRow = function (_React$Component13) {
    _inherits(ClubSectionRow, _React$Component13);

    function ClubSectionRow() {
        _classCallCheck(this, ClubSectionRow);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ClubSectionRow).apply(this, arguments));
    }

    _createClass(ClubSectionRow, [{
        key: "render",
        value: function render() {
            var class_name = this.props.acro_included ? "has-acro" : "";
            var p = this.props.participant;
            return React.createElement(
                "tr",
                { className: class_name },
                React.createElement(
                    "td",
                    { className: "w-8 number" },
                    React.createElement(
                        "p",
                        { className: "text-center" },
                        p.number
                    )
                ),
                React.createElement(
                    "td",
                    { className: "w-36 name", colSpan: "2" },
                    React.createElement(SportsmenTable, {
                        config: this.props.config,
                        participant: p })
                ),
                React.createElement(
                    "td",
                    { className: "w-28 discipline" },
                    React.createElement(
                        "p",
                        null,
                        p.discipline.name
                    )
                ),
                React.createElement(
                    "td",
                    { className: "w-28 coaches" },
                    React.createElement(
                        "p",
                        null,
                        p.coaches.split(",").map(function (c) {
                            return [c.trim(), React.createElement("br", { key: "X" })];
                        })
                    )
                )
            );
        }
    }]);

    return ClubSectionRow;
}(React.Component);

var SportsmenTable = function (_React$Component14) {
    _inherits(SportsmenTable, _React$Component14);

    function SportsmenTable() {
        _classCallCheck(this, SportsmenTable);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(SportsmenTable).apply(this, arguments));
    }

    _createClass(SportsmenTable, [{
        key: "renderFormationName",
        value: function renderFormationName() {
            var formation_name = this.props.participant.formation_name;
            if (formation_name !== "") {
                return React.createElement(
                    "tr",
                    { key: "FN" },
                    React.createElement(
                        "th",
                        { colSpan: "2" },
                        React.createElement(
                            "p",
                            { className: "text-left" },
                            formation_name
                        )
                    )
                );
            }
            return null;
        }
    }, {
        key: "renderSportsmen",
        value: function renderSportsmen() {
            if (this.props.config.include_formation_sportsmen || this.props.participant.formation_name === "") {
                return this.props.participant.sportsmen.map(function (s, idx) {
                    return React.createElement(
                        "tr",
                        { key: idx },
                        React.createElement(
                            "td",
                            { className: "w-75" },
                            React.createElement(
                                "p",
                                null,
                                s.last_name + " " + s.first_name,
                                s.substitute ? React.createElement(
                                    "i",
                                    null,
                                    " (",
                                    (0, _loader._)("admin.labels.sub"),
                                    ".)"
                                ) : null
                            )
                        ),
                        React.createElement(
                            "td",
                            { className: "w-25" },
                            React.createElement(
                                "p",
                                { className: "text-center" },
                                s.year_of_birth
                            )
                        )
                    );
                });
            }
        }
    }, {
        key: "render",
        value: function render() {
            var p = this.props.participant;
            return React.createElement(
                "table",
                { className: "inner" },
                React.createElement(
                    "tbody",
                    null,
                    this.renderFormationName(),
                    this.renderSportsmen()
                )
            );
        }
    }]);

    return SportsmenTable;
}(React.Component);

var SportsmenList = function (_React$Component15) {
    _inherits(SportsmenList, _React$Component15);

    function SportsmenList() {
        _classCallCheck(this, SportsmenList);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(SportsmenList).apply(this, arguments));
    }

    _createClass(SportsmenList, [{
        key: "render",
        value: function render() {
            var sportsmen = ParticipantsStats.getUniqueSportsmen(this.props.participants);
            sportsmen.sort(function (a, b) {
                return (0, _tools.CmpChain)().cmp(a.last_name, b.last_name).cmp(a.first_name, b.first_name).cmp(a.gender, b.gender).cmp(a.year_of_birth, b.year_of_birth).end();
            });
            return React.createElement(
                "table",
                { className: "bordered-table" },
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "w-5" },
                            React.createElement(
                                "p",
                                null,
                                " "
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-35" },
                            React.createElement(
                                "p",
                                { className: "text-left" },
                                (0, _loader._)("models.participant.sportsman")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-15" },
                            React.createElement(
                                "p",
                                { className: "text-center" },
                                (0, _loader._)("models.participant.yob")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-15" },
                            React.createElement(
                                "p",
                                { className: "text-center" },
                                (0, _loader._)("models.participant.gender")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-15" },
                            React.createElement(
                                "p",
                                { className: "text-center" },
                                (0, _loader._)("models.participant.substitute_n")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-15" },
                            React.createElement(
                                "p",
                                { className: "text-center" },
                                (0, _loader._)("models.participant.substitute_y")
                            )
                        )
                    ),
                    sportsmen.map(function (s, idx) {
                        return React.createElement(
                            "tr",
                            { key: idx },
                            React.createElement(
                                "td",
                                { className: "w-5" },
                                React.createElement(
                                    "p",
                                    { className: "text-right" },
                                    idx + 1
                                )
                            ),
                            React.createElement(
                                "td",
                                { className: "w-35" },
                                React.createElement(
                                    "p",
                                    { className: "text-left" },
                                    s.last_name + " " + s.first_name
                                )
                            ),
                            React.createElement(
                                "td",
                                { className: "w-15" },
                                React.createElement(
                                    "p",
                                    { className: "text-center" },
                                    s.year_of_birth
                                )
                            ),
                            React.createElement(
                                "td",
                                { className: "w-15" },
                                React.createElement(
                                    "p",
                                    { className: "text-center" },
                                    s.gender === "F" ? (0, _loader._)("models.participant.gender_f") : (0, _loader._)("models.participant.gender_m")
                                )
                            ),
                            React.createElement(
                                "td",
                                { className: "w-15" },
                                React.createElement(
                                    "p",
                                    { className: "text-center" },
                                    s.p_count
                                )
                            ),
                            React.createElement(
                                "td",
                                { className: "w-15" },
                                React.createElement(
                                    "p",
                                    { className: "text-center" },
                                    s.s_count
                                )
                            )
                        );
                    })
                )
            );
        }
    }]);

    return SportsmenList;
}(React.Component);

var ParticipantsStats = function (_React$Component16) {
    _inherits(ParticipantsStats, _React$Component16);

    function ParticipantsStats() {
        _classCallCheck(this, ParticipantsStats);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ParticipantsStats).apply(this, arguments));
    }

    _createClass(ParticipantsStats, [{
        key: "render",
        value: function render() {
            var sp_count = ParticipantsStats.countSportsmen(this.props.participants);
            var p_count = sp_count.total - sp_count.substitute_only;
            var s_count = sp_count.substitute_only;
            if (this.props.table_row) {
                return React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        { className: "w-60" },
                        React.createElement(
                            "p",
                            { className: "text-left" },
                            this.props.label
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "w-16" },
                        React.createElement(
                            "p",
                            { className: "text-left" },
                            (0, _loader._)("admin.phrases.n_participants", this.props.participants.length)
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "w-24" },
                        React.createElement(
                            "p",
                            { className: "text-left" },
                            (0, _loader._)("admin.phrases.n_sportsmen_short", p_count, s_count)
                        )
                    )
                );
            }
            return React.createElement(
                "p",
                { className: "text-right" },
                React.createElement(
                    "strong",
                    null,
                    (0, _loader._)("admin.phrases.total_n_participants", this.props.participants.length),
                    ", ",
                    (0, _loader._)("admin.phrases.n_sportsmen", p_count, s_count)
                )
            );
        }
    }], [{
        key: "hashSportsman",
        value: function hashSportsman(s) {
            return s.last_name + "\n" + s.first_name + "\n" + s.year_of_birth + "\n" + s.gender;
        }
    }, {
        key: "getUniqueSportsmen",
        value: function getUniqueSportsmen(participants) {
            var found = {};
            participants.forEach(function (p) {
                p.sportsmen.forEach(function (s) {
                    var hash = ParticipantsStats.hashSportsman(s);
                    if (!found[hash]) {
                        found[hash] = (0, _tools.clone)(s);
                        found[hash].s_count = 0;
                        found[hash].p_count = 0;
                    }
                    if (s.substitute) {
                        ++found[hash].s_count;
                    } else {
                        ++found[hash].p_count;
                    }
                });
            });
            return Object.keys(found).map(function (key) {
                return found[key];
            });
        }
    }, {
        key: "countSportsmen",
        value: function countSportsmen(participants) {
            var sportsmen = ParticipantsStats.getUniqueSportsmen(participants);
            return {
                total: sportsmen.length,
                substitute_only: sportsmen.filter(function (s) {
                    return s.p_count === 0;
                }).length
            };
        }
    }]);

    return ParticipantsStats;
}(React.Component);

var Acrobatics = function (_React$Component17) {
    _inherits(Acrobatics, _React$Component17);

    function Acrobatics() {
        _classCallCheck(this, Acrobatics);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Acrobatics).apply(this, arguments));
    }

    _createClass(Acrobatics, [{
        key: "render",
        value: function render() {
            var p = this.props.participant;
            return React.createElement(
                "tr",
                { className: "tr-acro" },
                React.createElement(
                    "td",
                    { className: "acro", colSpan: "5" },
                    React.createElement(
                        "table",
                        { className: "inner" },
                        React.createElement(
                            "tbody",
                            null,
                            p.programs.map(function (pr, pr_idx) {
                                return [React.createElement(
                                    "tr",
                                    { key: "H" + pr_idx },
                                    React.createElement(
                                        "th",
                                        { colSpan: "3" },
                                        React.createElement(
                                            "p",
                                            { className: "text-left" },
                                            pr.name
                                        )
                                    )
                                )].concat(pr.acrobatics.map(function (a, a_idx) {
                                    return React.createElement(
                                        "tr",
                                        { key: "A_" + pr_idx + "_" + a_idx },
                                        React.createElement(
                                            "td",
                                            { className: "w-3" },
                                            React.createElement(
                                                "p",
                                                { className: "text-left" },
                                                a_idx + 1
                                            )
                                        ),
                                        React.createElement(
                                            "td",
                                            { className: "w-90" },
                                            React.createElement(
                                                "p",
                                                { className: "text-left" },
                                                a.description
                                            )
                                        ),
                                        React.createElement(
                                            "td",
                                            { className: "w-7" },
                                            React.createElement(
                                                "p",
                                                { className: "text-right" },
                                                a.score.toFixed(1)
                                            )
                                        )
                                    );
                                }));
                            })
                        )
                    )
                )
            );
        }
    }]);

    return Acrobatics;
}(React.Component);

},{"common/docx":23,"common/tools":24,"l10n/loader":25,"server/api":28,"server/message_dispatcher":29,"server/storage":30,"ui/admin_components":31,"ui/components":32,"ui/printable":34}],19:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Tours = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _definitions = require("common/definitions");

var _dialogs = require("ui/dialogs");

var _tools = require("common/tools");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tours = exports.Tours = function (_React$Component) {
    _inherits(Tours, _React$Component);

    function Tours(props) {
        _classCallCheck(this, Tours);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Tours).call(this, props));

        _this.state = {
            new_tour_after_id: -1
        };
        return _this;
    }

    _createClass(Tours, [{
        key: "addTourAfter",
        value: function addTourAfter(tour_id) {
            this.setState({
                new_tour_after_id: tour_id
            });
        }
    }, {
        key: "renderTourCreation",
        value: function renderTourCreation(after_id, next_tour) {
            if (next_tour && next_tour.finalized) {
                return null;
            }
            if (after_id === this.state.new_tour_after_id) {
                return React.createElement(TourCreatingUI, {
                    discipline_id: this.props.discipline.id,
                    add_after: after_id,
                    stopEditing: this.addTourAfter.bind(this, -1),
                    rules_set: this.props.rules_set
                });
            } else {
                return React.createElement(
                    "button",
                    { className: "btn btn-default full-width", onClick: this.addTourAfter.bind(this, after_id) },
                    (0, _loader._)("admin.buttons.add_tour")
                );
            }
        }
    }, {
        key: "renderTours",
        value: function renderTours() {
            return this.props.discipline.tours.map(function (tour, idx, arr) {
                return [React.createElement(TourEditingUI, { tour: tour, rules_set: this.props.rules_set, key: tour.id }), this.renderTourCreation(tour.id, arr[idx + 1])];
            }.bind(this));
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "app-content" },
                React.createElement(
                    "header",
                    { className: "app-header" },
                    React.createElement(
                        "h1",
                        null,
                        this.props.discipline.name
                    )
                ),
                React.createElement(
                    "div",
                    { className: "app-body ic-management-ui" },
                    this.renderTourCreation(null, this.props.discipline.tours[0]),
                    this.renderTours()
                ),
                React.createElement(
                    "datalist",
                    { id: "dl_tours" },
                    _loader.tour_names.map(function (n, idx) {
                        return React.createElement("option", { key: idx, value: n });
                    })
                ),
                React.createElement(
                    "datalist",
                    { id: "dl_programs" },
                    _definitions.GL.suggested_programs.map(function (n, idx) {
                        return React.createElement("option", { key: idx, value: n });
                    })
                )
            );
        }
    }]);

    return Tours;
}(React.Component);

var TourInputForm = function (_React$Component2) {
    _inherits(TourInputForm, _React$Component2);

    function TourInputForm() {
        _classCallCheck(this, TourInputForm);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourInputForm).apply(this, arguments));
    }

    _createClass(TourInputForm, [{
        key: "submitTour",
        value: function submitTour(event) {
            event.preventDefault();
            this.props.submitTour(this.serialize());
        }
    }, {
        key: "serialize",
        value: function serialize() {
            var result = {
                name: this.refs.name.value,
                participants_per_heat: this.refs.participants_per_heat.value,
                default_program: this.refs.default_program.value
            };
            if (!this.props.tour || !this.props.tour.finalized) {
                result["num_advances"] = this.refs.num_advances.value;
                result["scoring_system_name"] = this.refs.scoring_system_name.value;
                result["hope_tour"] = this.refs.hope_tour.checked;
            }
            return result;
        }
    }, {
        key: "render",
        value: function render() {
            var classes = ["tour", ""].concat(this.props.classes || []).join(" ");
            var tour = this.props.tour || { id: "new" };
            return React.createElement(
                "form",
                { className: classes, key: tour.id, onSubmit: this.submitTour.bind(this) },
                React.createElement(
                    "div",
                    { className: "row" },
                    React.createElement(
                        "div",
                        { className: "col-md-6" },
                        React.createElement(
                            "div",
                            { className: "form-group form-group-sm" },
                            React.createElement(
                                "label",
                                { className: "control-label" },
                                (0, _loader._)("models.tour.name")
                            ),
                            React.createElement("input", {
                                list: "dl_tours",
                                type: "text",
                                className: "form-control",
                                ref: "name",
                                defaultValue: tour.name })
                        ),
                        React.createElement(
                            "div",
                            { className: "form-group form-group-sm row" },
                            React.createElement(
                                "div",
                                { className: "col-lg-4" },
                                React.createElement(
                                    "label",
                                    { className: "control-label" },
                                    (0, _loader._)("models.tour.num_advances")
                                ),
                                React.createElement("input", {
                                    type: "text",
                                    className: "form-control",
                                    ref: "num_advances",
                                    disabled: tour.finalized,
                                    defaultValue: tour.num_advances })
                            ),
                            React.createElement(
                                "div",
                                { className: "col-lg-4" },
                                React.createElement(
                                    "label",
                                    { className: "control-label" },
                                    (0, _loader._)("models.tour.participants_per_heat")
                                ),
                                React.createElement("input", {
                                    type: "text",
                                    className: "form-control",
                                    ref: "participants_per_heat",
                                    defaultValue: tour.participants_per_heat || 2 })
                            ),
                            React.createElement(
                                "div",
                                { div: true, className: "col-lg-4" },
                                React.createElement(
                                    "label",
                                    { className: "control-label" },
                                    (0, _loader._)("models.tour.is_hope_tour")
                                ),
                                React.createElement(
                                    "div",
                                    { className: "checkbox" },
                                    React.createElement(
                                        "label",
                                        null,
                                        React.createElement("input", {
                                            type: "checkbox",
                                            ref: "hope_tour",
                                            disabled: tour.finalized,
                                            defaultChecked: tour.hope_tour })
                                    )
                                )
                            )
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "col-md-6" },
                        React.createElement(
                            "div",
                            { className: "form-group form-group-sm" },
                            React.createElement(
                                "label",
                                { className: "control-label" },
                                (0, _loader._)("models.tour.scoring_system_name")
                            ),
                            React.createElement(
                                "select",
                                {
                                    className: "form-control",
                                    ref: "scoring_system_name",
                                    disabled: tour.finalized,
                                    defaultValue: tour.scoring_system_name || _definitions.GL.scoring_systems[this.props.rules_set][0] },
                                _definitions.GL.scoring_systems[this.props.rules_set].map(function (sn) {
                                    return React.createElement(
                                        "option",
                                        { key: sn, value: sn },
                                        (0, _loader._)("scoring_systems_names." + sn)
                                    );
                                })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "form-group form-group-sm row" },
                            React.createElement(
                                "div",
                                { className: "col-lg-6" },
                                React.createElement(
                                    "label",
                                    { className: "control-label" },
                                    (0, _loader._)("models.tour.default_program")
                                ),
                                React.createElement("input", {
                                    type: "text",
                                    list: "dl_programs",
                                    className: "form-control",
                                    ref: "default_program",
                                    defaultValue: tour.default_program || "" })
                            ),
                            React.createElement(
                                "div",
                                { className: "col-lg-6" },
                                React.createElement(
                                    "label",
                                    { className: "control-label" },
                                    " "
                                ),
                                React.createElement(
                                    "div",
                                    { className: "text-right" },
                                    React.createElement(
                                        "button",
                                        { className: "btn btn-primary btn-sm", type: "submit" },
                                        (0, _loader._)("global.buttons.submit")
                                    ),
                                    " ",
                                    React.createElement(
                                        "button",
                                        { className: "btn btn-primary btn-sm", type: "button", onClick: this.props.stopEditing },
                                        (0, _loader._)("global.buttons.discard")
                                    )
                                )
                            )
                        )
                    )
                )
            );
        }
    }]);

    return TourInputForm;
}(React.Component);

var TourEditingUI = function (_React$Component3) {
    _inherits(TourEditingUI, _React$Component3);

    function TourEditingUI(props) {
        _classCallCheck(this, TourEditingUI);

        var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(TourEditingUI).call(this, props));

        _this3.state = {
            editing: false
        };
        return _this3;
    }

    _createClass(TourEditingUI, [{
        key: "startEditing",
        value: function startEditing() {
            this.setState({
                editing: true
            });
        }
    }, {
        key: "stopEditing",
        value: function stopEditing() {
            this.setState({
                editing: false
            });
        }
    }, {
        key: "renderEditor",
        value: function renderEditor() {
            return React.createElement(TourInputForm, {
                tour: this.props.tour,
                rules_set: this.props.rules_set,
                submitTour: this.submitTour.bind(this),
                stopEditing: this.stopEditing.bind(this) });
        }
    }, {
        key: "renderViewer",
        value: function renderViewer() {
            return React.createElement(
                "div",
                { className: "tour", key: this.props.tour.id },
                React.createElement(
                    "h3",
                    null,
                    this.props.tour.name
                ),
                React.createElement(
                    "div",
                    { className: "row" },
                    React.createElement(
                        "div",
                        { className: "col-md-5" },
                        React.createElement(
                            "p",
                            null,
                            React.createElement(
                                "strong",
                                null,
                                (0, _loader._)("models.tour.num_advances"),
                                ":"
                            ),
                            " ",
                            this.props.tour.num_advances,
                            " "
                        ),
                        React.createElement(
                            "p",
                            null,
                            React.createElement(
                                "strong",
                                null,
                                (0, _loader._)("models.tour.participants_per_heat"),
                                ":"
                            ),
                            " ",
                            this.props.tour.participants_per_heat,
                            " "
                        ),
                        React.createElement(
                            "p",
                            null,
                            React.createElement(
                                "strong",
                                null,
                                (0, _loader._)("models.tour.is_hope_tour"),
                                ":"
                            ),
                            " ",
                            this.props.tour.hope_tour ? (0, _loader._)("global.labels.yes") : (0, _loader._)("global.labels.no"),
                            " "
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "col-md-5" },
                        React.createElement(
                            "p",
                            null,
                            React.createElement(
                                "strong",
                                null,
                                (0, _loader._)("models.tour.scoring_system_name"),
                                ":"
                            ),
                            " ",
                            (0, _loader._)("scoring_systems_names." + this.props.tour.scoring_system_name),
                            " "
                        ),
                        React.createElement(
                            "p",
                            null,
                            React.createElement(
                                "strong",
                                null,
                                (0, _loader._)("models.tour.default_program"),
                                ":"
                            ),
                            " ",
                            this.props.tour.default_program,
                            " "
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "col-md-2" },
                        React.createElement(
                            "button",
                            { className: "full-width btn btn-primary btn-sm", onClick: this.startEditing.bind(this) },
                            (0, _loader._)("global.buttons.edit")
                        ),
                        React.createElement("br", null),
                        React.createElement(
                            "button",
                            { className: "full-width btn btn-danger btn-sm", onClick: this.deleteTour.bind(this) },
                            (0, _loader._)("global.buttons.delete")
                        )
                    )
                )
            );
        }
    }, {
        key: "submitTour",
        value: function submitTour(data) {
            (0, _api.Api)("tour.set", {
                tour_id: this.props.tour.id,
                data: data
            }).onSuccess(function (response) {
                this.stopEditing();
            }.bind(this)).send();
        }
    }, {
        key: "deleteTour",
        value: function deleteTour() {
            var _this4 = this;

            (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_tour"), function () {
                (0, _api.Api)("tour.delete", { tour_id: _this4.props.tour.id }).onSuccess(function () {
                    return swal.close();
                }).send();
            });
        }
    }, {
        key: "render",
        value: function render() {
            return this.state.editing ? this.renderEditor() : this.renderViewer();
        }
    }]);

    return TourEditingUI;
}(React.Component);

var TourCreatingUI = function (_React$Component4) {
    _inherits(TourCreatingUI, _React$Component4);

    function TourCreatingUI() {
        _classCallCheck(this, TourCreatingUI);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TourCreatingUI).apply(this, arguments));
    }

    _createClass(TourCreatingUI, [{
        key: "submitTour",
        value: function submitTour(data) {
            (0, _api.Api)("tour.create", {
                discipline_id: this.props.discipline_id,
                add_after: this.props.add_after,
                data: data
            }).onSuccess(function (response) {
                this.props.stopEditing();
            }.bind(this)).send();
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(TourInputForm, {
                classes: ["tour-create"],
                submitTour: this.submitTour.bind(this),
                stopEditing: this.props.stopEditing,
                rules_set: this.props.rules_set
            });
        }
    }]);

    return TourCreatingUI;
}(React.Component);

},{"common/definitions":22,"common/tools":24,"l10n/loader":25,"server/api":28,"ui/dialogs":33}],20:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AutoPrinterStatus = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _components = require("ui/components");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AutoPrinterStatus = exports.AutoPrinterStatus = function (_React$Component) {
    _inherits(AutoPrinterStatus, _React$Component);

    function AutoPrinterStatus(props) {
        _classCallCheck(this, AutoPrinterStatus);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(AutoPrinterStatus).call(this, props));

        _this.state = {
            available: null
        };
        return _this;
    }

    _createClass(AutoPrinterStatus, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this2 = this;

            var xhr = new XMLHttpRequest();
            xhr.open("GET", "http://127.0.0.1:5949", true);
            xhr.onload = function () {
                return _this2.setState({ available: true });
            }; //eslint-disable-line react/no-did-mount-set-state
            xhr.onerror = function () {
                return _this2.setState({ available: false });
            }; //eslint-disable-line react/no-did-mount-set-state
            xhr.send();
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            if (this.state.available === null) {
                return React.createElement(_components.Loader, null);
            }
            if (!this.state.available) {
                return React.createElement(
                    "div",
                    { className: "alert alert-danger" },
                    React.createElement(
                        "p",
                        null,
                        (0, _loader._)("admin.alerts.auto_printer_not_available")
                    )
                );
            }
            return React.createElement(
                "div",
                { className: "alert alert-success" },
                React.createElement(
                    "p",
                    null,
                    (0, _loader._)("admin.alerts.auto_printer_available")
                ),
                React.createElement("br", null),
                React.createElement(
                    "button",
                    { className: "btn btn-default",
                        type: "button",
                        onClick: function onClick() {
                            return window.printer_window ? window.printer_window.focus() : window.printer_window = window.open("/printer/" + _this3.props.competition_id, "printer", "resizable=yes,location=no");
                        } },
                    (0, _loader._)("admin.buttons.launch_auto_printer")
                )
            );
        }
    }]);

    return AutoPrinterStatus;
}(React.Component);

},{"l10n/loader":25,"ui/components":32}],21:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Service = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _api = require("server/api");

var _dialogs = require("ui/dialogs");

var _auto_printer_status = require("./auto_printer_status");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Service = exports.Service = function (_React$Component) {
    _inherits(Service, _React$Component);

    function Service(props) {
        _classCallCheck(this, Service);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Service).call(this, props));
    }

    _createClass(Service, [{
        key: "reloadClients",
        value: function reloadClients() {
            (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.reload_clients"), function () {
                (0, _api.Api)("service.reload_clients", {}).onSuccess(function () {
                    return swal.close();
                }).send();
            });
        }
    }, {
        key: "refreshClients",
        value: function refreshClients() {
            (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.refresh_clients"), function () {
                (0, _api.Api)("service.refresh_clients", {}).onSuccess(function () {
                    return swal.close();
                }).send();
            });
        }
    }, {
        key: "unfinalizeTour",
        value: function unfinalizeTour(event) {
            var _this2 = this;

            event.preventDefault();
            var passcode = swal({
                title: (0, _loader._)("admin.headers.unfinalize_tour"),
                text: (0, _loader._)("admin.confirms.unfinalize_tour"),
                showCancelButton: true,
                closeOnConfirm: false,
                type: "input",
                animation: false
            }, function (value) {
                if (value !== "unfinalize") {
                    swal.showInputError((0, _loader._)("admin.messages.invalid_passcode"));
                    return false;
                }
                (0, _api.Api)("tour.unfinalize", {
                    tour_id: _this2._select_unfinalize.value
                }).onSuccess(function (event) {
                    swal({
                        title: (0, _loader._)("global.messages.success"),
                        animation: false,
                        type: "success"
                    });
                }).send();
            });
        }
    }, {
        key: "renderUnfinalize",
        value: function renderUnfinalize() {
            var _this3 = this;

            var eligible_tours = [];
            this.props.disciplines.forEach(function (ic) {
                for (var idx = ic.tours.length - 1; idx >= 0; --idx) {
                    var tour = ic.tours[idx];
                    if (tour.finalized) {
                        eligible_tours.push(React.createElement(
                            "option",
                            { value: tour.id, key: tour.id },
                            ic.name,
                            " — ",
                            tour.name
                        ));
                        break;
                    }
                }
            });
            if (eligible_tours.length === 0) {
                return React.createElement(
                    "div",
                    { className: "alert alert-danger" },
                    (0, _loader._)("admin.alerts.no_finalized")
                );
            }
            return React.createElement(
                "div",
                null,
                React.createElement(
                    "div",
                    { className: "alert alert-danger" },
                    (0, _loader._)("admin.alerts.unfinalize_warning")
                ),
                React.createElement(
                    "form",
                    { className: "unfinalization", onSubmit: this.unfinalizeTour.bind(this) },
                    React.createElement(
                        "select",
                        { className: "form-control", ref: function ref(c) {
                                return _this3._select_unfinalize = c;
                            } },
                        eligible_tours
                    ),
                    React.createElement(
                        "button",
                        { className: "btn btn-primary", type: "submit" },
                        (0, _loader._)("admin.buttons.unfinalize")
                    )
                )
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "app" },
                React.createElement(
                    "div",
                    { className: "app-content" },
                    React.createElement(
                        "header",
                        { className: "app-header" },
                        React.createElement(
                            "h1",
                            null,
                            (0, _loader._)("admin.headers.service_menu")
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "service-menu app-body" },
                        React.createElement(
                            "h3",
                            null,
                            (0, _loader._)("admin.headers.clients_management")
                        ),
                        React.createElement(
                            "button",
                            { className: "btn btn-primary control-btn", onClick: this.reloadClients.bind(this) },
                            (0, _loader._)("admin.buttons.reload_clients")
                        ),
                        React.createElement(
                            "button",
                            { className: "btn btn-primary control-btn", onClick: this.refreshClients.bind(this) },
                            (0, _loader._)("admin.buttons.refresh_clients")
                        ),
                        React.createElement(
                            "h3",
                            null,
                            (0, _loader._)("admin.headers.unfinalize_tour")
                        ),
                        this.renderUnfinalize(),
                        React.createElement(
                            "h3",
                            null,
                            (0, _loader._)("admin.headers.auto_printer")
                        ),
                        React.createElement(_auto_printer_status.AutoPrinterStatus, { competition_id: this.props.competition_id }),
                        React.createElement(
                            "h3",
                            null,
                            (0, _loader._)("admin.headers.about")
                        ),
                        (0, _loader._)("admin.alerts.about", "v1.1 prerelease", "")
                    )
                )
            );
        }
    }]);

    return Service;
}(React.Component);

},{"./auto_printer_status":20,"l10n/loader":25,"server/api":28,"ui/dialogs":33}],22:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
var GL = exports.GL = {
    "judge_roles": ["dance_judge", "acro_judge", "head_judge", "tech_judge"],
    "scoring_systems": {
        "rosfarr": ["rosfarr.no_acro", "rosfarr.acro", "rosfarr.formation", "rosfarr.formation_acro", "rosfarr.simplified", "rosfarr.am_final_fw", "rosfarr.am_final_acro"]
    },
    "suggested_programs": ["default", "qualification", "quarterfinal", "final"]
};

},{}],23:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DocxImpl = function () {
    function DocxImpl(filename) {
        _classCallCheck(this, DocxImpl);

        this.filename = filename;
        this.header = null;
        this.title1 = null;
        this.title2 = null;
        this.title3 = null;
        this.margins = null;
        this.body = "";
        this.orientation = "portrait";
        this.styles = {
            "body": {
                "font-size": "10pt",
                "font-family": "Calibri, Tahoma, Arial, sans-serif"
            },
            "table": {
                "border-collapse": "collapse",
                "width": "100%"
            },
            "tr": {
                "page-break-inside": "avoid"
            },
            "td, th": {
                "padding": "1pt 3pt"
            },
            "h1, h2, h3, h4, h5, h6": {
                "page-break-after": "avoid",
                "margin-bottom": 0
            },
            "h1": {
                "font-size": "20pt",
                "font-weight": "bold",
                "text-align": "center",
                "margin-top": "10pt"
            },
            "h2": {
                "font-size": "16pt",
                "font-weight": "bold",
                "text-align": "center",
                "margin-top": "6pt"
            },
            "h3": {
                "font-size": "16pt",
                "font-weight": "bold",
                "text-align": "center",
                "margin-top": "4pt"
            },
            "h4 p": {
                "font-size": "14pt",
                "font-weight": "bold",
                "margin": "10pt 0 6pt"
            },
            "h5 p": {
                "font-size": "12pt",
                "font-weight": "bold",
                "margin": "6pt 0"
            },
            ".header": {
                "border-bottom": "1px solid black",
                "font-size": "10pt",
                "font-weight": "bold",
                "margin": 0,
                "padding-bottom": "2pt",
                "margin-bottom": "20pt",
                "text-align": "center"
            },
            "p": {
                "margin": 0,
                "padding": 0
            },
            "li": { "margin-top": 0, "padding-top": 0 },
            ".spacer": {
                "font-size": "14pt"
            },
            ".va-top": {
                "vertical-align": "top"
            },
            ".text-left": { "text-align": "left" },
            ".text-right": { "text-align": "right" },
            ".text-center": { "text-align": "center" },
            ".bordered-table td, .bordered-table th": {
                "border": "1pt solid black"
            }
        };
        this.addWidthCss();
    }

    _createClass(DocxImpl, [{
        key: "addWidthCss",
        value: function addWidthCss() {
            for (var i = 1; i <= 100; ++i) {
                this.addStyle(".w-" + i, "width", i + "%");
            }
        }
    }, {
        key: "addStyle",
        value: function addStyle(selector, key, value) {
            if (!this.styles[selector]) {
                this.styles[selector] = {};
            }
            this.styles[selector][key] = value;
            return this;
        }
    }, {
        key: "setHeader",
        value: function setHeader(header) {
            this.header = header;
            return this;
        }
    }, {
        key: "setTitle1",
        value: function setTitle1(title1) {
            this.title1 = title1;
            return this;
        }
    }, {
        key: "setTitle2",
        value: function setTitle2(title2) {
            this.title2 = title2;
            return this;
        }
    }, {
        key: "setTitle3",
        value: function setTitle3(title3) {
            this.title3 = title3;
            return this;
        }
    }, {
        key: "setMargins",
        value: function setMargins(margins) {
            this.margins = margins;
            return this;
        }
    }, {
        key: "setBody",
        value: function setBody(body) {
            this.body = body;
            return this;
        }
    }, {
        key: "setOrientation",
        value: function setOrientation(orientation) {
            this.orientation = orientation;
            return this;
        }
    }, {
        key: "renderStyleBlock",
        value: function renderStyleBlock(selector, data) {
            var css_pairs = Object.getOwnPropertyNames(data).map(function (key) {
                return key + ': ' + data[key] + '; ';
            });
            return selector + " { " + css_pairs.join(" ") + " }";
        }
    }, {
        key: "renderStyles",
        value: function renderStyles() {
            var _this = this;

            var css_blocks = Object.getOwnPropertyNames(this.styles).map(function (selector) {
                return _this.renderStyleBlock(selector, _this.styles[selector]);
            }.bind(this));
            return css_blocks.join("\n");
        }
    }, {
        key: "renderHTML",
        value: function renderHTML() {
            var css = this.renderStyles();
            var header = this.header ? '<p class="header">' + this.header + '</p>' : "";
            var title1 = this.title1 ? '<h1>' + this.title1 + '</h1>' : "";
            var title2 = this.title2 ? '<h2>' + this.title2 + '</h2>' : "";
            var title3 = this.title3 ? '<h3>' + this.title3 + '</h3>' : "";
            var spacer = header || title1 || title2 || title3 ? '<p class="spacer">&nbsp;</p>' : "";
            return "<!DOCTYPE html>\n" + "<html><head>" + "<meta charset=\"utf-8\">" + "<style>\n" + css + "\n</style>\n" + "</head><body>\n" + header + title1 + title2 + title3 + spacer + this.body + "</body></html>";
        }
    }, {
        key: "save",
        value: function save() {
            var html = this.renderHTML();
            var margins = this.margins || (this.orientation === "portrait" ? [10, 15, 10, 15] : [7, 10, 7, 10]);
            var converted = htmlDocx.asBlob(html, {
                orientation: this.orientation,
                margins: {
                    top: Math.floor(margins[0] * 56.659).toString(),
                    right: Math.floor(margins[1] * 56.659).toString(),
                    bottom: Math.floor(margins[2] * 56.659).toString(),
                    left: Math.floor(margins[3] * 56.659).toString()
                }
            });
            saveAs(converted, this.filename);
        }
    }]);

    return DocxImpl;
}();

var Docx = exports.Docx = function Docx(fn) {
    return new DocxImpl(fn);
};

},{}],24:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.clone = clone;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function clone(obj) {
    if ((typeof obj === "undefined" ? "undefined" : _typeof(obj)) !== "object") {
        return obj;
    }
    return JSON.parse(JSON.stringify(obj));
}

var CmpChainImpl = function () {
    function CmpChainImpl() {
        _classCallCheck(this, CmpChainImpl);

        this.result = 0;
    }

    _createClass(CmpChainImpl, [{
        key: "cmp",
        value: function cmp(a, b) {
            if (this.result === 0) {
                if (a < b) {
                    this.result = -1;
                } else if (a > b) {
                    this.result = 1;
                }
            }
            return this;
        }
    }, {
        key: "end",
        value: function end() {
            return this.result;
        }
    }]);

    return CmpChainImpl;
}();

var CmpChain = exports.CmpChain = function CmpChain() {
    return new CmpChainImpl();
};

},{}],25:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tour_names = exports._ = undefined;

var _ru = require("./ru");

var _ = exports._ = _ru.translate;
var tour_names = exports.tour_names = (0, _ru.getPossibleTourNames)();

},{"./ru":26}],26:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.translate = translate;
function translate(src, arg) {
    function chooseEnding(n, e1, e2, e5) {
        var x = n % 100;
        if (Math.floor(x / 10) === 1) {
            return e5;
        }
        if (x % 10 === 1) {
            return e1;
        }
        if (x % 10 >= 5 || x % 10 === 0) {
            return e5;
        }
        return e2;
    }

    var PHRASES = {
        "admin": {
            "alerts": {
                "about": function about(version, date) {
                    return React.createElement(
                        "div",
                        { className: "about" },
                        React.createElement(
                            "p",
                            null,
                            React.createElement(
                                "b",
                                null,
                                "RockJudge ",
                                version
                            ),
                            " (закрытая версия для ограниченного использования) — система для подсчета результатов соревнований по акробатическому рок-н-роллу."
                        ),
                        React.createElement(
                            "p",
                            null,
                            "Авторские права на систему RockJudge полностью принадлежат разработчику Артему Казакову. Соавтор системы Антон Амелин."
                        ),
                        React.createElement(
                            "p",
                            null,
                            "Система распространяется по лицензии Linum d.o.o (info@linum.hr). Для использования системы судейства RockJudge необходимо и достаточно иметь право использования системы Linum LPS."
                        ),
                        React.createElement(
                            "p",
                            null,
                            "Официальный сайт: ",
                            React.createElement(
                                "a",
                                { href: "https://rockjudge.com/", target: "_blank" },
                                "https://rockjudge.com/"
                            )
                        )
                    );
                },
                "add_programs_after_creation": "Программы можно будет добавить только после сохранения участника",
                "auto_printer_available": "Автоматическая печать корректно настроена и может быть использована.",
                "auto_printer_not_available": "Автоматическая печать недоступна на этом компьтере.",
                "no_finalized": "Отсутствуют финализированные туры",
                "unfinalize_warning": React.createElement(
                    "div",
                    null,
                    React.createElement(
                        "p",
                        null,
                        React.createElement(
                            "strong",
                            null,
                            "Финализация должна отменяться только в исключительных случаях!"
                        )
                    ),
                    React.createElement(
                        "p",
                        null,
                        "Если же это действительно необходимо, обратите внимание, что после повторной финализации список участников следующего тура будет автоматически пересоздан. Результаты участников, прошедших в следующий тур после первой финализации и не прошедших после повторной будут безвозвратно утеряны!"
                    ),
                    React.createElement(
                        "p",
                        null,
                        "И не забудьте заново напечатать все тблицы."
                    )
                )
            },
            "auto_printer": {
                "discipline": "Дисциплина",
                "discipline_results": "Результаты дисциплины",
                "heats": "Заходы сл. тура",
                "print_test_page": "Напечатать тестовую страницу",
                "queue": "Очередь печати",
                "queue_empty": "Очередь пуста",
                "results_1": "Краткая таблица",
                "results_2": "Средняя таблица",
                "results_3": "Подробная таблица",
                "rules": "Задания",
                "test": "",
                "test_page": "Тестовая страница",
                "test_text": "Это тестовая страница RockJudge"
            },
            "buttons": {
                "add_club": "Добавить клуб",
                "add_competition": "Создать соревнование",
                "add_competition_plan_item": "Добавить элемент",
                "add_discipline": "Добавить дисциплину",
                "add_judge": "Добавить судью",
                "add_participant": "Добавить участника",
                "add_tour": "Добавить тур",
                "confirm_score": "Зафиксировать",
                "docx_heats": "Заходы в DOCX",
                "docx_numbers": "Номера в DOCX",
                "docx_results": "Результаты в DOCX",
                "export": "Экспортировать",
                "import": "Импортировать",
                "launch_auto_printer": "Запуск автоматической печати",
                "load_acro": "Загрузить акробатику",
                "refresh_clients": "Перезагрузить все устройства",
                "reload_clients": "Обновить данные на всех устройствах",
                "switch_to_plan": "Сортировка по программе",
                "switch_to_disciplines": "Сортировка по дисциплинам",
                "to_start_page": "На главную",
                "unconfirm_score": "Отмена фиксации",
                "unfinalize": "Отменить финализацию"
            },
            "confirms": {
                "delete_club": "Вы действительно хотите удалить этот клуб?",
                "delete_competition": "Вы действительно хотите удалить это соревнование?",
                "delete_discipline": "Вы действительно хотите удалить эту дисциплину?",
                "delete_judge": "Вы действительно хотите удалить этого судью?",
                "delete_participant": "Вы действительно хотите удалить этого участника?",
                "delete_program": "Вы действительно хотите удалить эту программу?",
                "delete_tour": "Вы действительно хотите удалить этот тур?",
                "refresh_clients": "Вы действительно хотите перезагрузить страницу на всех клиентах?",
                "reload_clients": "Вы действительно хотите обновить данные на всех клиентах?",
                "unfinalize_tour": "Вы действительно хотите отменить финализацию тура? Введите «unfinalize», чтобы продолжить"
            },
            "headers": {
                "about": "О программе",
                "auto_printer": "Автоматическая печать",
                "clients_management": "Управление подключенными устройствами",
                "clubs": "Клубы-участники",
                "clubs_management": "Управление клубами",
                "clubs_shown": "Информация только по следующим клубам:",
                "clubs_summary": "Сводка по клубам",
                "competition_info": "Информация о турнире",
                "competition_plan": "Программа соревнований",
                "competition_plan_management": "Программа соревнований",
                "competition_report": "Протокол соревнований",
                "competition_results": "Результаты соревнований",
                "competitions_management": "Управление соревнованиями",
                "discipline_judges": "Распределение судей по дисциплинам",
                "discipline_results": "Результаты дисциплины",
                "disciplines_management": "Управление дисциплинами",
                "disciplines_shown": "Информация только по следующим дисциплинам:",
                "disciplines_summary": "Сводка по дисциплинам",
                "export_competition": "Экспорт данных турнира и результатов",
                "import_competition": "Импорт данных турнира",
                "import_export": "Импорт / экспорт",
                "judges": "Судейская бригада",
                "judges_management": "Управление судьями",
                "load_acrobatics": "Загрузка акробатики",
                "participants_management": "Управление участниками",
                "service_menu": "Сервисное меню",
                "sportsmen_list": "Список спортсменов",
                "start_list": "Стартовый лист",
                "tour_heats": "Заходы участников",
                "tour_results": "Результаты тура",
                "unfinalize_tour": "Отмена финализации тура",
                "unpicked_tours": "Не включены в программу"
            },
            "labels": {
                "clubs": "Клубы",
                "competition_date": "Дата проведения",
                "competition_name": "Наименование соревнования",
                "discipline": "Дисциплина",
                "discipline_judges": "Распределение судей по дисциплинам",
                "disciplines": "Дисциплины",
                "group_by_clubs": "Группировать по клубам",
                "include_acrobatics": "Включить акробатику",
                "include_clubs": "Включить данные о клубах",
                "include_discipline_judges": "Включить распределение судей по дисциплинам",
                "include_extended_info": "Включить расширенную информацию",
                "include_formation_sportsmen": "Включить состав формейшнов",
                "include_judges": "Включить данные о судьях",
                "judges": "Судьи",
                "no_files_selected": "Выберите файл...",
                "participants": "Участники",
                "paste_acro": "Вставьте данные из калькулятора акробатики",
                "plan": "Программа турнира",
                "show_sportsmen_only": "Показывать только спортсменов",
                "show_summary": "Показывать только количество",
                "sub": "зап", // substitute
                "tours": "Туры"
            },
            "messages": {
                "invalid_passcode": "Введён неверный код потверждения"
            },
            "menu": {
                "competition_report": "Протокол соревнований",
                "discipline_results": "Результаты дисциплины",
                "import_export": "Импорт / экспорт",
                "manage_clubs": "Управление клубами",
                "manage_competition_plan": "Программа соревнований",
                "manage_disciplines": "Управление дисциплинами",
                "manage_judges": "Управление судьями",
                "manage_sportsmen": "Управление спортсменами",
                "manage_tours": "Управление турами",
                "start_list": "Стартовый лист"
            },
            "phrases": {
                "n_participants": function n_participants(n) {
                    return n.toString() + " участник" + chooseEnding(n, "", "а", "ов");
                },
                "n_sportsmen": function n_sportsmen(n, s) {
                    return n.toString() + " спортсмен" + chooseEnding(n, "", "а", "ов") + (s > 0 ? " (+" + s + " запасн" + chooseEnding(s, "ой", "ых", "ых") + ")" : "");
                },
                "n_sportsmen_short": function n_sportsmen_short(n, s) {
                    return n.toString() + " спортсмен" + chooseEnding(n, "", "а", "ов") + (s > 0 ? " (+" + s + " зап.)" : "");
                },
                "total_n_participants": function total_n_participants(n) {
                    return "Итого " + n + " участник" + chooseEnding(n, "", "а", "ов");
                }
            },
            "judging-tabs": {
                "tour-admin": "Управление",
                "heats": "Заходы",
                "results-1": "Краткая таблица",
                "results-2": "Средняя таблица",
                "results-3": "Подробная таблица",
                "discipline-results": "Результаты дисциплины"
            }
        },
        "errors": {
            "admin": {
                "load_syntax_error": "Некорректный формат данных"
            },
            "api": {
                "duplicated_external_id": "В данных имеются записи с повторяющимимся external_id",
                "unable_to_get": function unable_to_get(wanted) {
                    return "Невозможно получить " + wanted + " из запроса";
                }
            },
            "club": {
                "delete_with_participants": "Невозможно удалить клуб, к которому привязаны участники"
            },
            "competition": {
                "delete_non_empty": "Невозможно удалить соревнование, содержащее дисциплины, клубы или судей"
            },
            "competition_plan": {
                "too_many_tours": function too_many_tours(d) {
                    return ["Ошибка в программе соревнований", "В дисциплине " + d + " содержится больше туров, чем создано в системе"];
                },
                "invalid_discipline_found": "Программа соревнований содержит туры, отсутствующие в системе"
            },
            "discipline": {
                "change_judges_with_finalized_tour": "Невозможно изменить состав судей для дисциплины, содержащей финализированные туры",
                "delete_with_participants": "Невозможно удалить дисциплину, содержащую участников",
                "delete_with_tours": "Невозможно удалить дисциплину, содержащую туры"
            },
            "discipline_judge": {
                "delete_with_finalized": "Невозможно удалить судью, у корого есть финализированне туры",
                "delete_with_scores": "Невозможно удалить судью принявшего участие в судействе хотя бы одного тура",
                "repeating_judge": function repeating_judge(name) {
                    return name + " встречается в списке судей более одного раза";
                }
            },
            "global": {
                "internal_server_error": ["Ошибка на сервере", "проверьте логи для информации"]
            },
            "judge": {
                "delete_with_disciplines": "Невозможно удалить судью, входящего в судейскую бригаду хотя бы одной дисциплины"
            },
            "participant": {
                "delete_with_finalized_tours": "Невозможно удалить участника, принявшего участие хотя бы в одном финализированном туре"
            },
            "run": {
                "set_performed_flag_on_finalized": "Невозможно изменить статус захода финализинованного тура"
            },
            "score": {
                "score_not_exist": "Попытка получить значение несуществующей оценки судьи",
                "update_on_finalized_tour": "Невозможно изменить оценку в финализированном туре"
            },
            "tour": {
                "add_before_finalized": "Невозможно добавить новый тур перед финализированным",
                "delete_finalized": "Невозможно удалить финализированный тур",
                "delete_in_competition_plan": "Невозможно удалить тур, присутствующий в программе соревнований",
                "init_finailzed": "Невозможно пересоздать финализированный тур",
                "invalid_add_after_id": "Попытка добаить тур в несуществующее место",
                "invalid_scoring_system": "Выбрана недопустимая система судейства",
                "load_to_non_empty": function load_to_non_empty(d) {
                    return ["Невозможно загрузить туры для дисциплины", "Дисциплина " + d + " уже содержит туры"];
                },
                "next_is_finailzed": "Следующий тур не должен быть финализирован",
                "no_next_tour": "Данный тур последний в программе соревнований",
                "not_in_competition_plan": "Данный тур не содержится в программе соревнований",
                "prev_not_finailzed": "Предыдущий тур должен быть финализирован",
                "start_finalized": "Невозможно запустить финализированный тур",
                "update_finalized": "Для финализированного тура не допускается изменение квоты вывода, типа тура или системы судейства"
            }
        },
        "global": {
            "buttons": {
                "add": "Добавить",
                "close": "Закрыть",
                "deselect_all": "Снять все",
                "edit": "Редактировать",
                "delete": "Удалить",
                "discard": "Отменить",
                "load": "Загрузить",
                "save": "Сохранить",
                "select_all": "Выбрать все",
                "submit": "Сохранить"
            },
            "labels": {
                "browse": "Обзор...",
                "connecting": "Подключение к сети",
                "connection_problem": "Проблемы с сетью",
                "yes": "Да",
                "no": "Нет"
            },
            "messages": {
                "connection_error": "Похоже, имеются проблемы с сетью",
                "error_header": "Ошибка",
                "success": "Операция успешно завершена"
            },
            "phrases": {
                "heat_n": function heat_n(n) {
                    return "Заход №" + n.toString();
                },
                "judge_n": function judge_n(n) {
                    return "Линейный судья №" + n.toString();
                },
                "participant_n": function participant_n(n, name, n_sp) {
                    return n_sp > 2 ? "Формейшн №" + n.toString() + (name ? ": " + name : "") : (n_sp === 2 ? "Пара №" : "Участник №") + n.toString();
                }
            }
        },
        "judging": {
            "buttons": {
                "confirm_score": "Зафиксировать",
                "init_tour": "Пересоздать тур",
                "finalize_tour": "Финализировать",
                "reset_acrobatic_override": "Сброс",
                "shuffle_heats": "Перемешать заходы",
                "start_tour": "Начать тур",
                "stop_tour": "Остановить тур"
            },
            "confirms": {
                "finalize_tour": "Вы действительно хотите финализировать этот тур?",
                "init_tour": "Вы действительно хотите пересоздать этот тур?",
                "load_program": "Вы действительно хотите перезагрузить программу для этого участника?",
                "shuffle_heats": "Вы действительно хотите перемешать заходы?",
                "stop_tour": "Вы действительно хотите остановить этот тур?"
            },
            "headers": {
                "acrobatic_overrides": "Корректировки базовых оценок акробатики"
            },
            "labels": {
                "acro_description": "Описание трюка",
                "acro_idx": "№ трюка",
                "acrobatics": "Акробатика",
                "club": "Клуб",
                "confirmed": "Зафиксировано",
                "heat": "Заход",
                "new_score": "Корр.",
                "number": "№",
                "old_score": "База",
                "participant_name": "Участник",
                "performed": "В",
                "total_score": "Сумма баллов"
            }
        },
        "models": {
            "club": {
                "name": "Название клуба",
                "city": "Город",
                "external_id": "Внешний ID"
            },
            "competition": {
                "active": "Активно",
                "date": "Дата",
                "info": "Дополнительная информация для протокола",
                "info_item_title": "Заголовок",
                "info_item_value": "Значение",
                "name": "Название",
                "rules_set": "Система судейства"
            },
            "competition_plan_item": {
                "discipline": "Дисциплина",
                "estimated_beginning": "Начало",
                "estimated_duration": "Длительность",
                "name": "Название",
                "sp": "Приоритет",
                "tour": "Тур",
                "verbose_name": "Название"
            },
            "discipline": {
                "discipline_judges": "Судьи",
                "external_id": "Внешний ID",
                "name": "Название дисциплины",
                "sp": "Приоритет"
            },
            "discipline_judge": {
                "roles": {
                    "acro_judge": "А",
                    "dance_judge": "T",
                    "head_judge": "Гл",
                    "tech_judge": "Тех"
                },
                "roles_legend": React.createElement(
                    "table",
                    { className: "w-100" },
                    React.createElement(
                        "tbody",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "td",
                                { className: "w-25" },
                                "Гл — главный судья"
                            ),
                            React.createElement(
                                "td",
                                { className: "w-25" },
                                "Т — судья танца"
                            ),
                            React.createElement(
                                "td",
                                { className: "w-25" },
                                "А — судья акробатики"
                            ),
                            React.createElement(
                                "td",
                                { className: "w-25" },
                                "Тex — технический судья"
                            )
                        )
                    )
                )
            },
            "judge": {
                "category": "Категория",
                "external_id": "Вн. ID",
                "name": "Ф. И. О.",
                "number": "Номер",
                "role": "Роль в судействе",
                "role_description": "Должность",
                "sp": "Приоритет"
            },
            "participant": {
                "acro_description": "Описание трюка",
                "acro_descriptions": "Описание трюков",
                "acro_score": "Оценка",
                "acrobatics": "Акробатика",
                "club_name": "Клуб",
                "club_city": "Город",
                "coaches": "Тренеры",
                "discipline_name": "Дисциплина",
                "first_name": "Имя",
                "gender": "Пол",
                "gender_f": "Ж",
                "gender_m": "М",
                "general_info": "Основная информация",
                "formation_name": "Название команды формейшн",
                "last_name": "Фамилия",
                "name": "Участник",
                "number": "Номер",
                "programs": "Программы",
                "sportsman": "Спортсмен",
                "sportsmen": "Спортсмены",
                "sportsmen_year_of_birth": "Г.р.",
                "substitute_n": "Осн.",
                "substitute_y": "Зап.",
                "year_of_birth": "Год рождения",
                "yob": "Г.р."
            },
            "program": {
                "default_for": "По умолчанию",
                "name": "Название программы"
            },
            "tour": {
                "default_program": "Акробатика по умолчанию",
                "is_hope_tour": "Тур «Надежды»",
                "name": "Название тура",
                "num_advances": "Квота вывода",
                "participants_per_heat": "Участников в заходе",
                "scoring_system_name": "Система судейства"
            }
        },
        "screen_operator": {
            "buttons": {
                "reset_heat": "Сброс номера захода",
                "reset_place": "Сброс места"
            },
            "headers": {
                "discipline": "Дисциплина",
                "heat": "Заход",
                "places": "Места для вывода",
                "tour": "Тур"
            },
            "labels": {
                "place": "место",
                "heat": "заход"
            }
        },
        "presenter": {
            "headers": {
                "clubs": "Клубы-участники",
                "heats": "Заходы",
                "info": "Информация",
                "judges": "Судьи",
                "plan": "Программа",
                "results": "Результаты"
            },
            "labels": {
                "discipline": "Дисциплина",
                "estimated_beginning": "Начало",
                "estimated_duration": "Длит.",
                "no_active_tour": "Нет активного тура",
                "place": "место",
                "tour": "Тур"
            }
        },
        "results": {
            "alerts": {
                "not_finalized": "Данные результаты не являются окончательными."
            },
            "buttons": {
                "print": "Печать",
                "simple_view": "Упрощенная таблица",
                "verbose_view": "Подробная таблица"
            }
        },
        "start_page": {
            "headers": {
                "select_competition": "Выберите соревнование для продолжения",
                "select_role": "Выберите свою роль"
            },
            "messages": {
                "no_competitions": "Нет активных соревнований",
                "competitions_management_link": function competitions_management_link(link) {
                    return React.createElement(
                        "span",
                        null,
                        "Управление соревнованиями находится по адресу ",
                        React.createElement(
                            "a",
                            { href: link },
                            link
                        )
                    );
                }
            },
            "roles": {
                "administrator": "Администратор",
                "presenter": "Ведущий",
                "screen": "Экран",
                "screen_operator": "Оператор экрана"
            }
        },
        "tablet": {
            "alerts": {
                "has_unconfirmed_scores": "Имеются незафиксированные оценки судей в последнем заходе."
            },
            "buttons": {
                "finalize_tour": "Финализировать тур",
                "finalize_tour_and_start_next": "Финализировать тур и перейти к следующему",
                "next_heat": "След. заход",
                "not_performed": "Невыход на площадку",
                "performed": "Отмена невыхода на площадку",
                "prev_heat": "Пред. заход",
                "reset_stopwatch": "Сброс",
                "start_stopwatch": "Старт",
                "stop_stopwatch": "Стоп",
                "stop_tour": "Завершить тур",
                "stop_tour_and_start_next": "Завершить тур и перейти к следующему туру",
                "to_start_page": "На главную"
            },
            "confirms": {
                "finalize_tour": "Вы действительно хотите финализировать этот тур?",
                "finalize_tour_and_start_next": "Вы действительно хотите финализировать этот тур и перейти к следующему туру?",
                "stop_tour": "Вы действительно хотите остановить этот тур?",
                "stop_tour_and_start_next": "Вы действительно хотите перейти к следующему туру?"
            },
            "headers": {
                "acro_n": function acro_n(n) {
                    return "Акробатика №" + (n + 1);
                },
                "heat": "Заход",
                "presenter": "Ведущий",
                "select_page": "Страница"
            },
            "messages": {
                "not_judging_discipline": "Вы не участвуете в судействе данной дисциплины",
                "not_judging_participant": "Вы не оцениваете этого участника",
                "not_judging_tour": "Вы не оцениваете этот тур",
                "not_performing": "Не выступает"
            },
            "pages": {
                "acrobatics": "Акробатика",
                "actions": "Действия",
                "dance": "Танец",
                "heats": "Заходы",
                "results": "Результаты"
            }
        },

        "scoring_systems": {
            "rosfarr": {
                "tablet": {
                    "acro_judge": {
                        "fall_down": "Падения (-30)"
                    },
                    "dance_judge": {
                        "acrobatics": "Акробатика",
                        "big_mistakes": "Большие ошибки (-30)",
                        "composition": "Композиция",
                        "dance_figs": "Танцевальные фигуры",
                        "dance_tech": "Техника танцевания",
                        "form_fall_down": "Падения (-3)",
                        "form_mistakes": "Ошибки (-2)",
                        "form_small_mistakes": "Маленькие ошибки (-2)",
                        "form_big_mistakes": "Большие ошибки (-3)",
                        "fw_man": "Основной ход, партнёр (сбавка в %)",
                        "fw_woman": "Основной ход, партнёрша (сбавка в %)",
                        "impression": "Общее впечатление",
                        "points": "Оценка",
                        "small_mistakes": "Маленькие ошибки (-5)"
                    },
                    "global": {
                        "total_score": "Сумма баллов"
                    },
                    "head_judge": {
                        "acrobatic_overrides": "Корректировки акробатики",
                        "black_card": "-100",
                        "dance_judge_scores": "Оценки линейных судей",
                        "ok": "OK",
                        "penalty_type": "Штрафные санкции",
                        "previous_penalties": "Предыдущие штрафы",
                        "red_card": "-30",
                        "yellow_card": "-3",
                        "form_yellow_card": "-5",
                        "form_red_card": "-15"
                    },
                    "tech_judge": {
                        "jump_steps": "Основные ходы",
                        "reset_to_n": function reset_to_n(n) {
                            return "Сброс на " + n.toString();
                        },
                        "timing": "Длительность"
                    }
                },
                "results": {
                    "breakdown": {
                        "a": "A",
                        "acro_n": function acro_n(n) {
                            return "A" + n.toString();
                        },
                        "bm": "БО",
                        "c": "К",
                        "df": "ТФ",
                        "dt": "ТT",
                        "fd": "П",
                        "fm": "ОХм",
                        "fw": "ОХж",
                        "i": "ОВ",
                        "m": "Ош",
                        "p": "М",
                        "sm": "МО",
                        "t": "Σ"
                    },
                    "headers": {
                        "participants_advanced": "Прошли в следующий тур",
                        "participants_not_advanced": "Не прошли в следующий тур",
                        "participants_not_performed": "Не выступали"
                    },
                    "labels": {
                        "acro_score": "Результат акро",
                        "acrobatics": "Акробатика",
                        "acrobatics_verbose": "Акробатика (заявка/факт)",
                        "card": "Штраф",
                        "fw_score": "Результат ТН",
                        "fw_score_short": "ТН",
                        "info": "Участник, результат",
                        "next_tour": "Следующий тур",
                        "not_performed": "Не принимал участие",
                        "number": "№",
                        "participant_club": "Клуб",
                        "participant_coaches": "Тренеры",
                        "participant_name": "Участник",
                        "penalty": "Штраф главного судьи",
                        "place": "Место",
                        "sportsmen": "Спортсмены",
                        "sportsmen_year_of_birth": "Г.р.",
                        "total_score": "Итог"
                    }
                }
            }
        },

        "scoring_systems_names": {
            "rosfarr": {
                "base_name": "РосФАРР",
                "acro": "РосФАРР, акробатические программы",
                "am_final_acro": "РосФАРР, A и M классы, финал, акробатика",
                "am_final_fw": "РосФАРР, A и M классы, финал, техника ног",
                "formation": "РосФАРР, формейшн без акробатики",
                "formation_acro": "РосФАРР, формейшн с акробатикой",
                "no_acro": "РосФАРР, танцевальные программы",
                "simplified": "РосФАРР, упрощенная система (1–40)"
            }
        },
        "judge_roles": {
            "": "-",
            "acro_judge": "Судья акробатики",
            "dance_judge": "Судья танца",
            "head_judge": "Главный судья",
            "tech_judge": "Технический судья"
        }
    };
    var path = src.split(".");
    var phrase_ptr = PHRASES;
    path.forEach(function (chunk) {
        return phrase_ptr = phrase_ptr[chunk];
    });
    if (typeof phrase_ptr === "undefined") {
        console.error("Unable to find translation for " + src);
        return;
    }
    if (typeof phrase_ptr === "function") {
        var args = [];
        for (var idx = 1; idx < arguments.length; ++idx) {
            args.push(arguments[idx]);
        }
        return phrase_ptr.apply(undefined, args);
    }
    return phrase_ptr;
}

var getPossibleTourNames = exports.getPossibleTourNames = function getPossibleTourNames() {
    return ["Финал", "Тур «Надежды»", "Отборочный тур", "1/2 финала", "1/4 финала", "1/8 финала", "1/16 финала", "Финал, техника ног", "Финал, акробатика"];
};

},{}],27:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RulesSetLoader = function () {
    function RulesSetLoader() {
        _classCallCheck(this, RulesSetLoader);

        this._loaded = false;
    }

    _createClass(RulesSetLoader, [{
        key: "load",
        value: function load(module_name, data) {
            var KEYS = ["tour_results_table_1", "tour_results_table_2", "tour_results_table_2", "judge_tablet", "admin_score_input"];
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = KEYS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var key = _step.value;

                    if (!(key in data)) {
                        throw new Error("Module " + module_name + " doesn't export " + key + " class.");
                    }
                    this["_" + key] = data[key];
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            this._loaded = true;
            console.log("Added scoring system: " + module_name);
        }
    }, {
        key: "_checkIfLoaded",
        value: function _checkIfLoaded() {
            if (!this._loaded) {
                throw new Error("No scoring system was loaded");
            }
        }
    }, {
        key: "tour_results_table_1",
        get: function get() {
            this._checkIfLoaded();
            return this._tour_results_table_1;
        }
    }, {
        key: "tour_results_table_2",
        get: function get() {
            this._checkIfLoaded();
            return this._tour_results_table_2;
        }
    }, {
        key: "tour_results_table_3",
        get: function get() {
            this._checkIfLoaded();
            return this._tour_results_table_3;
        }
    }, {
        key: "judge_tablet",
        get: function get() {
            this._checkIfLoaded();
            return this._judge_tablet;
        }
    }, {
        key: "admin_score_input",
        get: function get() {
            this._checkIfLoaded();
            return this._admin_score_input;
        }
    }]);

    return RulesSetLoader;
}();

var loader = new RulesSetLoader();

window.registerRulesSet = function () {
    loader.load.apply(loader, arguments);
};

exports.default = loader;

},{}],28:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Api = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _storage = require("server/storage");

var _dialogs = require("ui/dialogs");

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ApiImpl = function () {
    function ApiImpl(method, data) {
        _classCallCheck(this, ApiImpl);

        this.method = method;
        this.data = data;
        this.cb_success = function () {};
        this.cb_error = function (msg, code, args) {
            return (0, _dialogs.showError)(code ? _loader._.apply(undefined, [code].concat(_toConsumableArray(args))) : msg);
        };
        this.cb_fail = function () {
            var _console;

            for (var _len = arguments.length, data = Array(_len), _key = 0; _key < _len; _key++) {
                data[_key] = arguments[_key];
            }

            return (_console = console).error.apply(_console, ["API fail"].concat(data));
        };
        this.cb_done = function () {};
        this.update_db = function () {};
    }

    _createClass(ApiImpl, [{
        key: "onDone",
        value: function onDone(callback) {
            this.cb_done = callback;
            return this;
        }
    }, {
        key: "onSuccess",
        value: function onSuccess(callback) {
            this.cb_success = callback;
            return this;
        }
    }, {
        key: "onError",
        value: function onError(callback) {
            this.cb_error = callback;
            return this;
        }
    }, {
        key: "onFail",
        value: function onFail(callback) {
            this.cb_fail = callback;
            return this;
        }
    }, {
        key: "addToDB",
        value: function addToDB(model_type, model_id) {
            var st = arguments.length <= 2 || arguments[2] === undefined ? _storage.storage : arguments[2];

            this.update_db = function (response) {
                st.get(model_type).add(model_id, response);
            };
            return this;
        }
    }, {
        key: "send",
        value: function send() {
            var _this = this;

            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/api", true);
            xhr.onload = function () {
                _this.cb_done();
                if (xhr.status !== 200) {
                    _this.cb_fail();
                    return;
                }
                var response = JSON.parse(xhr.responseText);
                if (response === null) {
                    _this.cb_fail();
                } else if (response.success) {
                    _this.update_db(response.response);
                    _this.cb_success(response.response);
                } else {
                    _this.cb_error(response.message, response.code, response.args);
                }
            };
            xhr.onerror = function () {
                _this.cb_done();
                _this.cb_fail();
            };
            var data = new FormData();
            data.append("client_id", window.client_id);
            data.append("data", JSON.stringify(this.data));
            data.append("method", this.method);
            xhr.send(data);
        }
    }]);

    return ApiImpl;
}();

var Api = exports.Api = function Api() {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
    }

    return new (Function.prototype.bind.apply(ApiImpl, [null].concat(args)))();
};
exports.default = Api;

},{"l10n/loader":25,"server/storage":30,"ui/dialogs":33}],29:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.message_dispatcher = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _storage = require("server/storage");

var _components = require("ui/components");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var MessageDispatcher = function () {
    function MessageDispatcher() {
        _classCallCheck(this, MessageDispatcher);

        this.closed = false;
        this.listeners = {};
        this.listeners_cnt = 0;
        this.connect();
    }

    _createClass(MessageDispatcher, [{
        key: "connect",
        value: function connect() {
            console.log("Connecting to websocket...");
            this.ws = new SockJS("http://" + window.location.host + "/ws");
            this.ws.onopen = function () {
                _components.connection_status.setOk();
                console.log("Connected.");
                if (this.closed) {
                    this.onMessage({
                        data: JSON.stringify({
                            messages: [["reload_data", null]],
                            model_updates: []
                        })
                    });
                }
            }.bind(this);
            this.ws.onclose = function () {
                _components.connection_status.setFail();
                console.log("Connection closed.");
                this.closed = true;
                setTimeout(this.connect.bind(this), 500);
            }.bind(this);
            this.ws.onmessage = this.onMessage.bind(this);
        }
    }, {
        key: "onMessage",
        value: function onMessage(message) {
            var _this = this;

            var data = JSON.parse(message.data);
            if (data["client_id"]) {
                window.client_id = data["client_id"];
                return;
            }
            data.messages.forEach(function (data) {
                var msg_type = data[0];
                var msg_data = data[1];
                var listeners = this.listeners[msg_type] || {};
                if (msg_type === "force_refresh") {
                    window.location.reload(true);
                }
                Object.keys(this.listeners[msg_type] || {}).forEach(function (key) {
                    return listeners[key](msg_data);
                });
            }.bind(this));
            var data_changed = false;
            data.model_updates.forEach(function (model_info) {
                data_changed = _storage.storage.updateModel(model_info.model, model_info.id, model_info.data) || data_changed;
            });
            if (data_changed) {
                (function () {
                    var listeners = _this.listeners["db_update"] || {};
                    Object.keys(listeners).forEach(function (key) {
                        if (listeners[key]) {
                            listeners[key]();
                        }
                    });
                })();
            }
        }
    }, {
        key: "getListenerId",
        value: function getListenerId() {
            return this.listeners_cnt++;
        }
    }, {
        key: "addListener",
        value: function addListener(msg_types, callback) {
            var id = this.getListenerId();
            msg_types.split(" ").forEach(function (msg_type) {
                if (!this.listeners[msg_type]) {
                    this.listeners[msg_type] = {};
                }
                this.listeners[msg_type][id] = callback;
            }.bind(this));
            return id;
        }
    }, {
        key: "removeListener",
        value: function removeListener(listener_id) {
            Object.keys(this.listeners).forEach(function (key) {
                delete this.listeners[key][listener_id];
            }.bind(this));
        }
    }]);

    return MessageDispatcher;
}();

if (!window.message_dispatcher) {
    window.message_dispatcher = new MessageDispatcher();
}
var message_dispatcher = exports.message_dispatcher = window.message_dispatcher;

},{"server/storage":30,"ui/components":32}],30:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Ref = function () {
    function Ref(storage, model_name, id) {
        _classCallCheck(this, Ref);

        this.model_name = model_name;
        this.id = id;
        this.storage = storage;
    }

    _createClass(Ref, [{
        key: "get",
        value: function get() {
            return this.storage.get(this.model_name).by_id(this.id);
        }
    }]);

    return Ref;
}();

var Model = function () {
    function Model(storage, id, model_storage) {
        _classCallCheck(this, Model);

        this.id = id;
        this.__storage = storage;
        this.__key_types = {};
        this.__model_storage = model_storage;
    }

    _createClass(Model, [{
        key: "addBackRef",
        value: function addBackRef(key, ref) {
            this[key] = ref;
            this.__key_types[key] = "^";
        }
    }, {
        key: "update",
        value: function update(data) {
            var _this = this;

            var create = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

            for (var idx in data) {
                if (data.hasOwnProperty(idx)) {
                    if (idx.charAt(0) === "*" || idx.charAt(0) === "^") {
                        if (!create && typeof this[idx.slice(1)] === "undefined") {
                            continue;
                        }
                    }
                    if (idx.charAt(0) === "*") {
                        (function () {
                            var key = idx.slice(1);
                            _this[key] = [];
                            var back_ref = new Ref(_this.__storage, _this.__model_storage.model_name, _this.id);
                            var back_ref_key = data[idx].back_ref;
                            data[idx].children.forEach(function (nested_data) {
                                if (_typeof(nested_data.data) === "object") {
                                    this.__storage.get(nested_data.model).add(nested_data.id, nested_data.data);
                                }
                                var ref = new Ref(this.__storage, nested_data.model, nested_data.id);
                                ref.get().addBackRef(back_ref_key, back_ref);
                                this[key].push(ref);
                            }.bind(_this));
                            _this.__key_types[key] = "*";
                        })();
                    } else if (idx.charAt(0) === "^") {
                        var key = idx.slice(1);
                        var nested_data = data[idx];
                        if ((typeof nested_data === "undefined" ? "undefined" : _typeof(nested_data)) === "object") {
                            this.__storage.get(nested_data.model).add(nested_data.id, nested_data.data);
                        }
                        this[key] = new Ref(this.__storage, nested_data.model, nested_data.id);
                        this.__key_types[key] = "^";
                    } else {
                        this[idx] = data[idx];
                        this.__key_types[idx] = "";
                    }
                }
            }
        }
    }, {
        key: "serialize",
        value: function serialize(schema) {
            var _this2 = this;

            var result = {};

            var _loop = function _loop(key) {
                if (_this2.__key_types.hasOwnProperty(key)) {
                    switch (_this2.__key_types[key]) {
                        case "*":
                            if (key in schema) {
                                result[key] = _this2[key].map(function (ref) {
                                    return ref.get().serialize(schema[key]);
                                });
                            }
                            break;
                        case "^":
                            if (key in schema) {
                                result[key] = _this2[key].get().serialize(schema[key]);
                            }
                            break;
                        default:
                            result[key] = _this2[key];
                    }
                }
            };

            for (var key in this.__key_types) {
                _loop(key);
            }result.id = this.id;
            return result;
        }
    }]);

    return Model;
}();

var ModelsStorage = function () {
    function ModelsStorage(storage, model_name) {
        _classCallCheck(this, ModelsStorage);

        this.model_name = model_name;
        this.models = {};
        this.storage = storage;
    }

    _createClass(ModelsStorage, [{
        key: "add",
        value: function add(id, data) {
            if (typeof this.models[id] === "undefined") {
                this.models[id] = new Model(this.storage, id, this);
            }
            this.models[id].update(data);
        }
    }, {
        key: "update",
        value: function update(id, data) {
            if (this.models[id]) {
                this.models[id].update(data, false);
                return true;
            }
            return false;
        }
    }, {
        key: "by_id",
        value: function by_id(id) {
            return this.models[id];
        }
    }, {
        key: "all",
        value: function all() {
            var keys = Object.getOwnPropertyNames(this.models);
            return keys.map(function (key) {
                return this.models[key];
            }.bind(this));
        }
    }]);

    return ModelsStorage;
}();

var Storage = function () {
    function Storage() {
        _classCallCheck(this, Storage);

        this.model_storages = {};
        this.domains = {};
    }

    _createClass(Storage, [{
        key: "getDomain",
        value: function getDomain(domain) {
            if (typeof this.domains[domain] === "undefined") {
                this.domains[domain] = new Storage();
            }
            return this.domains[domain];
        }
    }, {
        key: "delDomain",
        value: function delDomain(domain) {
            delete this.domains[domain];
        }
    }, {
        key: "get",
        value: function get(model_name) {
            if (typeof this.model_storages[model_name] === "undefined") {
                this.model_storages[model_name] = new ModelsStorage(this, model_name);
            }
            return this.model_storages[model_name];
        }
    }, {
        key: "del",
        value: function del(model_name) {
            delete this.model_storages[model_name];
        }
    }, {
        key: "updateModel",
        value: function updateModel(model_type, model_id, data) {
            var _this3 = this,
                _arguments = arguments;

            var data_changed = false;
            if (this.model_storages[model_type]) {
                data_changed = this.get(model_type).add(model_id, data) || data_changed;
            }
            Object.keys(this.domains).forEach(function (key) {
                var _domains$key;

                return data_changed = (_domains$key = _this3.domains[key]).updateModel.apply(_domains$key, _arguments) || data_changed;
            });
            // return data_changed;
            return true;
        }
    }]);

    return Storage;
}();

var storage = exports.storage = new Storage();

},{}],31:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DisciplinesControls = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

var _tools = require("common/tools");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DisciplinesControls = exports.DisciplinesControls = function (_React$Component) {
    _inherits(DisciplinesControls, _React$Component);

    function DisciplinesControls() {
        var _Object$getPrototypeO;

        var _temp, _this, _ret;

        _classCallCheck(this, DisciplinesControls);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(DisciplinesControls)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.onChange = function (property_name, value) {
            var config = (0, _tools.clone)(_this.props.config);
            config[property_name] = value;
            _this.props.onChange(config);
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(DisciplinesControls, [{
        key: "renderClubs",
        value: function renderClubs() {
            if (!this.props.clubs) {
                return null;
            }
            return React.createElement(
                "div",
                null,
                React.createElement(CheckboxesSet, {
                    mkey: "clubs",
                    items: this.props.clubs,
                    values: this.props.config.clubs,
                    onChange: this.onChange }),
                React.createElement("div", { className: "spacer" })
            );
        }
    }, {
        key: "render",
        value: function render() {
            var _this2 = this;

            return React.createElement(
                "div",
                { className: "controls" },
                React.createElement(
                    "div",
                    { className: "row" },
                    React.createElement(
                        "div",
                        { className: "col-md-6" },
                        React.createElement(CheckboxesSet, {
                            mkey: "disciplines",
                            items: this.props.disciplines,
                            values: this.props.config.disciplines,
                            onChange: this.onChange })
                    ),
                    React.createElement(
                        "div",
                        { className: "col-md-6" },
                        this.renderClubs(),
                        this.props.custom_controls.map(function (info) {
                            return React.createElement(ControlsCheckbox, {
                                key: info.key,
                                mkey: info.key,
                                label: info.label,
                                value: _this2.props.config[info.key],
                                onChange: _this2.onChange });
                        })
                    )
                )
            );
        }
    }]);

    return DisciplinesControls;
}(React.Component);

var CheckboxesSet = function (_React$Component2) {
    _inherits(CheckboxesSet, _React$Component2);

    function CheckboxesSet() {
        var _Object$getPrototypeO2;

        var _temp2, _this3, _ret2;

        _classCallCheck(this, CheckboxesSet);

        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
        }

        return _ret2 = (_temp2 = (_this3 = _possibleConstructorReturn(this, (_Object$getPrototypeO2 = Object.getPrototypeOf(CheckboxesSet)).call.apply(_Object$getPrototypeO2, [this].concat(args))), _this3), _this3.onCbChange = function (id, value) {
            var new_values = (0, _tools.clone)(_this3.props.values);
            new_values[id] = value;
            _this3.props.onChange(_this3.props.mkey, new_values);
        }, _this3.onSelectAll = function (e) {
            e.preventDefault();
            _this3.setAll(true);
        }, _this3.onDeselectAll = function (e) {
            e.preventDefault();
            _this3.setAll(false);
        }, _temp2), _possibleConstructorReturn(_this3, _ret2);
    }

    _createClass(CheckboxesSet, [{
        key: "setAll",
        value: function setAll(value) {
            var new_values = (0, _tools.clone)(this.props.values);
            Object.keys(new_values).forEach(function (key) {
                new_values[key] = value;
            });
            this.props.onChange(this.props.mkey, new_values);
        }
    }, {
        key: "render",
        value: function render() {
            var _this4 = this;

            return React.createElement(
                "div",
                null,
                this.props.items.map(function (x) {
                    return React.createElement(ControlsCheckbox, {
                        key: x.id,
                        mkey: x.id,
                        label: x.name,
                        value: _this4.props.values[x.id],
                        onChange: _this4.onCbChange });
                }),
                React.createElement(
                    "a",
                    { href: "#", onClick: this.onSelectAll },
                    (0, _loader._)("global.buttons.select_all")
                ),
                "    ",
                React.createElement(
                    "a",
                    { href: "#", onClick: this.onDeselectAll },
                    (0, _loader._)("global.buttons.deselect_all")
                )
            );
        }
    }]);

    return CheckboxesSet;
}(React.Component);

var ControlsCheckbox = function (_React$Component3) {
    _inherits(ControlsCheckbox, _React$Component3);

    function ControlsCheckbox() {
        var _Object$getPrototypeO3;

        var _temp3, _this5, _ret3;

        _classCallCheck(this, ControlsCheckbox);

        for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
        }

        return _ret3 = (_temp3 = (_this5 = _possibleConstructorReturn(this, (_Object$getPrototypeO3 = Object.getPrototypeOf(ControlsCheckbox)).call.apply(_Object$getPrototypeO3, [this].concat(args))), _this5), _this5.onChange = function (e) {
            _this5.props.onChange(_this5.props.mkey, e.target.checked);
        }, _temp3), _possibleConstructorReturn(_this5, _ret3);
    }

    _createClass(ControlsCheckbox, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "switch" },
                React.createElement(
                    "label",
                    null,
                    React.createElement("input", {
                        type: "checkbox",
                        checked: this.props.value,
                        onChange: this.onChange }),
                    this.props.label
                )
            );
        }
    }]);

    return ControlsCheckbox;
}(React.Component);

},{"common/tools":24,"l10n/loader":25}],32:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.connection_status = exports.Loader = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("l10n/loader");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Loader = exports.Loader = function (_React$Component) {
    _inherits(Loader, _React$Component);

    function Loader() {
        _classCallCheck(this, Loader);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Loader).apply(this, arguments));
    }

    _createClass(Loader, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "table",
                { style: { "height": "100%", "width": "100%" } },
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "td",
                            { style: { "textAlign": "center" } },
                            React.createElement("img", { src: "/static/img/ajax-loader.gif" })
                        )
                    )
                )
            );
        }
    }]);

    return Loader;
}(React.Component);

var ConnectionStatusMock = function () {
    function ConnectionStatusMock() {
        _classCallCheck(this, ConnectionStatusMock);
    }

    _createClass(ConnectionStatusMock, [{
        key: "setOk",
        value: function setOk() {}
    }, {
        key: "setFail",
        value: function setFail() {}
    }]);

    return ConnectionStatusMock;
}();

var ConnectionStatus = function (_React$Component2) {
    _inherits(ConnectionStatus, _React$Component2);

    function ConnectionStatus(props) {
        _classCallCheck(this, ConnectionStatus);

        var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(ConnectionStatus).call(this, props));

        _this2.state = {
            "connected": null
        };
        return _this2;
    }

    _createClass(ConnectionStatus, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            this.stopInterval();
        }
    }, {
        key: "startInterval",
        value: function startInterval() {
            var _this3 = this;

            if (this.interval) {
                return;
            }
            this.interval = setInterval(function () {
                _this3.setState({
                    tick: !_this3.state.tick
                });
            }, 750);
        }
    }, {
        key: "stopInterval",
        value: function stopInterval() {
            if (!this.interval) {
                return;
            }
            clearInterval(this.interval);
            this.interval = null;
        }
    }, {
        key: "setOk",
        value: function setOk() {
            this.stopInterval();
            this.setState({ connected: true, tick: false });
        }
    }, {
        key: "setFail",
        value: function setFail() {
            this.startInterval();
            this.setState({ connected: false });
        }
    }, {
        key: "render",
        value: function render() {
            if (this.state.connected) {
                return React.createElement("div", { className: "connection-status ok" });
            }
            if (this.state.connected === null) {
                return React.createElement(
                    "div",
                    { className: "connection-status alert-warning" },
                    (0, _loader._)("global.labels.connecting")
                );
            }
            return React.createElement(
                "div",
                { className: "connection-status alert-danger" + (this.state.tick ? " tick" : "") },
                (0, _loader._)("global.labels.connection_problem")
            );
        }
    }], [{
        key: "init",
        value: function init() {
            var element = window.document.getElementById("connection_status");
            if (element && !element.hasChildNodes()) {
                return ReactDOM.render(React.createElement(ConnectionStatus, null), element);
            }
            return new ConnectionStatusMock();
        }
    }]);

    return ConnectionStatus;
}(React.Component);

var connection_status = exports.connection_status = ConnectionStatus.init();

},{"l10n/loader":25}],33:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.showError = showError;
exports.showConfirm = showConfirm;

var _loader = require("l10n/loader");

function showError(msg) {
    var title = (typeof msg === "undefined" ? "undefined" : _typeof(msg)) === "object" ? msg[0] : (0, _loader._)("global.messages.error_header");
    var text = (typeof msg === "undefined" ? "undefined" : _typeof(msg)) === "object" ? msg[1] : msg;
    swal({
        title: title,
        text: text,
        type: "error",
        animation: false
    });
}

function showConfirm(message, action) {
    var close_on_confirm = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];

    return swal({
        title: message,
        animation: false,
        showCancelButton: true,
        confirmButtonText: (0, _loader._)("global.labels.yes"),
        cancelButtonText: (0, _loader._)("global.labels.no"),
        closeOnConfirm: close_on_confirm
    }, action);
}

},{"l10n/loader":25}],34:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Printable = exports.Printable = function (_React$Component) {
    _inherits(Printable, _React$Component);

    function Printable() {
        _classCallCheck(this, Printable);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(Printable).apply(this, arguments));
    }

    _createClass(Printable, [{
        key: "fetchPrintableData",
        value: function fetchPrintableData() {
            return this._body.innerHTML;
        }
    }, {
        key: "renderHeader",
        value: function renderHeader() {
            return this.props.header ? React.createElement(
                "div",
                { className: "p-header" },
                this.props.header
            ) : null;
        }
    }, {
        key: "renderTitle1",
        value: function renderTitle1() {
            return this.props.title1 ? React.createElement(
                "h1",
                null,
                this.props.title1
            ) : null;
        }
    }, {
        key: "renderTitle2",
        value: function renderTitle2() {
            return this.props.title2 ? React.createElement(
                "h2",
                null,
                this.props.title2
            ) : null;
        }
    }, {
        key: "renderTitle3",
        value: function renderTitle3() {
            return this.props.title3 ? React.createElement(
                "h3",
                null,
                this.props.title3
            ) : null;
        }
    }, {
        key: "renderBody",
        value: function renderBody() {
            var _this2 = this;

            return React.createElement(
                "div",
                {
                    className: "p-content",
                    ref: function ref(e) {
                        return _this2._body = e;
                    }
                },
                this.props.body
            );
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "printable" },
                this.renderHeader(),
                this.renderTitle1(),
                this.renderTitle2(),
                this.renderTitle3(),
                this.renderBody()
            );
        }
    }], [{
        key: "propTypes",
        get: function get() {
            return {
                header: React.PropTypes.string,
                title1: React.PropTypes.string,
                title2: React.PropTypes.string,
                title3: React.PropTypes.string,
                body: React.PropTypes.node.isRequired,
                sendDeltas: React.PropTypes.bool
            };
        }
    }]);

    return Printable;
}(React.Component);

},{}],35:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StopWatch = exports.TabletAcroOverrideInput = exports.TabletIntegerInput = exports.TabletPoint5SelectInput = exports.TabletIntegerSelectInput = exports.TabletSelectorInput = exports.Slider = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.onTouchOrClick = onTouchOrClick;
exports.onTouchEndOrClick = onTouchEndOrClick;

var _loader = require("l10n/loader");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function onTouchOrClick(handler) {
    var f = function f(event) {
        event.preventDefault();
        return handler(event);
    };
    return {
        onTouchStart: f,
        onClick: f
    };
}

function onTouchEndOrClick(handler, prevent_default) {
    var _handler = function _handler() {};
    var distance = 0;
    var latest_pos = [0, 0];
    var fire = function fire(event) {
        event.preventDefault();
        return _handler();
    };
    var discard = function discard() {
        _handler = function _handler() {};
    };
    var move = function move(event) {
        var current_pos = [event.touches[0].pageX, event.touches[0].pageY];
        var sqr = function sqr(x) {
            return x * x;
        };
        distance += Math.sqrt(sqr(current_pos[0] - latest_pos[0]) + sqr(current_pos[1] - latest_pos[1]));
        latest_pos = current_pos;
        if (distance > 20) {
            discard();
        }
    };
    var start = function start(event) {
        _handler = handler;
        distance = 0;
        latest_pos = [event.touches[0].pageX, event.touches[0].pageY];
    };
    return {
        onTouchStart: start,
        onTouchEnd: fire,
        onTouchMove: move,
        onTouchCancel: discard,
        onClick: handler
    };
}

var Slider = exports.Slider = function (_React$Component) {
    _inherits(Slider, _React$Component);

    _createClass(Slider, null, [{
        key: "propTypes",
        get: function get() {
            return {
                done: React.PropTypes.bool,
                doneText: React.PropTypes.string,
                slideText: React.PropTypes.string,
                onActivate: React.PropTypes.func
            };
        }
    }]);

    function Slider(props) {
        _classCallCheck(this, Slider);

        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Slider).call(this, props));

        _this.onClick = function (event) {
            if (_this.state.finished || _this.props.done) {
                return;
            }
            _this.setState({
                posision: 200,
                touch: false,
                finished: true
            });
            _this.props.onActivate();
        };

        _this.onTouchStart = function (event) {
            event.preventDefault();
            if (_this.state.finished || _this.props.done) {
                return;
            }
            _this.pin = _this.getRelativeTouch(event);
            _this.setState({
                position: _this.getSliderPos(event),
                touch: true
            });
        };

        _this.onTouchMove = function (event) {
            event.preventDefault();
            if (_this.state.finished || _this.props.done) {
                return;
            }
            _this.setState({
                position: _this.getSliderPos(event)
            });
        };

        _this.onTouchEnd = function (event) {
            event.preventDefault();
            if (_this.state.finished || _this.props.done) {
                return;
            }
            if (_this.state.position === 200) {
                _this.setState({
                    position: 0,
                    finished: true,
                    touch: false
                });
                _this.props.onActivate();
            } else {
                _this.setState({
                    position: 0,
                    touch: false
                });
            }
        };

        _this.state = {
            position: 0,
            touch: false,
            finished: false
        };
        _this.pin = null;
        return _this;
    }

    _createClass(Slider, [{
        key: "componentWillUpdate",
        value: function componentWillUpdate(nextProps) {
            if (!this.props.done && nextProps.done) {
                this.setState({
                    finished: false
                });
            }
        }
    }, {
        key: "isFree",
        value: function isFree() {
            return !this.state.touch && !this.props.done && !this.state.finished;
        }
    }, {
        key: "getOuterTextOpacity",
        value: function getOuterTextOpacity() {
            if (this.state.finished) {
                return 0;
            }
            var value = Math.min(Math.max(100 - this.state.position, 0), 100);
            return (value / 100).toFixed(3);
        }
    }, {
        key: "getElementOffset",
        value: function getElementOffset(element) {
            var res = 0;
            while (element) {
                res += element.offsetLeft || 0;
                element = element.parentNode;
            }
            return res;
        }
    }, {
        key: "getTouch",
        value: function getTouch(event) {
            var touch = event.touches[0];
            var parent = event.target.parentNode;
            return touch.pageX - this.getElementOffset(parent);
        }
    }, {
        key: "getRelativeTouch",
        value: function getRelativeTouch(event) {
            var touch = event.touches[0];
            var parent = event.target;
            return touch.pageX - this.getElementOffset(parent);
        }
    }, {
        key: "getSliderPos",
        value: function getSliderPos(event) {
            var pos = this.getTouch(event) - this.pin;
            return Math.min(Math.max(pos, 0), 200);
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "slider noselect" },
                React.createElement(
                    "div",
                    { className: "inner" + (this.isFree() ? " free" : ""),
                        style: { left: this.props.done || this.state.finished ? "200px" : this.state.position + "px" },
                        onTouchStart: this.onTouchStart,
                        onTouchMove: this.onTouchMove,
                        onTouchEnd: this.onTouchEnd,
                        onClick: this.onClick
                    },
                    "→"
                ),
                this.props.done ? React.createElement(
                    "span",
                    {
                        style: { color: "rgb(100,100,100)" },
                        className: "done-text"
                    },
                    this.props.doneText
                ) : React.createElement(
                    "span",
                    {
                        style: { color: "rgba(100,100,100," + this.getOuterTextOpacity() + ")" },
                        className: "slide-text" + (this.isFree() ? " free" : "")
                    },
                    this.props.slideText
                )
            );
        }
    }]);

    return Slider;
}(React.Component);

var TabletSelectorInput = exports.TabletSelectorInput = function (_React$Component2) {
    _inherits(TabletSelectorInput, _React$Component2);

    function TabletSelectorInput() {
        _classCallCheck(this, TabletSelectorInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TabletSelectorInput).apply(this, arguments));
    }

    _createClass(TabletSelectorInput, [{
        key: "getButtonsCount",
        value: function getButtonsCount() {
            if (this.props.style === "grid") {
                return this.props.rowSize;
            }
            return this.props.choices.length;
        }
    }, {
        key: "onClick",
        value: function onClick(n) {
            this.props.onValueUpdate(n);
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            var result = [];
            this.props.choices.forEach(function (el, idx) {
                var key = el[0];
                var text = el[1];
                var active_class_name = _this3.props.value === key ? " active" : "";
                result.push(React.createElement(
                    "button",
                    _extends({
                        key: key
                    }, onTouchOrClick(_this3.onClick.bind(_this3, key)), {
                        className: "tbtn score-btn" + active_class_name
                    }),
                    text
                ));
                if (_this3.props.style === "grid" && (idx + 1) % _this3.props.rowSize === 0) {
                    result.push(React.createElement("br", { key: "br" + idx }));
                }
            });
            var layout_class = this.props.style !== "two-lines" ? "selector-layout" : "selector-layout-2rows";
            var selected_class = this.props.value === null ? "" : " selected";
            return React.createElement(
                "div",
                { className: "scoring-layout " + layout_class + selected_class + " n-" + this.getButtonsCount().toString() },
                result
            );
        }
    }], [{
        key: "propTypes",
        get: function get() {
            return {
                style: React.PropTypes.string,
                choices: React.PropTypes.array.isRequired,
                rowSize: React.PropTypes.number,
                active: React.PropTypes.number,
                onValueUpdate: React.PropTypes.func.isRequired
            };
        }
    }]);

    return TabletSelectorInput;
}(React.Component);

var TabletIntegerSelectInput = exports.TabletIntegerSelectInput = function (_React$Component3) {
    _inherits(TabletIntegerSelectInput, _React$Component3);

    function TabletIntegerSelectInput() {
        _classCallCheck(this, TabletIntegerSelectInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TabletIntegerSelectInput).apply(this, arguments));
    }

    _createClass(TabletIntegerSelectInput, [{
        key: "createArray",
        value: function createArray(min, max) {
            var result = [];
            for (var idx = min; idx <= max; ++idx) {
                result.push([idx, idx.toString()]);
            }
            return result;
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(TabletSelectorInput, _extends({
                choices: this.createArray(this.props.min, this.props.max)
            }, this.props));
        }
    }], [{
        key: "propTypes",
        get: function get() {
            return {
                min: React.PropTypes.number.isRequired,
                max: React.PropTypes.number.isRequired
            };
        }
    }]);

    return TabletIntegerSelectInput;
}(React.Component);

var TabletPoint5SelectInput = exports.TabletPoint5SelectInput = function (_React$Component4) {
    _inherits(TabletPoint5SelectInput, _React$Component4);

    function TabletPoint5SelectInput() {
        _classCallCheck(this, TabletPoint5SelectInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TabletPoint5SelectInput).apply(this, arguments));
    }

    _createClass(TabletPoint5SelectInput, [{
        key: "createArray",
        value: function createArray(min, max) {
            var result = [];
            for (var idx = Math.round(2 * min); idx <= Math.round(2 * max); ++idx) {
                result.push([idx / 2, idx % 2 ? (idx / 2).toFixed(1) : Math.floor(idx / 2).toString()]);
            }
            return result;
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(TabletSelectorInput, _extends({
                choices: this.createArray(this.props.min, this.props.max)
            }, this.props));
        }
    }], [{
        key: "propTypes",
        get: function get() {
            return {
                min: React.PropTypes.number.isRequired,
                max: React.PropTypes.number.isRequired
            };
        }
    }]);

    return TabletPoint5SelectInput;
}(React.Component);

var TabletIntegerInput = exports.TabletIntegerInput = function (_React$Component5) {
    _inherits(TabletIntegerInput, _React$Component5);

    function TabletIntegerInput() {
        _classCallCheck(this, TabletIntegerInput);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TabletIntegerInput).apply(this, arguments));
    }

    _createClass(TabletIntegerInput, [{
        key: "onMinus",
        value: function onMinus() {
            if (this.props.sendDeltas) {
                this.props.onValueUpdate({ "delta": -1 });
            } else {
                this.props.onValueUpdate(this.props.value - 1);
            }
        }
    }, {
        key: "onPlus",
        value: function onPlus() {
            if (this.props.sendDeltas) {
                this.props.onValueUpdate({ "delta": 1 });
            } else {
                this.props.onValueUpdate(this.props.value + 1);
            }
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "tablet-integer-input" },
                React.createElement(
                    "button",
                    _extends({
                        className: "tbtn btn-minus"
                    }, onTouchOrClick(this.onMinus.bind(this))),
                    "−"
                ),
                React.createElement(
                    "div",
                    { className: "value" },
                    this.props.value
                ),
                React.createElement(
                    "button",
                    _extends({
                        className: "tbtn btn-plus"
                    }, onTouchOrClick(this.onPlus.bind(this))),
                    "+"
                )
            );
        }
    }], [{
        key: "propTypes",
        get: function get() {
            return {
                value: React.PropTypes.number.isRequired,
                onValueUpdate: React.PropTypes.func.isRequired,
                sendDeltas: React.PropTypes.bool
            };
        }
    }, {
        key: "defaultProps",
        get: function get() {
            return {
                sendDeltas: false
            };
        }
    }]);

    return TabletIntegerInput;
}(React.Component);

var TabletAcroOverrideInput = exports.TabletAcroOverrideInput = function (_React$Component6) {
    _inherits(TabletAcroOverrideInput, _React$Component6);

    function TabletAcroOverrideInput() {
        var _Object$getPrototypeO;

        var _temp, _this7, _ret;

        _classCallCheck(this, TabletAcroOverrideInput);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this7 = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(TabletAcroOverrideInput)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this7), _this7.onMinus = function () {
            if (_this7.props.send_deltas) {
                _this7.props.onValueUpdate({ "delta": -0.5 });
            } else {
                _this7.props.onValueUpdate(Math.max(_this7.props.value - 0.5, 0));
            }
        }, _this7.onPlus = function () {
            if (_this7.props.send_deltas) {
                _this7.props.onValueUpdate({ "delta": 0.5 });
            } else {
                _this7.props.onValueUpdate(Math.min(_this7.props.value + 0.5, _this7.props.original_value));
            }
        }, _this7.onZero = function () {
            _this7.props.onValueUpdate(0);
        }, _this7.onRestore = function () {
            _this7.props.onValueUpdate(_this7.props.original_value);
        }, _temp), _possibleConstructorReturn(_this7, _ret);
    }

    _createClass(TabletAcroOverrideInput, [{
        key: "render",
        value: function render() {
            var value_changed = Math.abs(this.props.value - this.props.original_value);
            return React.createElement(
                "div",
                { className: "tablet-acro-override-input" },
                React.createElement(
                    "div",
                    { className: "buttons" },
                    React.createElement(
                        "button",
                        _extends({
                            className: "tbtn btn-zero",
                            disabled: this.props.value < 0.05
                        }, onTouchOrClick(this.onZero)),
                        "↓0"
                    ),
                    React.createElement(
                        "button",
                        _extends({
                            className: "tbtn btn-restore",
                            disabled: value_changed < 0.05
                        }, onTouchOrClick(this.onRestore)),
                        "↑"
                    ),
                    React.createElement(
                        "button",
                        _extends({
                            className: "tbtn btn-minus",
                            disabled: this.props.value < 0.05
                        }, onTouchOrClick(this.onMinus)),
                        "−"
                    ),
                    React.createElement(
                        "button",
                        _extends({
                            className: "tbtn btn-plus",
                            disabled: this.props.original_value < this.props.value + 0.05
                        }, onTouchOrClick(this.onPlus)),
                        "+"
                    )
                ),
                React.createElement(
                    "div",
                    { className: "value" },
                    value_changed ? this.props.original_value.toFixed(1) + " → " + this.props.value.toFixed(1) : this.props.value.toFixed(1)
                )
            );
        }
    }], [{
        key: "propTypes",
        get: function get() {
            return {
                value: React.PropTypes.number.isRequired,
                original_value: React.PropTypes.number.isRequired,
                send_deltas: React.PropTypes.bool,
                onValueUpdate: React.PropTypes.func.isRequired
            };
        }
    }, {
        key: "defaultProps",
        get: function get() {
            return {
                send_deltas: false
            };
        }
    }]);

    return TabletAcroOverrideInput;
}(React.Component);

var stopwatches = {};

var StopWatch = exports.StopWatch = function (_React$Component7) {
    _inherits(StopWatch, _React$Component7);

    _createClass(StopWatch, null, [{
        key: "propTypes",
        get: function get() {
            return {
                score_id: React.PropTypes.number
            };
        }
    }]);

    function StopWatch(props) {
        _classCallCheck(this, StopWatch);

        var _this8 = _possibleConstructorReturn(this, Object.getPrototypeOf(StopWatch).call(this, props));

        _this8.state = stopwatches[_this8.props.score_id] || {
            active: false,
            value: 0,
            str_value: "0:00",
            interval: null
        };
        if (_this8.state.active) {
            _this8.state.interval = setInterval(_this8.tick.bind(_this8), 10); // eslint-disable-line react/no-direct-mutation-state
        }
        return _this8;
    }

    _createClass(StopWatch, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            clearInterval(this.state.interval);
            stopwatches[this.props.score_id] = this.state;
        }
    }, {
        key: "now",
        value: function now() {
            return new Date().getTime();
        }
    }, {
        key: "toggle",
        value: function toggle() {
            this.state.active ? this.stop() : this.start();
        }
    }, {
        key: "start",
        value: function start() {
            this.setState({
                active: true,
                start_at: this.now() - this.state.value,
                interval: setInterval(this.tick.bind(this), 10)
            });
        }
    }, {
        key: "stop",
        value: function stop() {
            clearInterval(this.state.interval);
            this.setState({
                active: false,
                value: this.value()
            });
        }
    }, {
        key: "reset",
        value: function reset() {
            clearInterval(this.state.interval);
            this.setState({
                active: false,
                value: 0
            });
        }
    }, {
        key: "value",
        value: function value() {
            return this.state.active ? this.now() - this.state.start_at : this.state.value;
        }
    }, {
        key: "tick",
        value: function tick() {
            var new_value = this.value();
            if (new_value !== this.state.value) {
                this.setState({
                    value: this.value()
                });
            }
        }
    }, {
        key: "pad",
        value: function pad(num, size) {
            var s = "0000" + num.toString();
            return s.substr(s.length - size);
        }
    }, {
        key: "getStrValue",
        value: function getStrValue() {
            var val = this.value();
            var m = 0,
                s = 0;
            var result = '';
            m = Math.floor(val / (60 * 1000));
            val %= 60 * 1000;
            s = Math.floor(val / 1000);
            return m.toString() + ':' + this.pad(s, 2);
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { className: "stopwatch" },
                React.createElement(
                    "button",
                    _extends({
                        className: "tbtn btn-reset ignore-readonly"
                    }, onTouchOrClick(this.reset.bind(this))),
                    (0, _loader._)("tablet.buttons.reset_stopwatch")
                ),
                React.createElement(
                    "button",
                    _extends({
                        className: "tbtn btn-toggle ignore-readonly" + (this.state.active ? " active" : "")
                    }, onTouchOrClick(this.toggle.bind(this))),
                    this.state.active ? (0, _loader._)("tablet.buttons.stop_stopwatch") : (0, _loader._)("tablet.buttons.start_stopwatch")
                ),
                React.createElement(
                    "div",
                    { className: "time" },
                    this.getStrValue()
                )
            );
        }
    }]);

    return StopWatch;
}(React.Component);

},{"l10n/loader":25}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
