(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var _main = require("admin/main");

ReactDOM.render(React.createElement(_main.Admin, window.page_props), document.getElementById("content"));

},{"admin/main":10}],2:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.DisciplineResults = exports.DisciplineResultsButtons = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _loader = require("i10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _printable = require("ui/printable");

var _docx = require("common/docx");

var _discipline_results = require("./rosfarr/discipline_results");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DisciplineResultsButtons = exports.DisciplineResultsButtons = function (_React$Component) {
    _inherits(DisciplineResultsButtons, _React$Component);

    function DisciplineResultsButtons() {
        _classCallCheck(this, DisciplineResultsButtons);

        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    DisciplineResultsButtons.prototype.signal = function signal(message) {
        var _this2 = this;

        return function () {
            return _this2.props.onSignal(message);
        }.bind(this);
    };

    DisciplineResultsButtons.prototype.render = function render() {
        return React.createElement(
            "div",
            null,
            React.createElement(
                "button",
                { className: "btn btn-primary", onClick: this.signal("docx") },
                "DOCX"
            )
        );
    };

    return DisciplineResultsButtons;
}(React.Component);

var DisciplineResults = exports.DisciplineResults = function (_React$Component2) {
    _inherits(DisciplineResults, _React$Component2);

    _createClass(DisciplineResults, null, [{
        key: "defaultProps",
        get: function get() {
            return {
                renderer: "page"
            };
        }

        // Initialization

    }]);

    function DisciplineResults(props) {
        _classCallCheck(this, DisciplineResults);

        var _this3 = _possibleConstructorReturn(this, _React$Component2.call(this, props));

        _this3.state = {
            loaded: false
        };
        _this3.runs_loaded = false;
        return _this3;
    }

    DisciplineResults.prototype.componentWillMount = function componentWillMount() {
        var _this4 = this;

        this.storage = _storage.storage.getDomain("discipline_results_" + this.props.discipline_id);
        this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
        this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadState.bind(this));
        this.results_change_listener = _message_dispatcher.message_dispatcher.addListener("tour_results_changed reload_data", function (message) {
            if (!message) {
                this.loadResults();
                return;
            }
            var tour_storage = this.storage.get("Tour").by_id(message["tour_id"]);
            if (!tour_storage) {
                return;
            }
            if (tour_storage.discipline.id === this.props.discipline_id) {
                this.loadResults();
            }
        }.bind(this));
        this.loadData();
        this.loadResults();
        if (this.props.autoDocx) {
            (function () {
                var interval_id = setInterval(function () {
                    if (_this4.refs.printable) {
                        clearInterval(interval_id);
                        _this4.createDocx(_this4.props.autoDocx.filename);
                        _this4.props.autoDocx.callback(_this4.props.autoDocx.filename);
                    }
                }, 500);
            })();
        }
    };

    DisciplineResults.prototype.componentWillUnmount = function componentWillUnmount() {
        _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
        _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
        _message_dispatcher.message_dispatcher.removeListener(this.results_change_listener);
        _storage.storage.delDomain("discipline_results_" + this.props.discipline_id);
    };

    DisciplineResults.prototype.reloadState = function reloadState() {
        if (!this.state.discipline_results) {
            return;
        }
        if (!this.runs_loaded) {
            return;
        }
        var storage_runs = this.storage.get("Run");
        var results = this.state.discipline_results;
        var new_state = [];
        var SCHEMA = {
            tour: {},
            participant: {
                sportsmen: {},
                club: {}
            }
        };
        for (var i = 0; i < results.length; ++i) {
            new_state.push({
                place: results[i].place,
                run: storage_runs.by_id(results[i].run_id).serialize(SCHEMA)
            });
        }
        this.setState({
            loaded: true,
            table: new_state,
            discipline: this.storage.get("Discipline").by_id(this.props.discipline_id).serialize({
                competition: {}
            })
        });
    };

    DisciplineResults.prototype.loadResults = function loadResults() {
        var _this5 = this;

        (0, _api.Api)("discipline.get_results", {
            discipline_id: this.props.discipline_id
        }).onSuccess(function (response) {
            _this5.setState({
                discipline_results: response
            });
            _this5.reloadState();
        }).send();
    };

    DisciplineResults.prototype.loadData = function loadData() {
        var _this6 = this;

        (0, _api.Api)("discipline.get", {
            discipline_id: this.props.discipline_id,
            children: {
                competition: {},
                tours: {
                    runs: {
                        participant: {
                            club: {}
                        }
                    }
                }
            }
        }).addToDB("Discipline", this.props.discipline_id, this.storage).onSuccess(function () {
            _this6.runs_loaded = true;
            _this6.reloadState(_this6);
        }).send();
    };

    // Listeners

    DisciplineResults.prototype.onSignal = function onSignal(message) {
        switch (message) {
            case "docx":
                this.createDocx();
                break;
            default:
                console.log("Unknown message:", message);
        }
    };

    // Rendering

    DisciplineResults.prototype.renderBody = function renderBody() {
        switch (this.props.renderer) {
            case "presenter":
                return React.createElement(_discipline_results.DisciplineResultsPresenterTable, { table: this.state.table, ref: "main_table" });
            case "screen_operator":
                return React.createElement(_discipline_results.DisciplineResultsScreenOperatorTable, {
                    table: this.state.table,
                    selectedPlace: this.props.selectedPlace,
                    onPlaceSelect: this.props.onPlaceSelect,
                    ref: "main_table" });
            case "page":
                return React.createElement(_printable.Printable, {
                    ref: "printable",
                    header: this.state.discipline.competition.name + ", " + this.state.discipline.competition.date,
                    title1: (0, _loader._)("admin.headers.discipline_results"),
                    title3: this.state.discipline.name,
                    body: React.createElement(_discipline_results.DisciplineResultsTable, { table: this.state.table }) });
            case "table":
                return React.createElement(_discipline_results.DisciplineResultsTable, { table: this.state.table, ref: "main_table" });
            default:
        }
    };

    DisciplineResults.prototype.render = function render() {
        // eslint-disable-line react/sort-comp
        if (!this.state.loaded) {
            return React.createElement(
                "div",
                { className: "discipline-results" },
                React.createElement(_components.Loader, null)
            );
        }
        return React.createElement(
            "div",
            { className: "discipline-results" },
            this.renderBody()
        );
    };

    DisciplineResults.prototype.createDocx = function createDocx() {
        var filename = arguments.length <= 0 || arguments[0] === undefined ? "discipline-results.docx" : arguments[0];

        (0, _docx.Docx)(filename).setHeader(this.state.discipline.competition.name + ", " + this.state.discipline.competition.date).setTitle1((0, _loader._)("admin.headers.discipline_results")).setTitle3(this.state.discipline.name).setBody(this.refs.printable.fetchPrintableData()).addStyle(".tour-name", "background", "#ddd").addStyle(".bordered-table .sportsmen td, .bordered-table .sportsmen th", "border", "none").addStyle(".bordered-table .sportsmen td, .bordered-table .sportsmen th", "padding", "0").addStyle(".sportsmen", "width", "100%").save();
    };

    return DisciplineResults;
}(React.Component);

},{"./rosfarr/discipline_results":5,"common/docx":24,"i10n/loader":27,"server/api":29,"server/message_dispatcher":30,"server/storage":31,"ui/components":32,"ui/printable":34}],3:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.HeatsBody = exports.HeatsButtons = undefined;

var _loader = require("i10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _printable = require("ui/printable");

var _docx = require("common/docx");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HeatsButtons = exports.HeatsButtons = function (_React$Component) {
    _inherits(HeatsButtons, _React$Component);

    function HeatsButtons() {
        _classCallCheck(this, HeatsButtons);

        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    HeatsButtons.prototype.signal = function signal(message) {
        var _this2 = this;

        return function () {
            return _this2.props.onSignal(message);
        }.bind(this);
    };

    HeatsButtons.prototype.render = function render() {
        return React.createElement(
            "div",
            null,
            React.createElement(
                "button",
                { className: "btn btn-primary", onClick: this.signal("docx") },
                "DOCX"
            )
        );
    };

    return HeatsButtons;
}(React.Component);

var HeatsBody = exports.HeatsBody = function (_React$Component2) {
    _inherits(HeatsBody, _React$Component2);

    function HeatsBody(props) {
        _classCallCheck(this, HeatsBody);

        var _this3 = _possibleConstructorReturn(this, _React$Component2.call(this, props));

        _this3.state = {
            tour: null
        };
        return _this3;
    }

    HeatsBody.prototype.componentWillMount = function componentWillMount() {
        var _this4 = this;

        this.storage = _storage.storage.getDomain("heats_" + this.props.tour_id);
        this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
        this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
        this.loadData();
        if (this.props.autoDocx) {
            (function () {
                var interval_id = setInterval(function () {
                    if (_this4.refs.printable) {
                        clearInterval(interval_id);
                        _this4.createDocx(_this4.props.autoDocx.filename);
                        _this4.props.autoDocx.callback(_this4.props.autoDocx.filename);
                    }
                }, 500);
            })();
        }
    };

    HeatsBody.prototype.componentWillUnmount = function componentWillUnmount() {
        _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
        _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
        _storage.storage.delDomain("heats_" + this.props.tour_id);
    };

    HeatsBody.prototype.reloadFromStorage = function reloadFromStorage() {
        var SCHEMA = {
            discipline: {
                competition: {}
            },
            runs: {
                participant: {
                    club: {}
                }
            }
        };
        var serialized = this.storage.get("Tour").by_id(this.props.tour_id).serialize(SCHEMA);
        this.setState({
            tour: serialized
        });
    };

    HeatsBody.prototype.loadData = function loadData() {
        (0, _api.Api)("tour.get", {
            tour_id: this.props.tour_id,
            children: {
                discipline: {
                    competition: {}
                },
                runs: {
                    participant: {
                        club: {}
                    }
                }
            }
        }).addToDB("Tour", this.props.tour_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
    };

    HeatsBody.prototype.onSignal = function onSignal(message) {
        switch (message) {
            case "docx":
                this.createDocx();
                break;
            default:
                console.log("Unknown message:", message);
        }
    };

    HeatsBody.prototype.renderHeatHeader = function renderHeatHeader(prev_row, next_row) {
        var need_render = typeof prev_row === "undefined" || prev_row.heat !== next_row.heat;
        if (!need_render) {
            return null;
        }
        return React.createElement(
            "tr",
            { key: "H" + next_row.heat },
            React.createElement(
                "th",
                { className: "heat-number", colSpan: "3" },
                React.createElement(
                    "p",
                    null,
                    (0, _loader._)("global.phrases.heat_n", next_row.heat)
                )
            )
        );
    };

    HeatsBody.prototype.renderHeatRow = function renderHeatRow(row) {
        return React.createElement(
            "tr",
            { key: "R" + row.id },
            React.createElement(
                "td",
                { className: "w-8" },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    row.participant.number
                )
            ),
            React.createElement(
                "td",
                null,
                React.createElement(
                    "p",
                    null,
                    row.participant.name
                )
            ),
            React.createElement(
                "td",
                null,
                React.createElement(
                    "p",
                    null,
                    row.participant.club.name
                )
            )
        );
    };

    HeatsBody.prototype.renderHeatRows = function renderHeatRows() {
        var result = [];
        var runs = this.state.tour.runs;
        for (var i = 0; i < runs.length; ++i) {
            var header = this.renderHeatHeader(runs[i - 1], runs[i]);
            header && result.push(header);
            result.push(this.renderHeatRow(runs[i]));
        }
        return result;
    };

    HeatsBody.prototype.render = function render() {
        // eslint-disable-line react/sort-comp
        if (this.state.tour === null) {
            return React.createElement(_components.Loader, null);
        }
        var body = React.createElement(
            "div",
            { className: "tour-heats" },
            React.createElement(
                "table",
                { className: "bordered-table" },
                React.createElement(
                    "thead",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "w-8" },
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("judging.labels.number")
                            )
                        ),
                        React.createElement(
                            "th",
                            null,
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("judging.labels.participant_name")
                            )
                        ),
                        React.createElement(
                            "th",
                            null,
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("judging.labels.club")
                            )
                        )
                    )
                ),
                React.createElement(
                    "tbody",
                    null,
                    this.renderHeatRows()
                )
            )
        );
        return React.createElement(_printable.Printable, {
            header: this.state.tour.discipline.competition.name + ", " + this.state.tour.discipline.competition.date,
            title1: (0, _loader._)("admin.headers.tour_heats"),
            title2: this.state.tour.discipline.name,
            title3: this.state.tour.name,
            body: body,
            ref: "printable" });
    };

    HeatsBody.prototype.createDocx = function createDocx() {
        var filename = arguments.length <= 0 || arguments[0] === undefined ? "tour-heats.docx" : arguments[0];

        (0, _docx.Docx)(filename).setHeader(this.state.tour.discipline.competition.name + ", " + this.state.tour.discipline.competition.date).setTitle1((0, _loader._)("admin.headers.tour_heats")).setTitle2(this.state.tour.discipline.name).setTitle3(this.state.tour.name).setBody(this.refs.printable.fetchPrintableData()).addStyle(".heat-number", "background", "#ccc").addStyle(".heat-number", "text-align", "left").addStyle("td, th", "font-size", "12pt").save();
    };

    return HeatsBody;
}(React.Component);

},{"common/docx":24,"i10n/loader":27,"server/api":29,"server/message_dispatcher":30,"server/storage":31,"ui/components":32,"ui/printable":34}],4:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.Judging = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _loader = require("i10n/loader");

var _heats = require("./heats");

var _tour_admin = require("./tour_admin");

var _tour_results = require("./tour_results");

var _discipline_results = require("./discipline_results");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Judging = exports.Judging = function (_React$Component) {
    _inherits(Judging, _React$Component);

    function Judging(props) {
        _classCallCheck(this, Judging);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            active_tour_id: _this.getTourIdFromHash(),
            page: _this.getPageFromHash()
        };
        return _this;
    }

    Judging.prototype.switchActiveTour = function switchActiveTour(new_tour_id) {
        this.setState({
            active_tour_id: new_tour_id,
            page: this.getActiveTour(new_tour_id).finalized ? "results-1" : "tour-admin"
        });
        window.location.hash = "#judging/" + new_tour_id;
    };

    Judging.prototype.switchPage = function switchPage(new_page, event) {
        event.preventDefault();
        this.setState({
            page: new_page
        });
        window.location.hash = "#judging/" + this.state.active_tour_id + "/" + new_page;
    };

    Judging.prototype.getTourIdFromHash = function getTourIdFromHash() {
        var chunks = window.location.hash.substr(1).split("/");
        if (chunks[1] && /^\d+$/.test(chunks[1])) {
            return parseInt(chunks[1]);
        }
        return null;
    };

    Judging.prototype.getPageFromHash = function getPageFromHash() {
        var chunks = window.location.hash.substr(1).split("/");
        if (chunks[2]) {
            return chunks[2];
        }
        var active_tour = this.getActiveTour(this.getTourIdFromHash());
        return active_tour && active_tour.finalized ? "results-1" : "tour-admin";
    };

    Judging.prototype.getActiveTour = function getActiveTour() {
        var active_tour_id = arguments.length <= 0 || arguments[0] === undefined ? this.state.active_tour_id : arguments[0];

        if (active_tour_id === null) {
            return null;
        }
        var result = null;
        this.props.disciplines.forEach(function (discipline) {
            discipline.tours.forEach(function (tour) {
                if (tour.id === active_tour_id) {
                    result = tour;
                }
            });
        });
        return result;
    };

    Judging.prototype.getActiveDiscipline = function getActiveDiscipline() {
        var _this2 = this;

        var result = null;
        this.props.disciplines.forEach(function (discipline) {
            discipline.tours.forEach(function (tour) {
                if (tour.id === _this2.state.active_tour_id) {
                    result = discipline;
                }
            });
        });
        return result;
    };

    Judging.prototype.passSignal = function passSignal(message) {
        if (this.refs.active_body) {
            this.refs.active_body.onSignal(message);
        }
    };

    Judging.prototype.renderButtons = function renderButtons() {
        if (this.state.active_tour_id === null) {
            return null;
        }
        var props = {
            tour: this.getActiveTour(),
            onSignal: this.passSignal.bind(this),
            key: this.state.active_tour_id
        };
        switch (this.state.page) {
            case "tour-admin":
                return React.createElement(_tour_admin.TourAdminButtons, props);
            case "heats":
                return React.createElement(_heats.HeatsButtons, props);
            case "results-1":
            case "results-2":
            case "results-3":
                return React.createElement(_tour_results.TourResultsButtons, props);
            case "discipline-results":
                return React.createElement(_discipline_results.DisciplineResultsButtons, props);
            default:
                console.log("Unknown page:", this.state.page);
        }
    };

    Judging.prototype.renderBody = function renderBody() {
        var _this3 = this;

        if (this.state.active_tour_id === null) {
            return null;
        }
        var props = {
            tour_id: this.state.active_tour_id,
            ref: "active_body",
            switchPage: function switchPage(page) {
                return _this3.setState({ page: page });
            },
            key: this.state.active_tour_id
        };
        switch (this.state.page) {
            case "tour-admin":
                return React.createElement(_tour_admin.TourAdminBody, props);
            case "heats":
                return React.createElement(_heats.HeatsBody, props);
            case "results-1":
                return React.createElement(_tour_results.TourResultsBody, _extends({ printable: true, verbosity: "1" }, props));
            case "results-2":
                return React.createElement(_tour_results.TourResultsBody, _extends({ printable: true, verbosity: "2" }, props));
            case "results-3":
                return React.createElement(_tour_results.TourResultsBody, _extends({ printable: true, verbosity: "3" }, props));
            case "discipline-results":
                return React.createElement(_discipline_results.DisciplineResults, {
                    discipline_id: this.getActiveDiscipline().id,
                    ref: "active_body",
                    renderer: "page" });
            default:
                console.log("Unknown page:", this.state.page);
        }
    };

    Judging.prototype.renderHeader = function renderHeader() {
        var active_tour = this.getActiveTour();
        if (!active_tour) {
            return null;
        }
        return React.createElement(
            "header",
            { className: "app-header with-tabs" },
            React.createElement(
                "div",
                { className: "controls" },
                this.renderButtons()
            ),
            React.createElement(
                "h1",
                null,
                this.getActiveDiscipline().name
            ),
            React.createElement(
                "h2",
                null,
                active_tour.name
            ),
            React.createElement("div", { className: "clearfix" }),
            React.createElement(
                "ul",
                { className: "pull-right nav nav-tabs" },
                React.createElement(
                    "li",
                    { className: this.state.page === "tour-admin" ? "active" : "" },
                    React.createElement(
                        "a",
                        { href: "#", onClick: this.switchPage.bind(this, "tour-admin") },
                        (0, _loader._)("admin.judging-tabs.tour-admin")
                    )
                ),
                React.createElement(
                    "li",
                    { className: this.state.page === "heats" ? "active" : "" },
                    React.createElement(
                        "a",
                        { href: "#", onClick: this.switchPage.bind(this, "heats") },
                        (0, _loader._)("admin.judging-tabs.heats")
                    )
                ),
                React.createElement(
                    "li",
                    { className: this.state.page === "results-1" ? "active" : "" },
                    React.createElement(
                        "a",
                        { href: "#", onClick: this.switchPage.bind(this, "results-1") },
                        (0, _loader._)("admin.judging-tabs.results-1")
                    )
                ),
                React.createElement(
                    "li",
                    { className: this.state.page === "results-2" ? "active" : "" },
                    React.createElement(
                        "a",
                        { href: "#", onClick: this.switchPage.bind(this, "results-2") },
                        (0, _loader._)("admin.judging-tabs.results-2")
                    )
                ),
                React.createElement(
                    "li",
                    { className: this.state.page === "results-3" ? "active" : "" },
                    React.createElement(
                        "a",
                        { href: "#", onClick: this.switchPage.bind(this, "results-3") },
                        (0, _loader._)("admin.judging-tabs.results-3")
                    )
                ),
                React.createElement(
                    "li",
                    { className: this.state.page === "discipline-results" ? "active" : "" },
                    React.createElement(
                        "a",
                        { href: "#", onClick: this.switchPage.bind(this, "discipline-results") },
                        (0, _loader._)("admin.judging-tabs.discipline-results")
                    )
                )
            ),
            React.createElement("div", { className: "clearfix" })
        );
    };

    Judging.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "app" },
            React.createElement(
                "div",
                { className: "side-menu" },
                React.createElement(CompetitionSchema, {
                    updateTour: this.switchActiveTour.bind(this),
                    current_tour_id: this.state.active_tour_id,
                    competition_plan: this.props.competition_plan,
                    disciplines: this.props.disciplines })
            ),
            React.createElement(
                "div",
                { className: "app-content" },
                this.renderHeader(),
                React.createElement(
                    "div",
                    { className: "app-body" },
                    this.renderBody()
                )
            )
        );
    };

    return Judging;
}(React.Component);

var CompetitionSchema = function (_React$Component2) {
    _inherits(CompetitionSchema, _React$Component2);

    function CompetitionSchema(props) {
        _classCallCheck(this, CompetitionSchema);

        var _this4 = _possibleConstructorReturn(this, _React$Component2.call(this, props));

        _this4.state = {
            sort_by_plan: !!parseInt(sessionStorage["sort_by_plan"])
        };
        return _this4;
    }

    CompetitionSchema.prototype.activateTour = function activateTour(tour) {
        this.props.updateTour(tour.id);
    };

    CompetitionSchema.prototype.switchToPlan = function switchToPlan() {
        this.setState({
            sort_by_plan: true
        });
        sessionStorage["sort_by_plan"] = "1";
    };

    CompetitionSchema.prototype.switchToDisciplines = function switchToDisciplines() {
        this.setState({
            sort_by_plan: false
        });
        sessionStorage["sort_by_plan"] = "0";
    };

    CompetitionSchema.prototype.renderTour = function renderTour(tour) {
        var discipline_name = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];

        var className = "level-2" + (tour.finalized ? " grey" : "") + (tour.id === this.props.current_tour_id ? " active" : "");
        return React.createElement(
            "div",
            { className: className, onClick: this.activateTour.bind(this, tour), key: tour.id },
            discipline_name ? React.createElement(
                "small",
                null,
                React.createElement(
                    "strong",
                    null,
                    discipline_name
                ),
                React.createElement("br", null)
            ) : null,
            tour.name
        );
    };

    CompetitionSchema.prototype.renderDiscipline = function renderDiscipline(ic) {
        var _this5 = this;

        return React.createElement(
            "details",
            { className: "block", key: ic.id, open: !!parseInt(sessionStorage.getItem("D_J_" + ic.id)) },
            React.createElement(
                "summary",
                { className: "level-1", onClick: function onClick(e) {
                        return sessionStorage.setItem("D_J_" + ic.id, e.target.parentNode.open ? 0 : 1);
                    } },
                ic.name
            ),
            ic.tours.map(function (tour) {
                return _this5.renderTour(tour);
            })
        );
    };

    CompetitionSchema.prototype.renderByDiscipline = function renderByDiscipline() {
        var data = this.props.disciplines.map(function (ic) {
            return this.renderDiscipline(ic);
        }.bind(this));
        return React.createElement(
            "div",
            { className: "noselect" },
            data
        );
    };

    CompetitionSchema.prototype.renderByPlan = function renderByPlan() {
        var _this6 = this;

        var tours = {};
        this.props.disciplines.forEach(function (discipline) {
            return discipline.tours.forEach(function (tour) {
                return tours[tour.id] = {
                    tour: tour,
                    discipline_name: discipline.name
                };
            });
        });
        var result = this.props.competition_plan.filter(function (item) {
            return item.tour_id !== null;
        }).map(function (item) {
            return _this6.renderTour(tours[item.tour_id].tour, tours[item.tour_id].discipline_name);
        });
        return React.createElement(
            "div",
            null,
            result
        );
    };

    CompetitionSchema.prototype.renderList = function renderList() {
        return React.createElement(
            "div",
            null,
            this.state.sort_by_plan ? this.renderByPlan() : this.renderByDiscipline()
        );
    };

    CompetitionSchema.prototype.renderButton = function renderButton() {
        return this.state.sort_by_plan ? React.createElement(
            "button",
            { className: "btn btn-default btn-sm full-width", onClick: this.switchToDisciplines.bind(this) },
            (0, _loader._)("admin.buttons.switch_to_disciplines")
        ) : React.createElement(
            "button",
            { className: "btn btn-default btn-sm full-width", onClick: this.switchToPlan.bind(this) },
            (0, _loader._)("admin.buttons.switch_to_plan")
        );
    };

    CompetitionSchema.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "competition-schema" },
            this.renderList(),
            this.renderButton()
        );
    };

    return CompetitionSchema;
}(React.Component);

},{"./discipline_results":2,"./heats":3,"./tour_admin":8,"./tour_results":9,"i10n/loader":27}],5:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.DisciplineResultsScreenOperatorTable = exports.DisciplineResultsPresenterTable = exports.DisciplineResultsTable = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _loader = require("i10n/loader");

var _tablet_components = require("ui/tablet_components");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function __() {
    var args = [];
    for (var idx = 1; idx < arguments.length; ++idx) {
        args.push(arguments[idx]);
    }
    return _loader._.apply(undefined, ["scoring_systems.rosfarr." + arguments[0]].concat(args));
}

var DisciplineResultsTable = exports.DisciplineResultsTable = function (_React$Component) {
    _inherits(DisciplineResultsTable, _React$Component);

    function DisciplineResultsTable() {
        _classCallCheck(this, DisciplineResultsTable);

        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    DisciplineResultsTable.prototype.renderRowHeader = function renderRowHeader(prev_row, next_row) {
        var need_render = typeof prev_row === "undefined" || prev_row.run.tour.id !== next_row.run.tour.id;
        if (!need_render) {
            return null;
        }
        return React.createElement(
            "tr",
            { key: "H" + next_row.run.id },
            React.createElement(
                "th",
                { className: "tour-name", colSpan: "6" },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    next_row.run.tour.name
                )
            )
        );
    };

    DisciplineResultsTable.prototype.renderRow = function renderRow(row) {
        var p = row.run.participant;
        return React.createElement(
            "tr",
            { key: "R" + row.run.id },
            React.createElement(
                "td",
                { className: "w-8 place" },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    row.place === null ? "" : row.place
                )
            ),
            React.createElement(
                "td",
                { className: "w-8 number" },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    p.number
                )
            ),
            React.createElement(
                "td",
                { className: "w-36", colSpan: "2" },
                React.createElement(
                    "table",
                    { className: "sportsmen" },
                    React.createElement(
                        "tbody",
                        null,
                        p.formation_name ? React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { colSpan: "2" },
                                React.createElement(
                                    "p",
                                    { className: "text-left" },
                                    p.formation_name
                                )
                            )
                        ) : null,
                        p.sportsmen.map(function (s, idx) {
                            return React.createElement(
                                "tr",
                                { key: idx },
                                React.createElement(
                                    "td",
                                    { className: "w-75" },
                                    React.createElement(
                                        "p",
                                        null,
                                        s.last_name + " " + s.first_name,
                                        s.substitute ? React.createElement(
                                            "i",
                                            null,
                                            " (",
                                            (0, _loader._)("admin.labels.sub"),
                                            ".)"
                                        ) : null
                                    )
                                ),
                                React.createElement(
                                    "td",
                                    { className: "w-25" },
                                    React.createElement(
                                        "p",
                                        { className: "text-center" },
                                        s.year_of_birth
                                    )
                                )
                            );
                        })
                    )
                )
            ),
            React.createElement(
                "td",
                { className: "w-24 club" },
                React.createElement(
                    "p",
                    null,
                    p.club.name
                )
            ),
            React.createElement(
                "td",
                { className: "w-24 coaches" },
                React.createElement(
                    "p",
                    null,
                    p.coaches.split(",").map(function (c) {
                        return [c.trim(), React.createElement("br", { key: "X" })];
                    })
                )
            )
        );
    };

    DisciplineResultsTable.prototype.renderRows = function renderRows() {
        var result = [];
        var table = this.props.table;
        for (var i = 0; i < table.length; ++i) {
            var header = this.renderRowHeader(table[i - 1], table[i]);
            header && result.push(header);
            result.push(this.renderRow(table[i]));
        }
        return result;
    };

    DisciplineResultsTable.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "discipline-results" },
            React.createElement(
                "table",
                { className: "bordered-table" },
                React.createElement(
                    "thead",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "w-8" },
                            React.createElement(
                                "p",
                                null,
                                __("results.labels.place")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-8" },
                            React.createElement(
                                "p",
                                null,
                                __("results.labels.number")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-27" },
                            React.createElement(
                                "p",
                                null,
                                __("results.labels.sportsmen")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-9" },
                            React.createElement(
                                "p",
                                null,
                                __("results.labels.sportsmen_year_of_birth")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-24" },
                            React.createElement(
                                "p",
                                null,
                                __("results.labels.participant_club")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-24" },
                            React.createElement(
                                "p",
                                null,
                                __("results.labels.participant_coaches")
                            )
                        )
                    )
                ),
                React.createElement(
                    "tbody",
                    null,
                    this.renderRows()
                )
            )
        );
    };

    return DisciplineResultsTable;
}(React.Component);

var DisciplineResultsPresenterTableRow = function (_React$Component2) {
    _inherits(DisciplineResultsPresenterTableRow, _React$Component2);

    function DisciplineResultsPresenterTableRow(props) {
        _classCallCheck(this, DisciplineResultsPresenterTableRow);

        var _this2 = _possibleConstructorReturn(this, _React$Component2.call(this, props));

        _this2.state = {
            active: false
        };
        return _this2;
    }

    DisciplineResultsPresenterTableRow.prototype.toggleActive = function toggleActive() {
        this.setState({
            active: !this.state.active
        });
    };

    DisciplineResultsPresenterTableRow.prototype.render = function render() {
        var p = this.props.participant;
        return React.createElement(
            "table",
            _extends({ className: "row" + (this.state.active ? " active" : "")
            }, (0, _tablet_components.onTouchEndOrClick)(this.toggleActive.bind(this))),
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "td",
                        { className: "place", rowSpan: "3" },
                        this.props.place === null ? "" : React.createElement(
                            "div",
                            null,
                            this.props.place,
                            React.createElement(
                                "div",
                                { className: "place-label" },
                                (0, _loader._)("presenter.labels.place")
                            )
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "number" },
                        p.number
                    ),
                    React.createElement(
                        "td",
                        { className: "name" },
                        p.name
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "td",
                        { className: "club", colSpan: "2" },
                        p.club.name
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "td",
                        { className: "coaches", colSpan: "2" },
                        p.coaches
                    )
                )
            )
        );
    };

    return DisciplineResultsPresenterTableRow;
}(React.Component);

var DisciplineResultsPresenterTable = exports.DisciplineResultsPresenterTable = function (_React$Component3) {
    _inherits(DisciplineResultsPresenterTable, _React$Component3);

    function DisciplineResultsPresenterTable() {
        _classCallCheck(this, DisciplineResultsPresenterTable);

        return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));
    }

    DisciplineResultsPresenterTable.prototype.renderRowHeader = function renderRowHeader(prev_row, next_row) {
        var need_render = typeof prev_row === "undefined" || prev_row.run.tour.id !== next_row.run.tour.id;
        if (!need_render) {
            return null;
        }
        return React.createElement(
            "div",
            { className: "tour-name", key: "H" + next_row.run.id },
            next_row.run.tour.name
        );
    };

    DisciplineResultsPresenterTable.prototype.renderRow = function renderRow(row) {
        return React.createElement(DisciplineResultsPresenterTableRow, { key: "R" + row.run.id,
            participant: row.run.participant,
            place: row.place });
    };

    DisciplineResultsPresenterTable.prototype.renderRows = function renderRows() {
        var result = [];
        var table = this.props.table;
        for (var i = table.length - 1; i >= 0; --i) {
            var header = this.renderRowHeader(table[i + 1], table[i]);
            header && result.push(header);
            result.push(this.renderRow(table[i]));
        }
        return result;
    };

    DisciplineResultsPresenterTable.prototype.render = function render() {
        return React.createElement(
            "div",
            null,
            this.renderRows()
        );
    };

    return DisciplineResultsPresenterTable;
}(React.Component);

var DisciplineResultsScreenOperatorTableRow = function (_React$Component4) {
    _inherits(DisciplineResultsScreenOperatorTableRow, _React$Component4);

    function DisciplineResultsScreenOperatorTableRow() {
        _classCallCheck(this, DisciplineResultsScreenOperatorTableRow);

        return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));
    }

    DisciplineResultsScreenOperatorTableRow.prototype.render = function render() {
        var p = this.props.participant;
        return React.createElement(
            "table",
            _extends({ className: "row" + (this.props.selected ? " selected" : "")
            }, (0, _tablet_components.onTouchEndOrClick)(this.props.onClick)),
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "td",
                        { className: "place", rowSpan: "2" },
                        this.props.place === null ? "" : React.createElement(
                            "div",
                            null,
                            this.props.place,
                            React.createElement(
                                "div",
                                { className: "place-label" },
                                (0, _loader._)("presenter.labels.place")
                            )
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "number" },
                        p.number
                    ),
                    React.createElement(
                        "td",
                        { className: "name" },
                        p.name
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "td",
                        { className: "club", colSpan: "2" },
                        p.club.name
                    )
                )
            )
        );
    };

    return DisciplineResultsScreenOperatorTableRow;
}(React.Component);

var DisciplineResultsScreenOperatorTable = exports.DisciplineResultsScreenOperatorTable = function (_React$Component5) {
    _inherits(DisciplineResultsScreenOperatorTable, _React$Component5);

    function DisciplineResultsScreenOperatorTable() {
        _classCallCheck(this, DisciplineResultsScreenOperatorTable);

        return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));
    }

    DisciplineResultsScreenOperatorTable.prototype.renderRowHeader = function renderRowHeader(prev_row, next_row) {
        var need_render = typeof prev_row === "undefined" || prev_row.run.tour.id !== next_row.run.tour.id;
        if (!need_render) {
            return null;
        }
        return React.createElement(
            "div",
            { className: "tour-name", key: "H" + next_row.run.id },
            next_row.run.tour.name
        );
    };

    DisciplineResultsScreenOperatorTable.prototype.renderRow = function renderRow(row, place) {
        var _this6 = this;

        return React.createElement(DisciplineResultsScreenOperatorTableRow, {
            key: "R" + row.run.id,
            participant: row.run.participant,
            place: row.place,
            onClick: function onClick() {
                return _this6.props.onPlaceSelect(place);
            },
            selected: this.props.selectedPlace !== null && place >= this.props.selectedPlace });
    };

    DisciplineResultsScreenOperatorTable.prototype.renderRows = function renderRows() {
        var result = [];
        var table = this.props.table;
        for (var i = table.length - 1; i >= 0; --i) {
            var header = this.renderRowHeader(table[i + 1], table[i]);
            header && result.push(header);
            result.push(this.renderRow(table[i], i + 1));
        }
        return result;
    };

    DisciplineResultsScreenOperatorTable.prototype.render = function render() {
        return React.createElement(
            "div",
            null,
            this.renderRows()
        );
    };

    return DisciplineResultsScreenOperatorTable;
}(React.Component);

},{"i10n/loader":27,"ui/tablet_components":35}],6:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.TourAdminScoreCell = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _loader = require("i10n/loader");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BaseScoreInput = function (_React$Component) {
    _inherits(BaseScoreInput, _React$Component);

    function BaseScoreInput() {
        _classCallCheck(this, BaseScoreInput);

        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    BaseScoreInput.prototype.componentDidMount = function componentDidMount() {
        ReactDOM.findDOMNode(this).querySelectorAll("input")[0].select();
        this.onMount.apply(this, arguments);
    };

    BaseScoreInput.prototype.onMount = function onMount() {};

    BaseScoreInput.prototype.onChange = function onChange(key, event) {
        if ((typeof key === "undefined" ? "undefined" : _typeof(key)) !== "object") {
            key = [key];
        }
        var score = this.serialize();
        var score_inner = score;
        for (var idx = 0; idx < key.length - 1; ++idx) {
            score_inner = score_inner[key[idx]];
        }
        score_inner[key[key.length - 1]] = event.target.type === "checkbox" ? event.target.indeterminate ? null : event.target.checked : event.target.value;
        this.props.updateValue(score);
    };

    BaseScoreInput.prototype.onKeyUp = function onKeyUp(event) {
        if (event.keyCode === 27) {
            // Esc
            this.props.stopEditing();
        }
    };

    BaseScoreInput.prototype.isEmpty = function isEmpty(value) {
        return value === "" || value === null;
    };

    BaseScoreInput.prototype.onSubmit = function onSubmit(e) {
        e.preventDefault();
        this.props.submitValue(this.serialize());
    };

    BaseScoreInput.prototype.renderButtons = function renderButtons() {
        if (this.props.readOnly) {
            return React.createElement(
                "button",
                { className: "btn btn-primary", type: "button", onClick: this.props.stopEditing },
                (0, _loader._)("global.buttons.close")
            );
        }
        return React.createElement(
            "div",
            null,
            React.createElement(
                "button",
                { className: "btn btn-primary", type: "submit" },
                (0, _loader._)("global.buttons.submit")
            ),
            " ",
            React.createElement(
                "button",
                { className: "btn btn-primary", type: "button", onClick: this.props.stopEditing },
                (0, _loader._)("global.buttons.discard")
            ),
            React.createElement(ConfirmationButton, {
                judge_role: this.props.discipline_judge.role,
                confirmed: this.props.confirmed,
                toggleConfirmation: this.props.toggleConfirmation,
                onKeyUp: this.onKeyUp.bind(this) })
        );
    };

    BaseScoreInput.prototype.render = function render() {
        return React.createElement(
            "form",
            { onSubmit: this.onSubmit.bind(this), className: "form-score-input" },
            this.renderTable(),
            this.renderButtons()
        );
    };

    return BaseScoreInput;
}(React.Component);

var DanceScoreInput = function (_BaseScoreInput) {
    _inherits(DanceScoreInput, _BaseScoreInput);

    function DanceScoreInput() {
        _classCallCheck(this, DanceScoreInput);

        return _possibleConstructorReturn(this, _BaseScoreInput.apply(this, arguments));
    }

    DanceScoreInput.prototype.renderTable = function renderTable() {
        return React.createElement(
            "table",
            null,
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        "FW:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.fw_woman,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "fw_woman"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    ),
                    React.createElement(
                        "th",
                        null,
                        "FM:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.fw_man,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "fw_man"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        "DF:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.dance_figs,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "dance_figs"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    ),
                    React.createElement(
                        "th",
                        null,
                        "C:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.composition,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "composition"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        "SM:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.small_mistakes,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "small_mistakes"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    ),
                    React.createElement(
                        "th",
                        null,
                        "BM:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.big_mistakes,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "big_mistakes"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    )
                )
            )
        );
    };

    DanceScoreInput.prototype.serialize = function serialize() {
        return {
            fw_man: !this.isEmpty(this.props.score.fw_man) ? parseInt(this.props.score.fw_man) || 0 : null,
            fw_woman: !this.isEmpty(this.props.score.fw_woman) ? parseInt(this.props.score.fw_woman) || 0 : null,
            dance_figs: !this.isEmpty(this.props.score.dance_figs) ? parseFloat(this.props.score.dance_figs) || 0 : null,
            composition: !this.isEmpty(this.props.score.composition) ? parseFloat(this.props.score.composition) || 0 : null,
            small_mistakes: !this.isEmpty(this.props.score.small_mistakes) ? parseInt(this.props.score.small_mistakes) || 0 : null,
            big_mistakes: !this.isEmpty(this.props.score.big_mistakes) ? parseInt(this.props.score.big_mistakes) || 0 : null
        };
    };

    return DanceScoreInput;
}(BaseScoreInput);

var AcroScoreInput = function (_BaseScoreInput2) {
    _inherits(AcroScoreInput, _BaseScoreInput2);

    function AcroScoreInput() {
        _classCallCheck(this, AcroScoreInput);

        return _possibleConstructorReturn(this, _BaseScoreInput2.apply(this, arguments));
    }

    AcroScoreInput.prototype.renderTable = function renderTable() {
        var fields = this.props.score.reductions.map(function (value, idx) {
            return [React.createElement(
                "th",
                { key: "H" + idx },
                "A",
                idx + 1,
                ":"
            ), React.createElement(
                "td",
                { key: "V" + idx },
                React.createElement("input", {
                    type: "text",
                    value: this.props.score.reductions[idx],
                    readOnly: this.props.readOnly,
                    onChange: this.onChange.bind(this, ["reductions", idx]),
                    onKeyUp: this.onKeyUp.bind(this) })
            )];
        }.bind(this));
        fields.push([React.createElement(
            "th",
            { key: "HFD" },
            "FD:"
        ), React.createElement(
            "td",
            { key: "VFD" },
            React.createElement("input", {
                type: "text",
                value: this.props.score.mistakes,
                readOnly: this.props.readOnly,
                onChange: this.onChange.bind(this, "mistakes"),
                onKeyUp: this.onKeyUp.bind(this) })
        )]);
        var rows = [];
        for (var idx = 0; idx < fields.length; idx += 2) {
            rows.push(React.createElement(
                "tr",
                { key: "R" + idx },
                fields.slice(idx, idx + 2)
            ));
        }
        return React.createElement(
            "table",
            null,
            React.createElement(
                "tbody",
                null,
                rows
            )
        );
    };

    AcroScoreInput.prototype.serialize = function serialize() {
        return {
            reductions: this.props.score.reductions.map(function (reduction) {
                return !this.isEmpty(reduction) ? parseInt(reduction) || 0 : null;
            }.bind(this)),
            mistakes: parseInt(this.props.score.mistakes) || 0
        };
    };

    return AcroScoreInput;
}(BaseScoreInput);

var FormationScoreInput = function (_BaseScoreInput3) {
    _inherits(FormationScoreInput, _BaseScoreInput3);

    function FormationScoreInput() {
        _classCallCheck(this, FormationScoreInput);

        return _possibleConstructorReturn(this, _BaseScoreInput3.apply(this, arguments));
    }

    FormationScoreInput.prototype.renderTable = function renderTable() {
        return React.createElement(
            "table",
            null,
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        "DT:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.dance_tech,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "dance_tech"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    ),
                    React.createElement(
                        "th",
                        null,
                        "DF:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.dance_figs,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "dance_figs"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        "I:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.impression,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "impression"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    ),
                    React.createElement(
                        "th",
                        null,
                        "M:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.small_mistakes,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "small_mistakes"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    )
                )
            )
        );
    };

    FormationScoreInput.prototype.serialize = function serialize() {
        return {
            dance_tech: !this.isEmpty(this.props.score.dance_tech) ? parseFloat(this.props.score.dance_tech) || 0 : null,
            dance_figs: !this.isEmpty(this.props.score.dance_figs) ? parseFloat(this.props.score.dance_figs) || 0 : null,
            impression: !this.isEmpty(this.props.score.impression) ? parseFloat(this.props.score.impression) || 0 : null,
            mistakes: !this.isEmpty(this.props.score.mistakes) ? parseInt(this.props.score.mistakes) || 0 : null
        };
    };

    return FormationScoreInput;
}(BaseScoreInput);

var FormationAcroScoreInput = function (_BaseScoreInput4) {
    _inherits(FormationAcroScoreInput, _BaseScoreInput4);

    function FormationAcroScoreInput() {
        _classCallCheck(this, FormationAcroScoreInput);

        return _possibleConstructorReturn(this, _BaseScoreInput4.apply(this, arguments));
    }

    FormationAcroScoreInput.prototype.renderTable = function renderTable() {
        return React.createElement(
            "table",
            null,
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        "A:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.acrobatics,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "acrobatics"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    ),
                    React.createElement(
                        "th",
                        null,
                        "DT:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.dance_tech,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "dance_tech"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        "DF:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.dance_figs,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "dance_figs"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    ),
                    React.createElement(
                        "th",
                        null,
                        "I:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.impression,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "impression"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        "SM:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.small_mistakes,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "small_mistakes"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    ),
                    React.createElement(
                        "th",
                        null,
                        "BM:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.small_mistakes,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "small_mistakes"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    )
                )
            )
        );
    };

    FormationAcroScoreInput.prototype.serialize = function serialize() {
        return {
            acrobatics: !this.isEmpty(this.props.score.acrobatics) ? parseFloat(this.props.score.acrobatics) || 0 : null,
            dance_tech: !this.isEmpty(this.props.score.dance_tech) ? parseFloat(this.props.score.dance_tech) || 0 : null,
            dance_figs: !this.isEmpty(this.props.score.dance_figs) ? parseFloat(this.props.score.dance_figs) || 0 : null,
            impression: !this.isEmpty(this.props.score.impression) ? parseFloat(this.props.score.impression) || 0 : null,
            small_mistakes: !this.isEmpty(this.props.score.small_mistakes) ? parseInt(this.props.score.small_mistakes) || 0 : null,
            big_mistakes: !this.isEmpty(this.props.score.big_mistakes) ? parseInt(this.props.score.big_mistakes) || 0 : null
        };
    };

    return FormationAcroScoreInput;
}(BaseScoreInput);

var SimplifiedScoreInput = function (_BaseScoreInput5) {
    _inherits(SimplifiedScoreInput, _BaseScoreInput5);

    function SimplifiedScoreInput() {
        _classCallCheck(this, SimplifiedScoreInput);

        return _possibleConstructorReturn(this, _BaseScoreInput5.apply(this, arguments));
    }

    SimplifiedScoreInput.prototype.renderTable = function renderTable() {
        return React.createElement(
            "table",
            null,
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        "S:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.points,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "points"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    )
                )
            )
        );
    };

    SimplifiedScoreInput.prototype.serialize = function serialize() {
        return {
            points: !this.isEmpty(this.props.score.points) ? parseInt(this.props.score.points) || 0 : null
        };
    };

    return SimplifiedScoreInput;
}(BaseScoreInput);

var HeadScoreInput = function (_BaseScoreInput6) {
    _inherits(HeadScoreInput, _BaseScoreInput6);

    function HeadScoreInput() {
        _classCallCheck(this, HeadScoreInput);

        return _possibleConstructorReturn(this, _BaseScoreInput6.apply(this, arguments));
    }

    HeadScoreInput.prototype.renderTable = function renderTable() {
        return React.createElement(
            "table",
            null,
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        "P:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.penalty,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "penalty"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    ),
                    React.createElement(
                        "th",
                        null,
                        "NT:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "checkbox",
                            checked: this.props.score.nexttour,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "nexttour"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    )
                )
            )
        );
    };

    HeadScoreInput.prototype.serialize = function serialize() {
        return {
            penalty: parseInt(this.props.score.penalty) || 0,
            nexttour: this.props.score.nexttour
        };
    };

    return HeadScoreInput;
}(BaseScoreInput);

var TechScoreInput = function (_BaseScoreInput7) {
    _inherits(TechScoreInput, _BaseScoreInput7);

    function TechScoreInput() {
        _classCallCheck(this, TechScoreInput);

        return _possibleConstructorReturn(this, _BaseScoreInput7.apply(this, arguments));
    }

    TechScoreInput.prototype.renderTable = function renderTable() {
        var _this9 = this;

        return React.createElement(
            "table",
            null,
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        "JS:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "text",
                            value: this.props.score.jump_steps,
                            readOnly: this.props.readOnly,
                            onChange: this.onChange.bind(this, "jump_steps"),
                            onKeyUp: this.onKeyUp.bind(this) })
                    ),
                    React.createElement(
                        "th",
                        null,
                        "TV:"
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement("input", {
                            type: "checkbox",
                            ref: "cb",
                            checked: !!this.props.score.timing_violation,
                            onChange: function onChange(event) {},
                            onKeyUp: this.onKeyUp.bind(this),
                            onClick: function onClick(event) {
                                if (_this9.props.readOnly) {
                                    event.preventDefault();
                                    return;
                                }
                                var cb = event.target;
                                if (cb.readOnly) {
                                    cb.checked = cb.readOnly = false;
                                } else if (!cb.checked) {
                                    cb.readOnly = cb.indeterminate = true;
                                }
                                _this9.onChange("timing_violation", event);
                            } })
                    )
                )
            )
        );
    };

    TechScoreInput.prototype.onMount = function onMount() {
        var node = this.refs.cb;
        node.readOnly = this.props.score.timing_violation === null;
        node.indeterminate = this.props.score.timing_violation === null;
    };

    TechScoreInput.prototype.serialize = function serialize() {
        return {
            jump_steps: parseInt(this.props.score.jump_steps) || 0,
            timing_violation: this.props.score.timing_violation
        };
    };

    return TechScoreInput;
}(BaseScoreInput);

var ConfirmationButton = function (_React$Component2) {
    _inherits(ConfirmationButton, _React$Component2);

    function ConfirmationButton() {
        _classCallCheck(this, ConfirmationButton);

        return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));
    }

    ConfirmationButton.prototype.render = function render() {
        if (this.props.judge_role === "head_judge") {
            return null;
        }
        return React.createElement(
            "button",
            {
                className: "btn btn-sm btn-confirmation" + (this.props.confirmed ? " btn-danger" : " btn-success"),
                type: "button",
                onClick: this.props.toggleConfirmation,
                onKeyUp: this.props.onKeyUp },
            this.props.confirmed ? (0, _loader._)("admin.buttons.unconfirm_score") : (0, _loader._)("admin.buttons.confirm_score")
        );
    };

    return ConfirmationButton;
}(React.Component);

var TourAdminScoreInput = function (_React$Component3) {
    _inherits(TourAdminScoreInput, _React$Component3);

    function TourAdminScoreInput() {
        _classCallCheck(this, TourAdminScoreInput);

        return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));
    }

    TourAdminScoreInput.prototype.render = function render() {
        switch (this.props.discipline_judge.role) {
            case "acro_judge":
                if (this.props.scoring_system_name === "rosfarr.am_final_fw") {
                    return React.createElement(DanceScoreInput, this.props);
                }
                return React.createElement(AcroScoreInput, this.props);
            case "dance_judge":
                if (this.props.scoring_system_name === "rosfarr.formation") {
                    return React.createElement(FormationScoreInput, this.props);
                }
                if (this.props.scoring_system_name === "rosfarr.formation_acro") {
                    return React.createElement(FormationAcroScoreInput, this.props);
                }
                if (this.props.scoring_system_name === "rosfarr.simplified") {
                    return React.createElement(SimplifiedScoreInput, this.props);
                }
                return React.createElement(DanceScoreInput, this.props);
            case "head_judge":
                return React.createElement(HeadScoreInput, this.props);
            case "tech_judge":
                return React.createElement(TechScoreInput, this.props);
            default:
                console.log("Unknown judge role", this.props.discipline_judge.role);
                return null;
        }
    };

    return TourAdminScoreInput;
}(React.Component);

var TourAdminScoreCell = exports.TourAdminScoreCell = function (_React$Component4) {
    _inherits(TourAdminScoreCell, _React$Component4);

    function TourAdminScoreCell() {
        _classCallCheck(this, TourAdminScoreCell);

        return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));
    }

    TourAdminScoreCell.prototype.render = function render() {
        if (!this.props.editing) {
            if (this.props.discipline_judge.role === "head_judge" && this.props.value.raw_data.nexttour) {
                return React.createElement(
                    "div",
                    { onClick: this.props.startEditing },
                    "[",
                    this.props.value.total_score.toFixed(2),
                    "]"
                );
            }
            if (this.props.discipline_judge.role === "tech_judge") {
                var tv_str = this.props.value.raw_data.timing_violation === null ? " ?" : this.props.value.raw_data.timing_violation ? " ✗" : " ✓";
                return React.createElement(
                    "div",
                    { onClick: this.props.startEditing },
                    this.props.value.raw_data.jump_steps + tv_str
                );
            }
            return React.createElement(
                "div",
                { onClick: this.props.startEditing },
                this.props.value.total_score.toFixed(2)
            );
        } else {
            return React.createElement(TourAdminScoreInput, {
                readOnly: this.props.readOnly,
                score: this.props.value.raw_data,
                confirmed: this.props.confirmed,
                discipline_judge: this.props.discipline_judge,
                scoring_system_name: this.props.scoring_system_name,
                stopEditing: this.props.stopEditing,
                updateValue: this.props.updateValue,
                submitValue: this.props.submitValue,
                toggleConfirmation: this.props.toggleConfirmation });
        }
    };

    return TourAdminScoreCell;
}(React.Component);

},{"i10n/loader":27}],7:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.TourResultsTable = exports.TourResultsSemiVerboseTable = exports.TourResultsVerboseTable = undefined;

var _loader = require("i10n/loader");

var _base = require("common/rosfarr/base");

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function __() {
    var args = [];
    for (var idx = 1; idx < arguments.length; ++idx) {
        args.push(arguments[idx]);
    }
    return _loader._.apply(undefined, ["scoring_systems.rosfarr." + arguments[0]].concat(args));
}

var TourResultsVerboseTableColumnWidths = function () {
    function TourResultsVerboseTableColumnWidths(n_judges) {
        _classCallCheck(this, TourResultsVerboseTableColumnWidths);

        this.judge_width = Math.round(70 / n_judges);
        this.place_width = 7;
        this.info_width = 100 - this.judge_width * n_judges - this.place_width;
    }

    TourResultsVerboseTableColumnWidths.prototype.genPlaceStyle = function genPlaceStyle() {
        return {
            width: this.place_width + "%"
        };
    };

    TourResultsVerboseTableColumnWidths.prototype.genInfoStyle = function genInfoStyle() {
        return {
            width: this.info_width + "%"
        };
    };

    TourResultsVerboseTableColumnWidths.prototype.genJudgeStyle = function genJudgeStyle() {
        return {
            width: this.judge_width + "%"
        };
    };

    return TourResultsVerboseTableColumnWidths;
}();

var TourResultsVerboseTableRow = function (_React$Component) {
    _inherits(TourResultsVerboseTableRow, _React$Component);

    function TourResultsVerboseTableRow() {
        _classCallCheck(this, TourResultsVerboseTableRow);

        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    TourResultsVerboseTableRow.prototype.formatScore = function formatScore(score, template) {
        if (!template) {
            template = "$";
        }
        if (score === null) {
            return React.createElement(
                "span",
                null,
                "—"
            );
        }
        return template.replace("$", score).replace("@", score.toFixed(1));
    };

    TourResultsVerboseTableRow.prototype.renderFormationScore = function renderFormationScore(score, additiolal_data) {
        return React.createElement(
            "table",
            { className: "score-breakdown" },
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.dt"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.dance_tech, "@")
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.df"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.dance_figs, "@")
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.i"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.impression, "@")
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.m"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.mistakes)
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.t"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "total-score" },
                        React.createElement(
                            "p",
                            null,
                            score.data.total_score
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.p"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "total-score" },
                        React.createElement(
                            "p",
                            null,
                            additiolal_data.places[score.id]
                        )
                    )
                )
            )
        );
    };

    TourResultsVerboseTableRow.prototype.renderFormationAcroScore = function renderFormationAcroScore(score, additiolal_data) {
        return React.createElement(
            "table",
            { className: "score-breakdown" },
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.a"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.acrobatics, "@")
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.dt"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.dance_tech, "@")
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.df"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.dance_figs, "@")
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.i"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.impression, "@")
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.sm"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.small_mistakes)
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.bm"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.big_mistakes)
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.t"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "total-score" },
                        React.createElement(
                            "p",
                            null,
                            score.data.total_score
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.p"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "total-score" },
                        React.createElement(
                            "p",
                            null,
                            additiolal_data.places[score.id]
                        )
                    )
                )
            )
        );
    };

    TourResultsVerboseTableRow.prototype.renderDanceScore = function renderDanceScore(score) {
        return React.createElement(
            "table",
            { className: "score-breakdown" },
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.fw"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.fw_woman, "-$%")
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.fm"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.fw_man, "-$%")
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.df"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.dance_figs)
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.c"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.composition)
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.sm"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.small_mistakes)
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.bm"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.big_mistakes)
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.t"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "total-score" },
                        React.createElement(
                            "p",
                            null,
                            score.data.total_score
                        )
                    )
                )
            )
        );
    };

    TourResultsVerboseTableRow.prototype.renderAcroScore = function renderAcroScore(score) {
        var acro_scores = score.data.raw_data.reductions.map(function (score, idx) {
            return React.createElement(
                "tr",
                { key: idx },
                React.createElement(
                    "th",
                    null,
                    React.createElement(
                        "p",
                        null,
                        __("results.breakdown.acro_n", idx + 1),
                        ":"
                    )
                ),
                React.createElement(
                    "td",
                    null,
                    React.createElement(
                        "p",
                        null,
                        this.formatScore(score, "-$%")
                    )
                )
            );
        }.bind(this));
        return React.createElement(
            "table",
            { className: "score-breakdown" },
            React.createElement(
                "tbody",
                null,
                acro_scores,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.fd"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        null,
                        React.createElement(
                            "p",
                            null,
                            this.formatScore(score.data.raw_data.mistakes)
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        React.createElement(
                            "p",
                            null,
                            __("results.breakdown.t"),
                            ":"
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "total-score" },
                        React.createElement(
                            "p",
                            null,
                            score.data.total_score
                        )
                    )
                )
            )
        );
    };

    TourResultsVerboseTableRow.prototype.renderScore = function renderScore(judge, score, additiolal_data) {
        switch ((0, _base.getScoringType)(judge, this.props.tour.scoring_system_name)) {
            case "dance":
                return this.renderDanceScore(score, additiolal_data);
            case "acro":
                return this.renderAcroScore(score, additiolal_data);
            case "formation":
                return this.renderFormationScore(score, additiolal_data);
            case "formation_acro":
                return this.renderFormationAcroScore(score, additiolal_data);
            default:
                return React.createElement(
                    "p",
                    { className: "text-center" },
                    score.data.total_score.toFixed(2)
                );
        }
    };

    TourResultsVerboseTableRow.prototype.renderParticipantInfo = function renderParticipantInfo() {
        return React.createElement(
            "div",
            null,
            React.createElement(
                "p",
                null,
                React.createElement(
                    "strong",
                    null,
                    (0, _loader._)("global.phrases.participant_n", this.props.run.participant.number, null, this.props.run.participant.sportsmen.length)
                )
            ),
            (0, _base.getParticipantDisplay)(this.props.run.participant)
        );
    };

    TourResultsVerboseTableRow.prototype.renderHeadJudgePenalty = function renderHeadJudgePenalty() {
        if (!this.props.run.performed) {
            return null;
        }
        return React.createElement(
            "p",
            null,
            React.createElement(
                "strong",
                null,
                __("results.labels.penalty"),
                ": "
            ),
            this.props.head_judge_score ? this.props.head_judge_score.data.total_score : React.createElement(
                "span",
                null,
                "—"
            )
        );
    };

    TourResultsVerboseTableRow.prototype.renderAcroTable = function renderAcroTable() {
        if (!this.props.run.performed) {
            return null;
        }
        var has_acro_overrides = false;
        var render_acro_table = this.props.tour.scoring_system_name === "rosfarr.acro" || this.props.tour.scoring_system_name === "rosfarr.am_final_acro";
        if (!render_acro_table) {
            return null;
        }
        this.props.run.acrobatics.forEach(function (acro) {
            if (acro.score !== acro.original_score) {
                has_acro_overrides = true;
            }
        });
        if (this.props.run.acrobatics.length === 0) {
            return null;
        }
        var acro_cell_width = 100 / this.props.run.acrobatics.length + "%";
        return React.createElement(
            "div",
            null,
            React.createElement(
                "p",
                null,
                React.createElement(
                    "strong",
                    null,
                    has_acro_overrides ? __("results.labels.acrobatics_verbose") : __("results.labels.acrobatics"),
                    ":"
                )
            ),
            React.createElement(
                "table",
                { className: "acro-table" },
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        this.props.run.acrobatics.map(function (acro, idx) {
                            return React.createElement(
                                "td",
                                { key: idx, style: { width: acro_cell_width } },
                                React.createElement(
                                    "p",
                                    { className: "text-center" },
                                    acro.original_score.toFixed(1)
                                )
                            );
                        })
                    ),
                    has_acro_overrides ? React.createElement(
                        "tr",
                        null,
                        this.props.run.acrobatics.map(function (acro, idx) {
                            return React.createElement(
                                "td",
                                { key: idx, style: { width: acro_cell_width } },
                                React.createElement(
                                    "p",
                                    { className: "text-center" },
                                    acro.score.toFixed(1)
                                )
                            );
                        })
                    ) : null
                )
            )
        );
    };

    TourResultsVerboseTableRow.prototype.renderAmClassFwScore = function renderAmClassFwScore() {
        if (this.props.tour.scoring_system_name !== "rosfarr.am_final_acro") {
            return null;
        }
        return React.createElement(
            "p",
            null,
            React.createElement(
                "strong",
                null,
                __("results.labels.fw_score")
            ),
            ": ",
            this.props.run.verbose_total_score.previous_tour.primary_score.toFixed(2) + " / " + this.props.run.verbose_total_score.previous_tour.secondary_score.toFixed(2),
            " "
        );
    };

    TourResultsVerboseTableRow.prototype.renderAmClassAcroScore = function renderAmClassAcroScore() {
        if (!this.props.run.performed) {
            return null;
        }
        if (this.props.tour.scoring_system_name !== "rosfarr.am_final_acro") {
            return null;
        }
        return React.createElement(
            "p",
            null,
            React.createElement(
                "strong",
                null,
                __("results.labels.acro_score")
            ),
            ": ",
            this.props.run.verbose_total_score.current_tour.primary_score.toFixed(2) + " / " + this.props.run.verbose_total_score.current_tour.secondary_score.toFixed(2),
            " "
        );
    };

    TourResultsVerboseTableRow.prototype.renderTotalScore = function renderTotalScore() {
        if (!this.props.run.performed) {
            return null;
        }
        if (this.props.tour.scoring_system_name === "rosfarr.formation") {
            return null;
        }
        if (this.props.tour.scoring_system_name === "rosfarr.formation_acro") {
            return null;
        }
        return React.createElement(
            "p",
            null,
            React.createElement(
                "strong",
                null,
                __("results.labels.total_score"),
                ": ",
                this.props.run.total_score
            )
        );
    };

    TourResultsVerboseTableRow.prototype.renderNotPerformedLabel = function renderNotPerformedLabel() {
        if (this.props.run.performed) {
            return null;
        }
        return React.createElement(
            "p",
            null,
            React.createElement(
                "em",
                null,
                __("results.labels.not_performed")
            )
        );
    };

    TourResultsVerboseTableRow.prototype.renderNextTourLabel = function renderNextTourLabel() {
        if (!this.props.has_next_tour) {
            return null;
        }
        React.createElement(
            "p",
            null,
            React.createElement(
                "strong",
                null,
                __("results.labels.next_tour"),
                ": "
            ),
            this.props.results_info.advances ? (0, _loader._)("global.labels.yes") : (0, _loader._)("global.labels.no")
        );
    };

    TourResultsVerboseTableRow.prototype.renderInfoBlock = function renderInfoBlock() {
        return React.createElement(
            "td",
            { className: "info-block", style: this.props.widths.genInfoStyle() },
            this.renderParticipantInfo(),
            this.renderHeadJudgePenalty(),
            this.renderAcroTable(),
            this.renderAmClassFwScore(),
            this.renderAmClassAcroScore(),
            this.renderTotalScore(),
            this.renderNotPerformedLabel(),
            this.renderNextTourLabel()
        );
    };

    TourResultsVerboseTableRow.prototype.render = function render() {
        var _this2 = this;

        var judges_scores = this.props.scores.map(function (score, idx) {
            return React.createElement(
                "td",
                { key: idx, style: _this2.props.widths.genJudgeStyle() },
                _this2.renderScore(_this2.props.discipline_judges[idx], score, _this2.props.results_info.additional_data)
            );
        });
        if (!this.props.run.performed) {
            judges_scores = this.props.scores.map(function (score, idx) {
                return React.createElement(
                    "td",
                    { style: _this2.props.widths.genJudgeStyle(), key: idx },
                    React.createElement(
                        "p",
                        { className: "text-center" },
                        "—"
                    )
                );
            });
        }
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                { className: "place", style: this.props.widths.genPlaceStyle() },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    this.props.results_info.place
                )
            ),
            this.renderInfoBlock(),
            judges_scores
        );
    };

    return TourResultsVerboseTableRow;
}(React.Component);

var TourResultsVerboseTable = exports.TourResultsVerboseTable = function (_React$Component2) {
    _inherits(TourResultsVerboseTable, _React$Component2);

    function TourResultsVerboseTable() {
        _classCallCheck(this, TourResultsVerboseTable);

        return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));
    }

    TourResultsVerboseTable.prototype.render = function render() {
        var tour_wrapper = new _base.TourScoresWrapper(this.props.tour, this.props.results);
        var discipline_judges = tour_wrapper.getDisciplineJudgesByRoles("acro_judge", "dance_judge");
        var scores_table = tour_wrapper.getScoresTableByRoles("acro_judge", "dance_judge");
        var head_judge_scores = tour_wrapper.getScoresTableByRoles("head_judge").map(function (row) {
            return row[0];
        });
        var results_info = tour_wrapper.getResultsInfo();
        var runs = tour_wrapper.getRuns();
        var has_next_tour = this.props.tour.next_tour_id !== null;
        var rows = [];
        var widths = new TourResultsVerboseTableColumnWidths(discipline_judges.length);
        for (var idx = 0; idx < runs.length; ++idx) {
            rows.push(React.createElement(TourResultsVerboseTableRow, {
                key: runs[idx].id,
                tour: this.props.tour,
                run: runs[idx],
                scores: scores_table[idx],
                widths: widths,
                head_judge_score: head_judge_scores[idx],
                results_info: results_info[idx],
                discipline_judges: discipline_judges,
                has_next_tour: has_next_tour }));
        };
        var judges_header = discipline_judges.map(function (dj) {
            return React.createElement(
                "th",
                { key: dj.id, width: widths.genJudgeStyle() },
                React.createElement(
                    "p",
                    null,
                    dj.judge.number
                )
            );
        });
        return React.createElement(
            "table",
            { className: "bordered-table", style: { width: "100%" } },
            React.createElement(
                "thead",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        { className: "place", width: widths.genPlaceStyle() },
                        React.createElement(
                            "p",
                            null,
                            __("results.labels.place")
                        )
                    ),
                    React.createElement(
                        "th",
                        { className: "participant", width: widths.genInfoStyle() },
                        React.createElement(
                            "p",
                            null,
                            __("results.labels.info")
                        )
                    ),
                    judges_header
                )
            ),
            React.createElement(
                "tbody",
                null,
                rows
            )
        );
    };

    return TourResultsVerboseTable;
}(React.Component);

var TourResultsSemiVerboseTableColumnWidths = function () {
    function TourResultsSemiVerboseTableColumnWidths(n_judges) {
        _classCallCheck(this, TourResultsSemiVerboseTableColumnWidths);

        this.judge_width = Math.round(55 / n_judges);
        this.total_score_width = 14;
        this.place_width = 6;
        this.number_width = 3;
        this.name_width = 100 - this.judge_width * n_judges - this.total_score_width - this.place_width - this.number_width;
    }

    TourResultsSemiVerboseTableColumnWidths.prototype.genPlaceStyle = function genPlaceStyle() {
        return {
            width: this.place_width + "%"
        };
    };

    TourResultsSemiVerboseTableColumnWidths.prototype.genNumberStyle = function genNumberStyle() {
        return {
            width: this.number_width + "%"
        };
    };

    TourResultsSemiVerboseTableColumnWidths.prototype.genNameStyle = function genNameStyle() {
        return {
            width: this.name_width + "%"
        };
    };

    TourResultsSemiVerboseTableColumnWidths.prototype.genTotalScoreStyle = function genTotalScoreStyle() {
        return {
            width: this.total_score_width + "%"
        };
    };

    TourResultsSemiVerboseTableColumnWidths.prototype.genJudgeStyle = function genJudgeStyle() {
        return {
            width: this.judge_width + "%"
        };
    };

    return TourResultsSemiVerboseTableColumnWidths;
}();

var TourResultsSemiVerboseTableRow = function (_React$Component3) {
    _inherits(TourResultsSemiVerboseTableRow, _React$Component3);

    function TourResultsSemiVerboseTableRow() {
        _classCallCheck(this, TourResultsSemiVerboseTableRow);

        return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));
    }

    TourResultsSemiVerboseTableRow.prototype.renderFormationScore = function renderFormationScore(score, additiolal_data) {
        return React.createElement(
            "p",
            { className: "text-center" },
            React.createElement(
                "strong",
                null,
                additiolal_data.places[score.id]
            ),
            " (",
            score.data.total_score.toFixed(1),
            ")"
        );
    };

    TourResultsSemiVerboseTableRow.prototype.renderScore = function renderScore(judge, score, additiolal_data) {
        if (judge.role === "dance_judge") {
            if (this.props.tour.scoring_system_name === "rosfarr.formation" || this.props.tour.scoring_system_name === "rosfarr.formation_acro") {
                return this.renderFormationScore(score, additiolal_data);
            }
        }
        return React.createElement(
            "p",
            { className: "text-center" },
            score.data.total_score.toFixed(2)
        );
    };

    TourResultsSemiVerboseTableRow.prototype.render = function render() {
        var _this5 = this;

        var judges_scores = this.props.scores.map(function (score, idx) {
            return React.createElement(
                "td",
                { key: idx },
                " ",
                _this5.renderScore(_this5.props.discipline_judges[idx], score, _this5.props.results_info.additional_data),
                " "
            );
        });
        if (!this.props.run.performed) {
            judges_scores = this.props.scores.map(function (score, idx) {
                return React.createElement(
                    "td",
                    { key: idx },
                    React.createElement(
                        "p",
                        { className: "text-center" },
                        "—"
                    )
                );
            });
        }
        var total_score = this.props.run.verbose_total_score;
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                { className: "place" },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    this.props.results_info.place
                )
            ),
            React.createElement(
                "td",
                { className: "number" },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    this.props.run.participant.number
                )
            ),
            React.createElement(
                "td",
                { className: "participant" },
                (0, _base.getParticipantDisplay)(this.props.run.participant)
            ),
            this.props.tour.scoring_system_name !== "rosfarr.formation" && this.props.tour.scoring_system_name !== "rosfarr.formation_acro" ? React.createElement(
                "td",
                { className: "total-score" },
                function () {
                    if (!_this5.props.run.performed) {
                        return React.createElement(
                            "p",
                            { className: "text-center" },
                            "—"
                        );
                    }
                    if (_this5.props.tour.scoring_system_name === "rosfarr.am_final_acro") {
                        return React.createElement(
                            "p",
                            { className: "text-center" },
                            React.createElement(
                                "em",
                                null,
                                __("results.labels.fw_score_short"),
                                ": ",
                                total_score.previous_tour.primary_score.toFixed(2),
                                " / ",
                                total_score.previous_tour.secondary_score.toFixed(2),
                                React.createElement("br", null)
                            ),
                            React.createElement(
                                "strong",
                                null,
                                total_score.primary_score.toFixed(2)
                            ),
                            " /",
                            " ",
                            total_score.secondary_score.toFixed(2)
                        );
                    }
                    return React.createElement(
                        "p",
                        { className: "text-center" },
                        React.createElement(
                            "strong",
                            null,
                            total_score.primary_score.toFixed(2)
                        ),
                        " /",
                        " ",
                        total_score.secondary_score.toFixed(2)
                    );
                }()
            ) : null,
            judges_scores,
            React.createElement(
                "td",
                { className: "card" },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    this.props.head_judge_score && this.props.run.performed ? this.props.head_judge_score.data.total_score : React.createElement(
                        "span",
                        null,
                        "—"
                    )
                )
            )
        );
    };

    return TourResultsSemiVerboseTableRow;
}(React.Component);

var TourResultsSemiVerboseTable = exports.TourResultsSemiVerboseTable = function (_React$Component4) {
    _inherits(TourResultsSemiVerboseTable, _React$Component4);

    function TourResultsSemiVerboseTable() {
        _classCallCheck(this, TourResultsSemiVerboseTable);

        return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));
    }

    TourResultsSemiVerboseTable.prototype.renderAdvancesHeader = function renderAdvancesHeader(has_next_tour, prev_row, next_row, prev_run, next_run, idx, n_cols) {
        var prev_status = prev_row ? prev_run.performed ? prev_row.advances ? "advanced" : "not_advanced" : "not_performed" : null;
        var next_status = next_run.performed ? next_row.advances ? "advanced" : "not_advanced" : "not_performed";
        var result = prev_status !== next_status ? next_status === "not_performed" ? React.createElement(
            "p",
            { className: "text-left" },
            __("results.headers.participants_not_performed")
        ) : has_next_tour ? next_status === "not_advanced" ? React.createElement(
            "p",
            { className: "text-left" },
            __("results.headers.participants_not_advanced")
        ) : React.createElement(
            "p",
            { className: "text-left" },
            __("results.headers.participants_advanced")
        ) : null : null;
        if (result === null) {
            return null;
        }
        return React.createElement(
            "tr",
            { key: "NT" + idx },
            React.createElement(
                "th",
                { className: "advances-header", colSpan: n_cols },
                result
            )
        );
    };

    TourResultsSemiVerboseTable.prototype.render = function render() {
        var tour_wrapper = new _base.TourScoresWrapper(this.props.tour, this.props.results);
        var discipline_judges = tour_wrapper.getDisciplineJudgesByRoles("acro_judge", "dance_judge");
        var scores_table = tour_wrapper.getScoresTableByRoles("acro_judge", "dance_judge");
        var head_judge_scores = tour_wrapper.getScoresTableByRoles("head_judge").map(function (row) {
            return row[0];
        });
        var results_info = tour_wrapper.getResultsInfo();
        var runs = tour_wrapper.getRuns();
        var has_next_tour = this.props.tour.next_tour_id !== null;
        var has_total_score = this.props.tour.scoring_system_name !== "rosfarr.formation" && this.props.tour.scoring_system_name !== "rosfarr.formation_acro";
        var widths = new TourResultsSemiVerboseTableColumnWidths(discipline_judges.length + 1);
        var judges_header = discipline_judges.map(function (dj) {
            var suffix = (0, _base.getScoringType)(dj, this.props.tour.scoring_system_name) === "acro" ? " (A)" : "";
            return React.createElement(
                "th",
                { key: dj.id, style: widths.genJudgeStyle() },
                React.createElement(
                    "p",
                    null,
                    dj.judge.number + suffix
                )
            );
        }.bind(this));
        var rows = [];
        for (var idx = 0; idx < runs.length; ++idx) {
            rows.push(this.renderAdvancesHeader(has_next_tour, results_info[idx - 1], results_info[idx], runs[idx - 1], runs[idx], idx, 4 + discipline_judges.length + has_total_score));
            rows.push(React.createElement(TourResultsSemiVerboseTableRow, {
                key: runs[idx].id,
                head_judge_score: head_judge_scores[idx],
                results_info: results_info[idx],
                tour: this.props.tour,
                run: runs[idx],
                scores: scores_table[idx],
                discipline_judges: discipline_judges,
                has_next_tour: has_next_tour,
                has_total_score: has_total_score }));
        };
        return React.createElement(
            "table",
            { className: "bordered-table" },
            React.createElement(
                "thead",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        { className: "place", style: widths.genPlaceStyle() },
                        React.createElement(
                            "p",
                            null,
                            __("results.labels.place")
                        )
                    ),
                    React.createElement(
                        "th",
                        { className: "number", style: widths.genNumberStyle() },
                        React.createElement(
                            "p",
                            null,
                            __("results.labels.number")
                        )
                    ),
                    React.createElement(
                        "th",
                        { className: "participant", style: widths.genNameStyle() },
                        React.createElement(
                            "p",
                            null,
                            __("results.labels.participant_name")
                        )
                    ),
                    has_total_score ? React.createElement(
                        "th",
                        { className: "total-score", style: widths.genTotalScoreStyle() },
                        React.createElement(
                            "p",
                            null,
                            __("results.labels.total_score")
                        )
                    ) : null,
                    judges_header,
                    React.createElement(
                        "th",
                        { className: "card", style: widths.genJudgeStyle() },
                        React.createElement(
                            "p",
                            { className: "text-center" },
                            __("results.labels.card")
                        )
                    )
                )
            ),
            React.createElement(
                "tbody",
                null,
                rows
            )
        );
    };

    return TourResultsSemiVerboseTable;
}(React.Component);

var TourResultsTableRow = function (_React$Component5) {
    _inherits(TourResultsTableRow, _React$Component5);

    function TourResultsTableRow() {
        _classCallCheck(this, TourResultsTableRow);

        return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));
    }

    TourResultsTableRow.prototype.render = function render() {
        var card = this.props.run.performed ? this.props.head_judge_score ? this.props.head_judge_score.data.total_score : "0" : React.createElement(
            "span",
            null,
            "—"
        );
        var total_score = this.props.has_total_score ? this.props.run.performed ? React.createElement(
            "p",
            { className: "text-center" },
            React.createElement(
                "strong",
                null,
                this.props.run.verbose_total_score.primary_score.toFixed(2)
            ),
            " /",
            " ",
            this.props.run.verbose_total_score.secondary_score.toFixed(2)
        ) : React.createElement(
            "p",
            { className: "text-center" },
            "—"
        ) : null;
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                { className: "w-7 place" },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    this.props.results_info.place
                )
            ),
            React.createElement(
                "td",
                { className: "w-6 number" },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    this.props.run.participant.number
                )
            ),
            React.createElement(
                "td",
                { className: "w-30 participant" },
                (0, _base.getParticipantDisplay)(this.props.run.participant)
            ),
            React.createElement(
                "td",
                { className: "club" },
                React.createElement(
                    "p",
                    null,
                    this.props.run.participant.club.name
                )
            ),
            this.props.has_total_score ? React.createElement(
                "td",
                { className: "w-18 score" },
                total_score
            ) : null,
            React.createElement(
                "td",
                { className: "w-8 card" },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    card
                )
            )
        );
    };

    return TourResultsTableRow;
}(React.Component);

var TourResultsTable = exports.TourResultsTable = function (_React$Component6) {
    _inherits(TourResultsTable, _React$Component6);

    function TourResultsTable() {
        _classCallCheck(this, TourResultsTable);

        return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));
    }

    TourResultsTable.prototype.renderAdvancesHeader = function renderAdvancesHeader(has_next_tour, prev_row, next_row, prev_run, next_run, idx, n_cols) {
        var prev_status = prev_row ? prev_run.performed ? prev_row.advances ? "advanced" : "not_advanced" : "not_performed" : null;
        var next_status = next_run.performed ? next_row.advances ? "advanced" : "not_advanced" : "not_performed";
        var result = prev_status !== next_status ? next_status === "not_performed" ? React.createElement(
            "p",
            { className: "text-left" },
            __("results.headers.participants_not_performed")
        ) : has_next_tour ? next_status === "not_advanced" ? React.createElement(
            "p",
            { className: "text-left" },
            __("results.headers.participants_not_advanced")
        ) : React.createElement(
            "p",
            { className: "text-left" },
            __("results.headers.participants_advanced")
        ) : null : null;
        if (result === null) {
            return null;
        }
        return React.createElement(
            "tr",
            { key: "NT" + idx },
            React.createElement(
                "th",
                { className: "advances-header", colSpan: n_cols },
                result
            )
        );
    };

    TourResultsTable.prototype.render = function render() {
        var tour_wrapper = new _base.TourScoresWrapper(this.props.tour, this.props.results);
        var head_judge_scores = tour_wrapper.getScoresTableByRoles("head_judge").map(function (row) {
            return row[0];
        });
        var results_info = tour_wrapper.getResultsInfo();
        var runs = tour_wrapper.getRuns();
        var has_next_tour = this.props.tour.next_tour_id !== null;
        var has_total_score = this.props.tour.scoring_system_name !== "rosfarr.formation" && this.props.tour.scoring_system_name !== "rosfarr.formation_acro";
        var rows = [];
        for (var idx = 0; idx < runs.length; ++idx) {
            rows.push(this.renderAdvancesHeader(has_next_tour, results_info[idx - 1], results_info[idx], runs[idx - 1], runs[idx], idx, 5 + has_total_score));
            rows.push(React.createElement(TourResultsTableRow, {
                key: runs[idx].id,
                head_judge_score: head_judge_scores[idx],
                results_info: results_info[idx],
                run: runs[idx],
                has_next_tour: has_next_tour,
                has_total_score: has_total_score }));
        };
        return React.createElement(
            "div",
            { className: "brief-table" },
            React.createElement(
                "table",
                { className: "bordered-table" },
                React.createElement(
                    "thead",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "w-7 place" },
                            React.createElement(
                                "p",
                                null,
                                __("results.labels.place")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-6 number" },
                            React.createElement(
                                "p",
                                null,
                                __("results.labels.number")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "w-30 participant" },
                            React.createElement(
                                "p",
                                null,
                                __("results.labels.participant_name")
                            )
                        ),
                        React.createElement(
                            "th",
                            { className: "club" },
                            React.createElement(
                                "p",
                                null,
                                __("results.labels.participant_club")
                            )
                        ),
                        has_total_score ? React.createElement(
                            "th",
                            { className: "w-18 score" },
                            React.createElement(
                                "p",
                                null,
                                __("results.labels.total_score")
                            )
                        ) : null,
                        React.createElement(
                            "th",
                            { className: "w-8 card" },
                            React.createElement(
                                "p",
                                { className: "text-center" },
                                __("results.labels.card")
                            )
                        )
                    )
                ),
                React.createElement(
                    "tbody",
                    null,
                    rows
                )
            )
        );
    };

    return TourResultsTable;
}(React.Component);

},{"common/rosfarr/base":25,"i10n/loader":27}],8:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.TourAdminBody = exports.TourAdminButtons = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _loader = require("i10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _dialogs = require("ui/dialogs");

var _tools = require("common/tools");

var _tour_admin = require("./rosfarr/tour_admin");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var current_editing_cell = null;

var TourAdminHeatValue = function (_React$Component) {
    _inherits(TourAdminHeatValue, _React$Component);

    function TourAdminHeatValue(props) {
        _classCallCheck(this, TourAdminHeatValue);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            editing: false,
            current_value: null
        };
        return _this;
    }

    TourAdminHeatValue.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        if (!prevState.editing && this.state.editing) {
            ReactDOM.findDOMNode(this).querySelector("input").select();
        }
    };

    TourAdminHeatValue.prototype.onKeyUp = function onKeyUp(event) {
        if (event.keyCode === 13) {
            // Enter
            this.submitValue();
        } else if (event.keyCode === 27) {
            // Esc
            this.stopEditing();
        }
    };

    TourAdminHeatValue.prototype.startEditing = function startEditing() {
        if (this.props.readOnly) {
            return;
        }
        if (current_editing_cell !== null) {
            current_editing_cell.stopEditing();
        }
        current_editing_cell = this;
        this.setState({
            editing: true,
            current_value: this.props.value
        });
    };

    TourAdminHeatValue.prototype.stopEditing = function stopEditing() {
        current_editing_cell = null;
        this.setState({
            editing: false
        });
    };

    TourAdminHeatValue.prototype.submitValue = function submitValue() {
        (0, _api.Api)("run.set", { run_id: this.props.run_id, data: { heat: this.state.current_value } }).onSuccess(function () {
            this.stopEditing();
        }.bind(this)).send();
    };

    TourAdminHeatValue.prototype.onChange = function onChange(event) {
        var value = parseInt(event.target.value.replace(/\D/g, ''));
        if (isNaN(value)) {
            value = 0;
        }
        this.setState({
            current_value: value
        });
    };

    TourAdminHeatValue.prototype.render = function render() {
        if (this.state.editing) {
            return React.createElement(
                "td",
                { className: "heat" },
                React.createElement("input", {
                    className: "input-heat",
                    type: "text",
                    value: this.state.current_value || "",
                    onChange: this.onChange.bind(this),
                    onKeyDown: this.onKeyUp.bind(this) })
            );
        } else {
            return React.createElement(
                "td",
                { className: "heat", onClick: this.startEditing.bind(this) },
                this.props.value
            );
        }
    };

    return TourAdminHeatValue;
}(React.Component);

var TourAdminButtons = exports.TourAdminButtons = function (_React$Component2) {
    _inherits(TourAdminButtons, _React$Component2);

    function TourAdminButtons() {
        _classCallCheck(this, TourAdminButtons);

        return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));
    }

    TourAdminButtons.prototype.signal = function signal(message) {
        var _this3 = this;

        return function () {
            return _this3.props.onSignal(message);
        }.bind(this);
    };

    TourAdminButtons.prototype.render = function render() {
        if (this.props.tour.finalized) {
            return React.createElement("div", null);
        }
        var result = [];
        if (!this.props.tour.active) {
            result = result.concat([React.createElement(
                "button",
                { className: "btn btn-primary", onClick: this.signal("init_tour"), key: "btn-init-tour" },
                (0, _loader._)("judging.buttons.init_tour")
            ), React.createElement(
                "button",
                { className: "btn btn-primary", onClick: this.signal("finalize_tour"), key: "btn-finalize-tour" },
                (0, _loader._)("judging.buttons.finalize_tour")
            ), React.createElement(
                "button",
                { className: "btn btn-primary", onClick: this.signal("shuffle_heats"), key: "btn-shuffle-heats" },
                (0, _loader._)("judging.buttons.shuffle_heats")
            )]);
        }
        result.push(React.createElement(TourAdminStartStopTourButton, {
            tour: this.props.tour,
            onStart: this.signal("start_tour"),
            onStop: this.signal("stop_tour"),
            key: "btn-start-stop" }));
        return React.createElement(
            "div",
            null,
            result
        );
    };

    return TourAdminButtons;
}(React.Component);

var TourAdminScoreCellWrapper = function (_React$Component3) {
    _inherits(TourAdminScoreCellWrapper, _React$Component3);

    function TourAdminScoreCellWrapper(props) {
        _classCallCheck(this, TourAdminScoreCellWrapper);

        var _this4 = _possibleConstructorReturn(this, _React$Component3.call(this, props));

        _this4.state = {
            editing: false,
            current_value: _this4.props.value
        };
        return _this4;
    }

    TourAdminScoreCellWrapper.prototype.startEditing = function startEditing() {
        if (current_editing_cell !== null) {
            current_editing_cell.stopEditing();
        }
        current_editing_cell = this;
        this.setState({
            editing: true,
            current_value: (0, _tools.clone)(this.props.value)
        });
    };

    TourAdminScoreCellWrapper.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
        current_editing_cell = null;
    };

    TourAdminScoreCellWrapper.prototype.updateValue = function updateValue(new_value) {
        var value = this.state.current_value;
        value.raw_data = new_value;
        this.setState({
            current_value: value
        });
    };

    TourAdminScoreCellWrapper.prototype.submitValue = function submitValue(new_value) {
        var request = {
            score_data: new_value,
            force: true
        };
        (0, _api.Api)("score.set", { score_id: this.props.score_id, data: request }).onSuccess(this.stopEditing.bind(this)).send();
    };

    TourAdminScoreCellWrapper.prototype.toggleConfirmation = function toggleConfirmation() {
        if (this.props.confirmed) {
            (0, _api.Api)("score.unconfirm", { score_id: this.props.score_id }).send();
        } else {
            (0, _api.Api)("score.confirm", { score_id: this.props.score_id }).send();
        }
    };

    TourAdminScoreCellWrapper.prototype.render = function render() {
        if (typeof this.props.value === "undefined") {
            return React.createElement(
                "td",
                { className: "no-score" },
                " "
            );
        }
        var classes = ["judge"].concat(this.state.editing ? ["editing"] : []).concat(this.props.confirmed ? ["confirmed-score"] : []);
        return React.createElement(
            "td",
            { className: classes.join(" ") },
            React.createElement(_tour_admin.TourAdminScoreCell, {
                readOnly: this.props.readOnly,
                discipline_judge: this.props.discipline_judge,
                scoring_system_name: this.props.scoring_system_name,
                startEditing: this.startEditing.bind(this),
                stopEditing: this.stopEditing.bind(this),
                updateValue: this.updateValue.bind(this),
                submitValue: this.submitValue.bind(this),
                toggleConfirmation: this.toggleConfirmation.bind(this),
                editing: this.state.editing,
                value: this.state.editing ? this.state.current_value : this.props.value,
                confirmed: this.props.confirmed })
        );
    };

    return TourAdminScoreCellWrapper;
}(React.Component);

var TourAdminScoresRow = function (_React$Component4) {
    _inherits(TourAdminScoresRow, _React$Component4);

    function TourAdminScoresRow() {
        _classCallCheck(this, TourAdminScoresRow);

        return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));
    }

    TourAdminScoresRow.prototype.updateHeat = function updateHeat(new_value) {
        this.props.updateHeatValue(new_value);
    };

    TourAdminScoresRow.prototype.render = function render() {
        var scores_map = {};
        this.props.run.scores.forEach(function (score_data) {
            scores_map[score_data.discipline_judge_id] = score_data;
        });
        var scores = this.props.discipline_judges.map(function (discipline_judge, idx) {
            var score = scores_map[discipline_judge.id];
            return React.createElement(TourAdminScoreCellWrapper, {
                readOnly: this.props.readOnly,
                key: score && score.id || "I" + idx,
                discipline_judge: discipline_judge,
                scoring_system_name: this.props.scoring_system_name,
                score_id: score && score.id,
                value: score && score.data,
                confirmed: score && score.confirmed });
        }.bind(this));
        return React.createElement(
            "tr",
            { className: this.props.run.heat % 2 ? "odd-heat" : "" },
            React.createElement(TourAdminHeatValue, {
                readOnly: this.props.readOnly,
                run_id: this.props.run.id,
                value: this.props.run.heat,
                updateValue: this.updateHeat.bind(this) }),
            React.createElement(
                "td",
                { className: "number" },
                this.props.run.participant.number
            ),
            React.createElement(
                "td",
                { className: "name" },
                this.props.run.participant.name
            ),
            React.createElement(TourAdminAcrobaticsCell, {
                readOnly: this.props.readOnly,
                run_id: this.props.run.id,
                program_name: this.props.run.program_name,
                acrobatics: this.props.run.acrobatics,
                programs: this.props.run.participant.programs }),
            React.createElement(TourAdminPerformedCell, {
                readOnly: this.props.readOnly,
                run: this.props.run }),
            React.createElement(
                "td",
                { className: "total" },
                this.props.run.total_score
            ),
            scores
        );
    };

    return TourAdminScoresRow;
}(React.Component);

var TourAdminStartStopTourButton = function (_React$Component5) {
    _inherits(TourAdminStartStopTourButton, _React$Component5);

    function TourAdminStartStopTourButton() {
        _classCallCheck(this, TourAdminStartStopTourButton);

        return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));
    }

    TourAdminStartStopTourButton.prototype.render = function render() {
        if (this.props.tour.active) {
            return React.createElement(
                "button",
                { className: "btn btn-danger", onClick: this.props.onStop },
                (0, _loader._)("judging.buttons.stop_tour")
            );
        } else {
            return React.createElement(
                "button",
                { className: "btn btn-success", onClick: this.props.onStart },
                (0, _loader._)("judging.buttons.start_tour")
            );
        }
    };

    return TourAdminStartStopTourButton;
}(React.Component);

var TourAdminAcrobaticEditorRow = function (_React$Component6) {
    _inherits(TourAdminAcrobaticEditorRow, _React$Component6);

    function TourAdminAcrobaticEditorRow() {
        _classCallCheck(this, TourAdminAcrobaticEditorRow);

        return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));
    }

    TourAdminAcrobaticEditorRow.prototype.onPlus = function onPlus() {
        var value = Math.round(2 * this.props.acrobatic.score + 1) / 2;
        (0, _api.Api)("acrobatic_override.set", {
            run_id: this.props.run_id,
            acrobatic_idx: this.props.acro_idx,
            score: value
        }).send();
    };

    TourAdminAcrobaticEditorRow.prototype.onMinus = function onMinus() {
        var value = Math.max(0, Math.round(2 * this.props.acrobatic.score - 1) / 2);
        (0, _api.Api)("acrobatic_override.set", {
            run_id: this.props.run_id,
            acrobatic_idx: this.props.acro_idx,
            score: value
        }).send();
    };

    TourAdminAcrobaticEditorRow.prototype.onReset = function onReset() {
        (0, _api.Api)("acrobatic_override.set", {
            run_id: this.props.run_id,
            acrobatic_idx: this.props.acro_idx,
            score: null
        }).send();
    };

    TourAdminAcrobaticEditorRow.prototype.renderControls = function renderControls() {
        if (this.props.readOnly) {
            return null;
        }
        return React.createElement(
            "td",
            { className: "controls" },
            this.props.acrobatic.has_override ? React.createElement(
                "button",
                { className: "btn btn-default btn-sm", onClick: this.onReset.bind(this) },
                (0, _loader._)("judging.buttons.reset_acrobatic_override")
            ) : null,
            React.createElement(
                "button",
                { className: "btn btn-default btn-sm", onClick: this.onMinus.bind(this) },
                "−"
            ),
            React.createElement(
                "button",
                { className: "btn btn-default btn-sm", onClick: this.onPlus.bind(this) },
                "+"
            )
        );
    };

    TourAdminAcrobaticEditorRow.prototype.render = function render() {
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                { className: "description" },
                this.props.acrobatic.description
            ),
            React.createElement(
                "td",
                { className: "old-score" },
                this.props.acrobatic.original_score.toFixed(1)
            ),
            React.createElement(
                "td",
                { className: "new-score" },
                this.props.acrobatic.has_override ? this.props.acrobatic.score.toFixed(1) : null
            ),
            this.renderControls()
        );
    };

    return TourAdminAcrobaticEditorRow;
}(React.Component);

var TourAdminAcrobaticLoader = function (_React$Component7) {
    _inherits(TourAdminAcrobaticLoader, _React$Component7);

    function TourAdminAcrobaticLoader() {
        _classCallCheck(this, TourAdminAcrobaticLoader);

        return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));
    }

    TourAdminAcrobaticLoader.prototype.onSubmit = function onSubmit(e) {
        var _this9 = this;

        e.preventDefault();
        var value = this.refs.selector.value;
        if (value === "null") {
            value = null;
        }
        (0, _dialogs.showConfirm)((0, _loader._)("judging.confirms.load_program"), function () {
            _this9.props.onLoad(value);
            swal.close();
        });
    };

    TourAdminAcrobaticLoader.prototype.renderSelector = function renderSelector() {
        return React.createElement(
            "select",
            { defaultValue: "null", ref: "selector" },
            React.createElement(
                "option",
                { value: "null" },
                "-"
            ),
            this.props.programs.map(function (program) {
                return React.createElement(
                    "option",
                    { value: program.id, key: program.id },
                    program.name
                );
            })
        );
    };

    TourAdminAcrobaticLoader.prototype.render = function render() {
        return React.createElement(
            "form",
            { onSubmit: this.onSubmit.bind(this), className: "acro-loader pull-left" },
            this.renderSelector(),
            React.createElement(
                "button",
                { className: "btn btn-primary btn-sm" },
                (0, _loader._)("global.buttons.load")
            )
        );
    };

    return TourAdminAcrobaticLoader;
}(React.Component);

var TourAdminAcrobaticEditor = function (_React$Component8) {
    _inherits(TourAdminAcrobaticEditor, _React$Component8);

    function TourAdminAcrobaticEditor() {
        _classCallCheck(this, TourAdminAcrobaticEditor);

        return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));
    }

    TourAdminAcrobaticEditor.prototype.loadAcrobatics = function loadAcrobatics(program_id) {
        (0, _api.Api)("run.load_program", { program_id: program_id, run_id: this.props.run_id }).send();
    };

    TourAdminAcrobaticEditor.prototype.renderBody = function renderBody() {
        var _this11 = this;

        return React.createElement(
            "div",
            null,
            React.createElement(
                "h4",
                null,
                this.props.program_name
            ),
            React.createElement(
                "table",
                { className: "acrobatics" },
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "description" },
                            (0, _loader._)("judging.labels.acro_description")
                        ),
                        React.createElement(
                            "th",
                            { className: "old-score" },
                            (0, _loader._)("judging.labels.old_score")
                        ),
                        React.createElement(
                            "th",
                            { className: "new-score" },
                            (0, _loader._)("judging.labels.new_score")
                        ),
                        this.props.readOnly ? null : React.createElement("th", { className: "controls" })
                    ),
                    this.props.acrobatics.map(function (acro, idx) {
                        return React.createElement(TourAdminAcrobaticEditorRow, {
                            readOnly: _this11.props.readOnly,
                            acrobatic: acro,
                            acro_idx: idx,
                            run_id: _this11.props.run_id,
                            key: idx });
                    })
                )
            )
        );
    };

    TourAdminAcrobaticEditor.prototype.renderMock = function renderMock() {
        return React.createElement(
            "div",
            { className: "no-program text-center" },
            "No program loaded"
        );
    };

    TourAdminAcrobaticEditor.prototype.renderLoader = function renderLoader() {
        if (this.props.readOnly) {
            return null;
        }
        return React.createElement(TourAdminAcrobaticLoader, {
            onLoad: this.loadAcrobatics.bind(this),
            programs: this.props.programs });
    };

    TourAdminAcrobaticEditor.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "form-acro-input" },
            this.props.program_name === null ? this.renderMock() : this.renderBody(),
            this.renderLoader(),
            React.createElement(
                "button",
                { className: "btn btn-primary btn-sm pull-right", onClick: this.props.stopEditing },
                (0, _loader._)("global.buttons.close")
            ),
            React.createElement("div", { className: "clearfix" })
        );
    };

    return TourAdminAcrobaticEditor;
}(React.Component);

var TourAdminAcrobaticsCell = function (_React$Component9) {
    _inherits(TourAdminAcrobaticsCell, _React$Component9);

    function TourAdminAcrobaticsCell(props) {
        _classCallCheck(this, TourAdminAcrobaticsCell);

        var _this12 = _possibleConstructorReturn(this, _React$Component9.call(this, props));

        _this12.state = {
            editing: false
        };
        return _this12;
    }

    TourAdminAcrobaticsCell.prototype.startEditing = function startEditing() {
        if (current_editing_cell !== null) {
            current_editing_cell.stopEditing();
        }
        current_editing_cell = this;
        this.setState({
            editing: true
        });
    };

    TourAdminAcrobaticsCell.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
        current_editing_cell = null;
    };

    TourAdminAcrobaticsCell.prototype.render = function render() {
        if (this.state.editing) {
            return React.createElement(
                "td",
                { className: "acrobatics editing" },
                React.createElement(TourAdminAcrobaticEditor, _extends({
                    readOnly: this.props.readOnly,
                    stopEditing: this.stopEditing.bind(this)
                }, this.props))
            );
        }
        if (this.props.program_name === null) {
            return React.createElement(
                "td",
                { className: "acrobatics", onClick: this.startEditing.bind(this) },
                "—"
            );
        }
        var has_overrides = false;
        var original_score = 0;
        var score = 0;
        this.props.acrobatics.forEach(function (acro) {
            original_score += acro.original_score;
            score += acro.score;
            has_overrides = has_overrides || acro.score !== acro.original_score;
        });
        return React.createElement(
            "td",
            { className: "acrobatics", onClick: this.startEditing.bind(this) },
            has_overrides ? original_score.toFixed(1) + " → " + score.toFixed(1) : score.toFixed(1)
        );
    };

    return TourAdminAcrobaticsCell;
}(React.Component);

var TourAdminPerformedCell = function (_React$Component10) {
    _inherits(TourAdminPerformedCell, _React$Component10);

    function TourAdminPerformedCell() {
        _classCallCheck(this, TourAdminPerformedCell);

        return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));
    }

    TourAdminPerformedCell.prototype.toggleState = function toggleState() {
        if (this.props.readOnly) {
            return;
        }
        var method = this.props.run.performed ? "run.mark_not_performed" : "run.mark_performed";
        (0, _api.Api)(method, { run_id: this.props.run.id }).send();
    };

    TourAdminPerformedCell.prototype.render = function render() {
        return React.createElement(
            "td",
            { className: "performed" },
            React.createElement("input", {
                type: "checkbox",
                checked: this.props.run.performed,
                onChange: this.toggleState.bind(this) })
        );
    };

    return TourAdminPerformedCell;
}(React.Component);

var TourAdminBody = exports.TourAdminBody = function (_React$Component11) {
    _inherits(TourAdminBody, _React$Component11);

    // Intiialization

    function TourAdminBody(props) {
        _classCallCheck(this, TourAdminBody);

        var _this14 = _possibleConstructorReturn(this, _React$Component11.call(this, props));

        _this14.state = {
            tour: null
        };
        return _this14;
    }

    TourAdminBody.prototype.componentWillMount = function componentWillMount() {
        this.storage = _storage.storage.getDomain("judging_" + this.props.tour_id);
        this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
        this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
        this.loadData();
    };

    TourAdminBody.prototype.componentWillUnmount = function componentWillUnmount() {
        _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
        _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
        _storage.storage.delDomain("judging_" + this.props.tour_id);
    };

    TourAdminBody.prototype.reloadFromStorage = function reloadFromStorage() {
        var SCHEMA = {
            discipline: {
                competition: {},
                discipline_judges: {
                    judge: {}
                }
            },
            runs: {
                scores: {},
                participant: {
                    programs: {}
                }
            }
        };
        var serialized = this.storage.get("Tour").by_id(this.props.tour_id).serialize(SCHEMA);
        this.setState({
            tour: serialized
        });
    };

    TourAdminBody.prototype.loadData = function loadData() {
        (0, _api.Api)("tour.get", {
            tour_id: this.props.tour_id,
            children: {
                discipline: {
                    competition: {},
                    discipline_judges: {
                        judge: {}
                    }
                },
                runs: {
                    acrobatics: {},
                    scores: {},
                    participant: {
                        programs: {}
                    }
                }
            }
        }).addToDB("Tour", this.props.tour_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
    };

    // Listeners

    TourAdminBody.prototype.onSignal = function onSignal(message) {
        var _this15 = this;

        switch (message) {
            case "init_tour":
                (0, _dialogs.showConfirm)((0, _loader._)("judging.confirms.init_tour"), function () {
                    (0, _api.Api)("tour.init", { tour_id: _this15.props.tour_id }).onSuccess(function () {
                        return swal.close();
                    }).send();
                });
                break;
            case "finalize_tour":
                (0, _dialogs.showConfirm)((0, _loader._)("judging.confirms.finalize_tour"), function () {
                    (0, _api.Api)("tour.finalize", { tour_id: _this15.props.tour_id }).onSuccess(function () {
                        swal.close();
                        _this15.props.switchPage("results-1");
                    }).send();
                });
                break;
            case "shuffle_heats":
                (0, _dialogs.showConfirm)((0, _loader._)("judging.confirms.shuffle_heats"), function () {
                    (0, _api.Api)("tour.shuffle_heats", { tour_id: _this15.props.tour_id }).onSuccess(function () {
                        return swal.close();
                    }).send();
                });
                break;
            case "start_tour":
                (0, _api.Api)("tour.start", { tour_id: this.props.tour_id }).send();
                break;
            case "stop_tour":
                (0, _api.Api)("tour.stop", { tour_id: this.props.tour_id }).send();
                break;
            default:
                console.error("Unknown signal received:", message);
        }
    };

    // Helpers

    TourAdminBody.prototype.getAcrobaticOverrides = function getAcrobaticOverrides() {
        var result = [];
        this.state.tour.runs.forEach(function (run) {
            run.acrobatics.forEach(function (acro, idx) {
                if (acro.original_score !== acro.score) {
                    result.push({
                        run: run,
                        acro_idx: idx + 1,
                        acro_description: acro.description,
                        score: acro.score,
                        original_score: acro.original_score
                    });
                }
            });
        });
        return result;
    };

    // Rendering

    TourAdminBody.prototype.render = function render() {
        if (this.state.tour === null) {
            return React.createElement(_components.Loader, null);
        }
        var discipline_judges = this.state.tour.discipline.discipline_judges;
        var rows = this.state.tour.runs.map(function (run) {
            return React.createElement(TourAdminScoresRow, {
                readOnly: this.state.tour.finalized,
                key: run.id,
                run: run,
                scoring_system_name: this.state.tour.scoring_system_name,
                discipline_judges: discipline_judges });
        }.bind(this));
        var judges_header = discipline_judges.map(function (discipline_judge) {
            // TODO: move role staff to scoring system logic
            return React.createElement(
                "th",
                { className: "judge", key: discipline_judge.id },
                discipline_judge.judge.number + (discipline_judge.role === "acro_judge" ? "*" : "")
            );
        }.bind(this));
        return React.createElement(
            "div",
            { className: "tour-admin" },
            React.createElement(
                "table",
                { className: "bordered-table" },
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "heat" },
                            (0, _loader._)("judging.labels.heat")
                        ),
                        React.createElement(
                            "th",
                            { className: "number" },
                            (0, _loader._)("judging.labels.number")
                        ),
                        React.createElement(
                            "th",
                            { className: "name" },
                            (0, _loader._)("judging.labels.participant_name")
                        ),
                        React.createElement(
                            "th",
                            { className: "acrobatics" },
                            (0, _loader._)("judging.labels.acrobatics")
                        ),
                        React.createElement(
                            "th",
                            { className: "performed" },
                            (0, _loader._)("judging.labels.performed")
                        ),
                        React.createElement(
                            "th",
                            { className: "total" },
                            (0, _loader._)("judging.labels.total_score")
                        ),
                        judges_header
                    ),
                    rows
                )
            )
        );
    };

    return TourAdminBody;
}(React.Component);

},{"./rosfarr/tour_admin":6,"common/tools":26,"i10n/loader":27,"server/api":29,"server/message_dispatcher":30,"server/storage":31,"ui/components":32,"ui/dialogs":33}],9:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.TourResultsBody = exports.TourResultsButtons = undefined;

var _loader = require("i10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _printable = require("ui/printable");

var _docx = require("common/docx");

var _tour_results = require("./rosfarr/tour_results");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TourResultsButtons = exports.TourResultsButtons = function (_React$Component) {
    _inherits(TourResultsButtons, _React$Component);

    function TourResultsButtons() {
        _classCallCheck(this, TourResultsButtons);

        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    TourResultsButtons.prototype.signal = function signal(message) {
        var _this2 = this;

        return function () {
            return _this2.props.onSignal(message);
        }.bind(this);
    };

    TourResultsButtons.prototype.render = function render() {
        return React.createElement(
            "div",
            null,
            React.createElement(
                "button",
                { className: "btn btn-primary", onClick: this.signal("docx") },
                "DOCX"
            )
        );
    };

    return TourResultsButtons;
}(React.Component);

var TourResultsBody = exports.TourResultsBody = function (_React$Component2) {
    _inherits(TourResultsBody, _React$Component2);

    // Initialization

    function TourResultsBody(props) {
        _classCallCheck(this, TourResultsBody);

        var _this3 = _possibleConstructorReturn(this, _React$Component2.call(this, props));

        _this3.state = {
            tour: null,
            results: null
        };
        _this3.TOUR_SCHEMA = {
            discipline: {
                competition: {},
                discipline_judges: {
                    judge: {}
                }
            },
            runs: {
                acrobatics: {},
                scores: {},
                participant: {
                    club: {}
                }
            }
        };
        return _this3;
    }

    TourResultsBody.prototype.componentWillMount = function componentWillMount() {
        var _this4 = this;

        this.storage = _storage.storage.getDomain("results_" + this.props.tour_id);
        this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
        this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
        this.results_change_listener = _message_dispatcher.message_dispatcher.addListener("tour_results_changed reload_data", function (message) {
            if (!message || message.tour_id === this.props.tour_id) {
                this.loadResults();
            }
        }.bind(this));
        this.loadData();
        this.loadResults();
        if (this.props.autoDocx) {
            (function () {
                var interval_id = setInterval(function () {
                    if (_this4.refs.content) {
                        clearInterval(interval_id);
                        _this4.createDocx(_this4.props.autoDocx.filename);
                        _this4.props.autoDocx.callback(_this4.props.autoDocx.filename);
                    }
                }, 500);
            })();
        }
    };

    TourResultsBody.prototype.componentWillUnmount = function componentWillUnmount() {
        _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
        _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
        _message_dispatcher.message_dispatcher.removeListener(this.results_change_listener);
        _storage.storage.delDomain("results_" + this.props.tour_id);
    };

    TourResultsBody.prototype.reloadFromStorage = function reloadFromStorage() {
        var serialized = this.storage.get("Tour").by_id(this.props.tour_id).serialize(this.TOUR_SCHEMA);
        this.setState({
            tour: serialized
        });
    };

    TourResultsBody.prototype.loadResults = function loadResults() {
        (0, _api.Api)("tour.get_results", { tour_id: this.props.tour_id }).onSuccess(function (new_results) {
            this.setState({
                "results": new_results
            });
            this.reloadFromStorage();
        }.bind(this)).send();
    };

    TourResultsBody.prototype.loadData = function loadData() {
        (0, _api.Api)("tour.get", { tour_id: this.props.tour_id, children: this.TOUR_SCHEMA }).addToDB("Tour", this.props.tour_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
    };

    // Listeners

    TourResultsBody.prototype.onSignal = function onSignal(message) {
        switch (message) {
            case "docx":
                this.createDocx();
                break;
            default:
                console.log("Unknown message:", message);
        }
    };

    // Rendering

    TourResultsBody.prototype.renderNonFinalizedWarning = function renderNonFinalizedWarning() {
        if (!this.state.tour.finalized) {
            return React.createElement(
                "div",
                { className: "alert alert-danger" },
                (0, _loader._)("results.alerts.not_finalized")
            );
        }
    };

    TourResultsBody.prototype.render = function render() {
        // eslint-disable-line react/sort-comp
        if (this.state.tour === null || this.state.results === null) {
            return React.createElement(_components.Loader, null);
        }
        var table = null;
        if (this.props.verbosity === "3") {
            table = React.createElement(_tour_results.TourResultsVerboseTable, this.state);
        } else if (this.props.verbosity === "2") {
            table = React.createElement(_tour_results.TourResultsSemiVerboseTable, this.state);
        } else {
            table = React.createElement(_tour_results.TourResultsTable, this.state);
        }
        this.rendered = true;
        if (this.props.tableOnly) {
            return React.createElement(
                "div",
                { className: "tour-results", ref: "content" },
                this.renderNonFinalizedWarning(),
                table
            );
        }
        var body = React.createElement(
            "div",
            { className: "tour-results p-content", ref: "content" },
            this.renderNonFinalizedWarning(),
            table
        );
        return this.props.printable ? React.createElement(_printable.Printable, {
            ref: "printable",
            header: this.state.tour.discipline.competition.name + ", " + this.state.tour.discipline.competition.date,
            title1: (0, _loader._)("admin.headers.tour_results"),
            title2: this.state.tour.discipline.name,
            title3: this.state.tour.name,
            body: body }) : body;
    };

    TourResultsBody.prototype.createDocx = function createDocx() {
        var filename = arguments.length <= 0 || arguments[0] === undefined ? "tour-results.docx" : arguments[0];

        (0, _docx.Docx)(filename).setMargins([10, 10, 15, 10]).setHeader(this.state.tour.discipline.competition.name + ", " + this.state.tour.discipline.competition.date).setTitle1((0, _loader._)("admin.headers.tour_results")).setTitle2(this.state.tour.discipline.name).setTitle3(this.state.tour.name).setBody(ReactDOM.findDOMNode(this.refs.content).innerHTML).addStyle(".bordered-table", "font-size", this.props.verbosity === "1" ? "12pt" : "9pt").addStyle(".bordered-table .acro-table td", "font-size", "9pt").addStyle(".bordered-table .acro-table td", "padding", "0 3pt").addStyle(".bordered-table .acro-table td", "border", "0.5pt solid black").addStyle(".bordered-table .score-breakdown td, .bordered-table .score-breakdown th", "font-size", "9pt").addStyle(".bordered-table .score-breakdown td, .bordered-table .score-breakdown th", "border", "none").addStyle(".bordered-table .score-breakdown th", "padding", "0 1pt 0 0").addStyle(".bordered-table .score-breakdown td", "padding", "0 0 0 1pt").addStyle(".score-breakdown th", "text-align", "right").addStyle(".score-breakdown td", "text-align", "left").addStyle(".score-breakdown td", "text-align", "left").addStyle(".score-breakdown", "width", "50pt").addStyle(".advances-header", "background-color", "#ddd").addStyle(".total-score", "font-weight", "bold").addStyle(".head_judge", "width", "5%").addStyle(".dance_judge", "width", "8%").addStyle(".acro_judge", "width", "8%").save();
    };

    return TourResultsBody;
}(React.Component);

},{"./rosfarr/tour_results":7,"common/docx":24,"i10n/loader":27,"server/api":29,"server/message_dispatcher":30,"server/storage":31,"ui/components":32,"ui/printable":34}],10:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.Admin = undefined;

var _loader = require("i10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _main = require("./management/main");

var _main2 = require("./judging/main");

var _main3 = require("./service/main");

var _components = require("ui/components");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Admin = exports.Admin = function (_React$Component) {
    _inherits(Admin, _React$Component);

    // Intialization

    function Admin(props) {
        _classCallCheck(this, Admin);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            active_app: _this.getActiveAppFromHash(),
            name: null
        };
        _message_dispatcher.message_dispatcher.addListener("db_update", _this.reloadFromStorage.bind(_this));
        _message_dispatcher.message_dispatcher.addListener("reload_data", _this.loadData.bind(_this));
        _this.loadData();
        return _this;
    }

    Admin.prototype.reloadFromStorage = function reloadFromStorage() {
        var SCHEMA = {
            clubs: {},
            judges: {},
            plan: {},
            disciplines: {
                discipline_judges: {
                    judge: {}
                },
                tours: {}
            }
        };
        this.setState(_storage.storage.get("Competition").by_id(this.props.competition_id).serialize(SCHEMA));
    };

    Admin.prototype.loadData = function loadData() {
        (0, _api.Api)("competition.get", {
            competition_id: this.props.competition_id,
            children: {
                clubs: {},
                judges: {},
                plan: {},
                disciplines: {
                    discipline_judges: {
                        judge: {}
                    },
                    tours: {}
                }
            }
        }).addToDB("Competition", this.props.competition_id).onSuccess(this.reloadFromStorage.bind(this)).send();
    };

    // Navigation

    Admin.prototype.setApp = function setApp(app) {
        this.setState({
            active_app: app
        });
        window.location.hash = "#" + app;
    };

    Admin.prototype.getActiveAppFromHash = function getActiveAppFromHash(app) {
        var chunks = window.location.hash.substr(1).split("/");
        if (chunks[0] && ["judging", "management", "service"].indexOf(chunks[0]) >= 0) {
            return chunks[0];
        }
        return "management";
    };

    // Rendering

    Admin.prototype.renderActiveApp = function renderActiveApp() {
        switch (this.state.active_app) {
            case "judging":
                return React.createElement(_main2.Judging, {
                    competition_plan: this.state.plan,
                    disciplines: this.state.disciplines });
            case "management":
                return React.createElement(_main.Management, {
                    disciplines: this.state.disciplines,
                    clubs: this.state.clubs,
                    judges: this.state.judges,
                    competition_plan: this.state.plan,
                    competition_name: this.state.name,
                    competition_date: this.state.date,
                    competition_id: this.props.competition_id });
            case "service":
                return React.createElement(_main3.Service, {
                    competition_id: this.props.competition_id,
                    disciplines: this.state.disciplines });
        }
    };

    Admin.prototype.render = function render() {
        if (this.state.name === null) {
            return React.createElement(_components.Loader, null);
        }
        return React.createElement(
            "div",
            { className: "wrapper" },
            React.createElement(
                "div",
                { className: "header" },
                React.createElement(
                    "div",
                    { className: "caption" },
                    this.state.name,
                    " (",
                    this.state.date,
                    ")"
                )
            ),
            React.createElement(
                "div",
                { className: "body" },
                React.createElement(
                    "div",
                    { className: "left-col noselect" },
                    React.createElement(
                        "div",
                        { className: "button" + (this.state.active_app === "management" ? " active" : ""), onClick: this.setApp.bind(this, "management") },
                        React.createElement(
                            "div",
                            { className: "icon" },
                            "M"
                        ),
                        React.createElement(
                            "div",
                            { className: "label" },
                            "Management"
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "button" + (this.state.active_app === "judging" ? " active" : ""), onClick: this.setApp.bind(this, "judging") },
                        React.createElement(
                            "div",
                            { className: "icon" },
                            "J"
                        ),
                        React.createElement(
                            "div",
                            { className: "label" },
                            "Judging"
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "button" + (this.state.active_app === "service" ? " active" : ""), onClick: this.setApp.bind(this, "service") },
                        React.createElement(
                            "div",
                            { className: "icon" },
                            "S"
                        ),
                        React.createElement(
                            "div",
                            { className: "label" },
                            "Service"
                        )
                    ),
                    React.createElement("div", { className: "spacer" }),
                    React.createElement(
                        "div",
                        { className: "bottom-cell" },
                        React.createElement(
                            "a",
                            { className: "btn-back", href: "/" },
                            (0, _loader._)("admin.buttons.to_start_page")
                        )
                    )
                ),
                this.renderActiveApp()
            )
        );
    };

    return Admin;
}(React.Component);

},{"./judging/main":4,"./management/main":17,"./service/main":22,"i10n/loader":27,"server/api":29,"server/message_dispatcher":30,"server/storage":31,"ui/components":32}],11:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.Clubs = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _loader = require("i10n/loader");

var _api = require("server/api");

var _dialogs = require("ui/dialogs");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Clubs = exports.Clubs = function (_React$Component) {
    _inherits(Clubs, _React$Component);

    function Clubs(props) {
        _classCallCheck(this, Clubs);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            creating: false
        };
        return _this;
    }

    Clubs.prototype.renderTable = function renderTable() {
        var rows = this.props.clubs.map(function (club) {
            return React.createElement(ClubRow, {
                key: club.id,
                club: club });
        }.bind(this));
        return React.createElement(
            "div",
            { className: "manage-clubs" },
            React.createElement(
                "table",
                { className: "table table-striped" },
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "name" },
                            (0, _loader._)("models.club.name")
                        ),
                        React.createElement(
                            "th",
                            { className: "city" },
                            (0, _loader._)("models.club.city")
                        ),
                        React.createElement(
                            "th",
                            { className: "external-id" },
                            (0, _loader._)("models.club.external_id")
                        ),
                        React.createElement("th", { className: "delete" })
                    ),
                    rows,
                    React.createElement(ClubCreationRow, { competition_id: this.props.competition_id })
                )
            )
        );
    };

    Clubs.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "app-content" },
            React.createElement(
                "header",
                { className: "app-header" },
                React.createElement(
                    "h1",
                    null,
                    (0, _loader._)("admin.headers.clubs_management")
                )
            ),
            React.createElement(
                "div",
                { className: "app-body" },
                this.renderTable()
            )
        );
    };

    return Clubs;
}(React.Component);

var ClubEditorRow = function (_React$Component2) {
    _inherits(ClubEditorRow, _React$Component2);

    function ClubEditorRow() {
        _classCallCheck(this, ClubEditorRow);

        return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));
    }

    ClubEditorRow.prototype.sertialize = function sertialize() {
        return {
            name: this._name.value,
            city: this._city.value,
            external_id: this._external_id.value
        };
    };

    ClubEditorRow.prototype.onSubmit = function onSubmit(event) {
        event.preventDefault();
        if (!this.props.newClub) {
            (0, _api.Api)("club.set", {
                club_id: this.props.club.id,
                data: this.sertialize()
            }).onSuccess(this.props.stopEditing).send();
        } else {
            (0, _api.Api)("club.create", {
                competition_id: this.props.competition_id,
                data: this.sertialize()
            }).onSuccess(this.props.stopEditing).send();
        }
    };

    ClubEditorRow.prototype.render = function render() {
        var _this3 = this;

        return React.createElement(
            "tr",
            { className: "editor" + (this.props.newClub ? " create" : "") },
            React.createElement(
                "td",
                { colSpan: "4" },
                React.createElement(
                    "form",
                    { onSubmit: this.onSubmit.bind(this) },
                    React.createElement(
                        "div",
                        { className: "rows" },
                        React.createElement(
                            "div",
                            { className: "col-md-5" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.club.name"),
                                React.createElement("input", {
                                    ref: function (e) {
                                        if (e) {
                                            e.select();this._name = e;
                                        }
                                    }.bind(this),
                                    className: "full-width",
                                    defaultValue: this.props.club.name })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-md-2" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.club.city"),
                                React.createElement("input", {
                                    ref: function ref(e) {
                                        return e && (_this3._city = e);
                                    },
                                    className: "full-width",
                                    defaultValue: this.props.club.city })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-md-2" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.club.external_id"),
                                React.createElement("br", null),
                                React.createElement("input", {
                                    ref: function ref(e) {
                                        return e && (_this3._external_id = e);
                                    },
                                    defaultValue: this.props.club.external_id })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-md-3" },
                            React.createElement(
                                "div",
                                { className: "buttons" },
                                React.createElement(
                                    "button",
                                    {
                                        type: "submit",
                                        className: "btn btn-primary" },
                                    (0, _loader._)("global.buttons.submit")
                                ),
                                React.createElement(
                                    "button",
                                    {
                                        type: "button",
                                        className: "btn btn-danger",
                                        onClick: this.props.stopEditing },
                                    (0, _loader._)("global.buttons.discard")
                                )
                            )
                        )
                    )
                )
            )
        );
    };

    return ClubEditorRow;
}(React.Component);

var ClubRow = function (_React$Component3) {
    _inherits(ClubRow, _React$Component3);

    function ClubRow(props) {
        _classCallCheck(this, ClubRow);

        var _this4 = _possibleConstructorReturn(this, _React$Component3.call(this, props));

        _this4.state = {
            editing: false
        };
        return _this4;
    }

    ClubRow.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    ClubRow.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    ClubRow.prototype.onDelete = function onDelete(event) {
        var _this5 = this;

        event.stopPropagation();
        (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_club"), function () {
            (0, _api.Api)("club.delete", {
                club_id: _this5.props.club.id
            }).onSuccess(function () {
                return swal.close();
            }).send();
        });
    };

    ClubRow.prototype.renderEditor = function renderEditor() {
        return React.createElement(ClubEditorRow, _extends({
            newClub: false,
            stopEditing: this.stopEditing.bind(this)
        }, this.props));
    };

    ClubRow.prototype.renderViewer = function renderViewer() {
        var c = this.props.club;
        return React.createElement(
            "tr",
            { className: "viewer", onClick: this.startEditing.bind(this) },
            React.createElement(
                "td",
                { className: "name" },
                c.name
            ),
            React.createElement(
                "td",
                { className: "city" },
                c.city
            ),
            React.createElement(
                "td",
                { className: "external-id" },
                c.external_id
            ),
            React.createElement(
                "td",
                { className: "delete" },
                React.createElement(
                    "button",
                    { className: "btn btn-danger", onClick: this.onDelete.bind(this) },
                    "X"
                )
            )
        );
    };

    ClubRow.prototype.render = function render() {
        if (this.state.editing) {
            return this.renderEditor();
        } else {
            return this.renderViewer();
        }
    };

    return ClubRow;
}(React.Component);

var ClubCreationRow = function (_React$Component4) {
    _inherits(ClubCreationRow, _React$Component4);

    function ClubCreationRow(props) {
        _classCallCheck(this, ClubCreationRow);

        var _this6 = _possibleConstructorReturn(this, _React$Component4.call(this, props));

        _this6.state = {
            editing: false
        };
        return _this6;
    }

    ClubCreationRow.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    ClubCreationRow.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    ClubCreationRow.prototype.renderEditor = function renderEditor() {
        var empty_data = {
            "name": "",
            "city": "",
            "external_id": ""
        };
        return React.createElement(ClubEditorRow, _extends({
            newClub: true,
            stopEditing: this.stopEditing.bind(this),
            club: empty_data
        }, this.props));
    };

    ClubCreationRow.prototype.renderButton = function renderButton() {
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                { colSpan: "4" },
                React.createElement(
                    "button",
                    {
                        type: "button",
                        className: "btn btn-default full-width",
                        onClick: this.startEditing.bind(this) },
                    (0, _loader._)("admin.buttons.add_club")
                )
            )
        );
    };

    ClubCreationRow.prototype.render = function render() {
        return this.state.editing ? this.renderEditor() : this.renderButton();
    };

    return ClubCreationRow;
}(React.Component);

},{"i10n/loader":27,"server/api":29,"ui/dialogs":33}],12:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.CompetitionPlan = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _loader = require("i10n/loader");

var _api = require("server/api");

var _docx = require("common/docx");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CompetitionPlan = exports.CompetitionPlan = function (_React$Component) {
    _inherits(CompetitionPlan, _React$Component);

    function CompetitionPlan(props) {
        _classCallCheck(this, CompetitionPlan);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            creating: false
        };
        return _this;
    }

    CompetitionPlan.prototype.genTours = function genTours() {
        var result = [];
        this.props.disciplines.forEach(function (discipline) {
            return discipline.tours.forEach(function (tour) {
                return result.push({
                    id: tour.id,
                    name: discipline.name + " — " + tour.name,
                    discipline_id: discipline.id,
                    discipline_name: discipline.name,
                    tour_name: tour.name
                });
            });
        });
        return result;
    };

    CompetitionPlan.prototype.renderTable = function renderTable(tours) {
        var tours_count = {};
        var tours_index = {};
        var disciplines_index = {};
        tours.forEach(function (tour) {
            return tours_index[tour.id] = tour;
        });
        this.props.items.forEach(function (item) {
            if (item.tour_id) {
                tours_count[item.tour_id] = tours_count[item.tour_id] ? tours_count[item.tour_id] + 1 : 1;
            }
        });
        var discipline_cursors = {};
        this.props.disciplines.forEach(function (discipline) {
            return discipline_cursors[discipline.id] = 0;
        });
        this.props.disciplines.forEach(function (discipline) {
            return disciplines_index[discipline.id] = discipline;
        });
        var rows = this.props.items.map(function (item) {
            var error = (tours_count[item.tour_id] || 0) > 2;
            if (item.tour_id) {
                var discipline_id = tours_index[item.tour_id].discipline_id;
                var tour_idx = discipline_cursors[discipline_id];
                if (!disciplines_index[discipline_id].tours[tour_idx] || item.tour_id !== disciplines_index[discipline_id].tours[tour_idx].id) {
                    error = true;
                    disciplines_index[discipline_id].tours.forEach(function (tour, idx) {
                        if (tour.id === item.tour_id) {
                            tour_idx = idx;
                        }
                    });
                }
                discipline_cursors[discipline_id] = tour_idx + 1;
            }
            return React.createElement(CompetitionPlanItemRow, {
                key: item.id,
                error: error,
                tours: tours,
                item: item });
        });
        var unpicked_tours = tours.filter(function (tour) {
            return !tours_count[tour.id];
        });
        var unpicked_tours_html = !unpicked_tours.length ? null : React.createElement(
            "div",
            null,
            React.createElement(
                "h4",
                null,
                (0, _loader._)("admin.headers.unpicked_tours")
            ),
            React.createElement(
                "ul",
                { className: "unpicked-tours" },
                unpicked_tours.map(function (tour) {
                    return React.createElement(
                        "li",
                        { className: "item", key: tour.id },
                        tour.name
                    );
                })
            )
        );
        return React.createElement(
            "div",
            { className: "manage-competition-plan" },
            React.createElement(
                "table",
                { className: "table table-striped" },
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "sp" },
                            (0, _loader._)("models.competition_plan_item.sp")
                        ),
                        React.createElement(
                            "th",
                            { className: "discipline" },
                            (0, _loader._)("models.competition_plan_item.discipline")
                        ),
                        React.createElement(
                            "th",
                            { className: "tour" },
                            (0, _loader._)("models.competition_plan_item.tour")
                        ),
                        React.createElement(
                            "th",
                            { className: "estimated_beginning" },
                            (0, _loader._)("models.competition_plan_item.estimated_beginning")
                        ),
                        React.createElement(
                            "th",
                            { className: "estimated_duration" },
                            (0, _loader._)("models.competition_plan_item.estimated_duration")
                        ),
                        React.createElement("th", { className: "delete" })
                    ),
                    rows,
                    React.createElement(CompetitionPlanItemCreationRow, { competition_id: this.props.competition_id, tours: tours })
                )
            ),
            unpicked_tours_html
        );
    };

    CompetitionPlan.prototype.render = function render() {
        var _this2 = this;

        // eslint-disable-line react/sort-comp
        var tours = this.genTours();
        return React.createElement(
            "div",
            { className: "app-content" },
            React.createElement(
                "header",
                { className: "app-header" },
                React.createElement(
                    "div",
                    { className: "controls" },
                    React.createElement(
                        "button",
                        { className: "btn btn-primary", onClick: function onClick() {
                                return _this2.createDocx();
                            }, key: "btn-init-tour" },
                        "DOCX"
                    )
                ),
                React.createElement(
                    "h1",
                    null,
                    (0, _loader._)("admin.headers.competition_plan_management")
                )
            ),
            React.createElement(
                "div",
                { className: "app-body" },
                this.renderTable(tours),
                React.createElement(PrintableCompetitionPlan, _extends({ ref: "printable_competition_plan", tours: tours }, this.props))
            )
        );
    };

    CompetitionPlan.prototype.createDocx = function createDocx() {
        var filename = arguments.length <= 0 || arguments[0] === undefined ? "program.docx" : arguments[0];

        (0, _docx.Docx)(filename).setMargins([10, 15, 10, 15]).setHeader(this.props.competition_name + ", " + this.props.competition_date).setTitle1((0, _loader._)("admin.headers.competition_plan")).setBody(ReactDOM.findDOMNode(this.refs.printable_competition_plan).innerHTML).save();
    };

    return CompetitionPlan;
}(React.Component);

var PrintableCompetitionPlanRow = function (_React$Component2) {
    _inherits(PrintableCompetitionPlanRow, _React$Component2);

    function PrintableCompetitionPlanRow() {
        _classCallCheck(this, PrintableCompetitionPlanRow);

        return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));
    }

    PrintableCompetitionPlanRow.prototype.renderName = function renderName() {
        var _this4 = this;

        if (this.props.item.verbose_name) {
            return React.createElement(
                "td",
                { colSpan: "2" },
                React.createElement(
                    "p",
                    null,
                    React.createElement(
                        "strong",
                        null,
                        this.props.item.verbose_name
                    )
                )
            );
        }
        if (this.props.item.tour_id) {
            var result = "";
            this.props.tours.forEach(function (tour) {
                if (tour.id === _this4.props.item.tour_id) {
                    result = tour;
                }
            });
            return [React.createElement(
                "td",
                { key: "D" },
                React.createElement(
                    "p",
                    null,
                    result.discipline_name
                )
            ), React.createElement(
                "td",
                { key: "T" },
                React.createElement(
                    "p",
                    { className: "text-center" },
                    result.tour_name
                )
            )];
        }
        return React.createElement(
            "td",
            { colSpan: "2" },
            React.createElement("p", null)
        );
    };

    PrintableCompetitionPlanRow.prototype.render = function render() {
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                null,
                React.createElement(
                    "p",
                    { className: "text-center" },
                    this.props.item.estimated_beginning || React.createElement(
                        "span",
                        null,
                        " "
                    )
                )
            ),
            this.renderName(),
            React.createElement(
                "td",
                null,
                React.createElement(
                    "p",
                    { className: "text-center" },
                    this.props.item.estimated_duration || React.createElement(
                        "span",
                        null,
                        " "
                    )
                )
            )
        );
    };

    return PrintableCompetitionPlanRow;
}(React.Component);

var PrintableCompetitionPlan = function (_React$Component3) {
    _inherits(PrintableCompetitionPlan, _React$Component3);

    function PrintableCompetitionPlan() {
        _classCallCheck(this, PrintableCompetitionPlan);

        return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));
    }

    PrintableCompetitionPlan.prototype.render = function render() {
        var _this6 = this;

        return React.createElement(
            "div",
            { className: "print-only" },
            React.createElement(
                "table",
                { className: "bordered-table" },
                React.createElement(
                    "thead",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            null,
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.competition_plan_item.estimated_beginning")
                            )
                        ),
                        React.createElement(
                            "th",
                            null,
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.competition_plan_item.discipline")
                            )
                        ),
                        React.createElement(
                            "th",
                            null,
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.competition_plan_item.tour")
                            )
                        ),
                        React.createElement(
                            "th",
                            null,
                            React.createElement(
                                "p",
                                null,
                                (0, _loader._)("models.competition_plan_item.estimated_duration")
                            )
                        )
                    )
                ),
                React.createElement(
                    "tbody",
                    null,
                    this.props.items.map(function (item) {
                        return React.createElement(PrintableCompetitionPlanRow, { item: item, tours: _this6.props.tours, key: item.id });
                    })
                )
            )
        );
    };

    return PrintableCompetitionPlan;
}(React.Component);

var CompetitionPlanItemEditorRow = function (_React$Component4) {
    _inherits(CompetitionPlanItemEditorRow, _React$Component4);

    function CompetitionPlanItemEditorRow() {
        _classCallCheck(this, CompetitionPlanItemEditorRow);

        return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));
    }

    CompetitionPlanItemEditorRow.prototype.sertialize = function sertialize() {
        return {
            sp: parseInt(this._sp.value) || 0,
            tour_id: this._tour_id.value === "" ? null : parseInt(this._tour_id.value),
            verbose_name: this._verbose_name.value,
            estimated_beginning: this._estimated_beginning.value,
            estimated_duration: this._estimated_duration.value
        };
    };

    CompetitionPlanItemEditorRow.prototype.onSubmit = function onSubmit(event) {
        event.preventDefault();
        if (!this.props.newCompetitionPlanItem) {
            (0, _api.Api)("competition_plan_item.set", {
                competition_plan_item_id: this.props.item.id,
                data: this.sertialize()
            }).onSuccess(this.props.stopEditing).send();
        } else {
            (0, _api.Api)("competition_plan_item.create", {
                competition_id: this.props.competition_id,
                data: this.sertialize()
            }).onSuccess(this.props.stopEditing).send();
        }
    };

    CompetitionPlanItemEditorRow.prototype.render = function render() {
        var _this8 = this;

        return React.createElement(
            "tr",
            { className: "editor" + (this.props.newCompetitionPlanItem ? " create" : "") },
            React.createElement(
                "td",
                { colSpan: "6" },
                React.createElement(
                    "form",
                    { onSubmit: this.onSubmit.bind(this) },
                    React.createElement(
                        "div",
                        { className: "rows" },
                        React.createElement(
                            "div",
                            { className: "col-md-2" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.competition_plan_item.sp"),
                                React.createElement("input", {
                                    ref: function (e) {
                                        if (e) {
                                            e.select();this._sp = e;
                                        }
                                    }.bind(this),
                                    className: "full-width",
                                    defaultValue: this.props.item.sp })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-md-5" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.competition_plan_item.verbose_name"),
                                React.createElement("input", {
                                    ref: function ref(e) {
                                        return e && (_this8._verbose_name = e);
                                    },
                                    className: "full-width",
                                    defaultValue: this.props.item.verbose_name })
                            ),
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.competition_plan_item.tour"),
                                React.createElement(
                                    "select",
                                    {
                                        ref: function ref(e) {
                                            return e && (_this8._tour_id = e);
                                        },
                                        className: "full-width",
                                        defaultValue: this.props.item.tour_id || "" },
                                    React.createElement(
                                        "option",
                                        { value: "" },
                                        "----------"
                                    ),
                                    this.props.tours.map(function (tour) {
                                        return React.createElement(
                                            "option",
                                            { value: tour.id, key: tour.id },
                                            tour.name
                                        );
                                    })
                                )
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-md-2" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.competition_plan_item.estimated_beginning"),
                                React.createElement("input", {
                                    ref: function ref(e) {
                                        return e && (_this8._estimated_beginning = e);
                                    },
                                    className: "full-width",
                                    defaultValue: this.props.item.estimated_beginning })
                            ),
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.competition_plan_item.estimated_duration"),
                                React.createElement("input", {
                                    ref: function ref(e) {
                                        return e && (_this8._estimated_duration = e);
                                    },
                                    className: "full-width",
                                    defaultValue: this.props.item.estimated_duration })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-md-3" },
                            React.createElement(
                                "div",
                                { className: "buttons" },
                                React.createElement(
                                    "button",
                                    {
                                        type: "submit",
                                        className: "btn btn-primary" },
                                    (0, _loader._)("global.buttons.submit")
                                ),
                                React.createElement(
                                    "button",
                                    {
                                        type: "button",
                                        className: "btn btn-danger",
                                        onClick: this.props.stopEditing },
                                    (0, _loader._)("global.buttons.discard")
                                )
                            )
                        )
                    )
                )
            )
        );
    };

    return CompetitionPlanItemEditorRow;
}(React.Component);

var CompetitionPlanItemRow = function (_React$Component5) {
    _inherits(CompetitionPlanItemRow, _React$Component5);

    function CompetitionPlanItemRow(props) {
        _classCallCheck(this, CompetitionPlanItemRow);

        var _this9 = _possibleConstructorReturn(this, _React$Component5.call(this, props));

        _this9.state = {
            editing: false
        };
        return _this9;
    }

    CompetitionPlanItemRow.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    CompetitionPlanItemRow.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    CompetitionPlanItemRow.prototype.onDelete = function onDelete(event) {
        event.stopPropagation();
        (0, _api.Api)("competition_plan_item.delete", {
            competition_plan_item_id: this.props.item.id
        }).send();
    };

    CompetitionPlanItemRow.prototype.getName = function getName() {
        var c = this.props.item;
        if (c.verbose_name) {
            return React.createElement(
                "td",
                { colSpan: "2" },
                React.createElement(
                    "b",
                    null,
                    c.verbose_name
                )
            );
        }
        var result = React.createElement("td", { colSpan: "2" });
        this.props.tours.forEach(function (tour) {
            if (tour.id === c.tour_id) {
                result = [React.createElement(
                    "td",
                    { key: "D" },
                    tour.discipline_name
                ), React.createElement(
                    "td",
                    { key: "T" },
                    tour.tour_name
                )];
            }
        });
        return result;
    };

    CompetitionPlanItemRow.prototype.renderEditor = function renderEditor() {
        return React.createElement(CompetitionPlanItemEditorRow, _extends({
            newCompetitionPlanItem: false,
            stopEditing: this.stopEditing.bind(this)
        }, this.props));
    };

    CompetitionPlanItemRow.prototype.renderViewer = function renderViewer() {
        var c = this.props.item;
        return React.createElement(
            "tr",
            { className: "viewer" + (this.props.error ? " error" : ""), onClick: this.startEditing.bind(this) },
            React.createElement(
                "td",
                { className: "sp" },
                c.sp
            ),
            this.getName(),
            React.createElement(
                "td",
                { className: "estimated_beginning" },
                c.estimated_beginning
            ),
            React.createElement(
                "td",
                { className: "estimated_duration" },
                c.estimated_duration
            ),
            React.createElement(
                "td",
                { className: "delete" },
                React.createElement(
                    "button",
                    { className: "btn btn-danger", onClick: this.onDelete.bind(this) },
                    "X"
                )
            )
        );
    };

    CompetitionPlanItemRow.prototype.render = function render() {
        if (this.state.editing) {
            return this.renderEditor();
        } else {
            return this.renderViewer();
        }
    };

    return CompetitionPlanItemRow;
}(React.Component);

var CompetitionPlanItemCreationRow = function (_React$Component6) {
    _inherits(CompetitionPlanItemCreationRow, _React$Component6);

    function CompetitionPlanItemCreationRow(props) {
        _classCallCheck(this, CompetitionPlanItemCreationRow);

        var _this10 = _possibleConstructorReturn(this, _React$Component6.call(this, props));

        _this10.state = {
            editing: false
        };
        return _this10;
    }

    CompetitionPlanItemCreationRow.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    CompetitionPlanItemCreationRow.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    CompetitionPlanItemCreationRow.prototype.renderEditor = function renderEditor() {
        var empty_data = {
            "sp": "",
            "verbose_name": "",
            "tour_id": null,
            "estimated_duration": "",
            "estimated_beginning": ""
        };
        return React.createElement(CompetitionPlanItemEditorRow, _extends({
            newCompetitionPlanItem: true,
            stopEditing: this.stopEditing.bind(this),
            item: empty_data
        }, this.props));
    };

    CompetitionPlanItemCreationRow.prototype.renderButton = function renderButton() {
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                { colSpan: "6" },
                React.createElement(
                    "button",
                    {
                        type: "button",
                        className: "btn btn-default full-width",
                        onClick: this.startEditing.bind(this) },
                    (0, _loader._)("admin.buttons.add_competition_plan_item")
                )
            )
        );
    };

    CompetitionPlanItemCreationRow.prototype.render = function render() {
        return this.state.editing ? this.renderEditor() : this.renderButton();
    };

    return CompetitionPlanItemCreationRow;
}(React.Component);

},{"common/docx":24,"i10n/loader":27,"server/api":29}],13:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.CompetitionReport = undefined;

var _loader = require("i10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _printable = require("ui/printable");

var _docx = require("common/docx");

var _discipline_results = require("../judging/discipline_results");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CompetitionReport = exports.CompetitionReport = function (_React$Component) {
    _inherits(CompetitionReport, _React$Component);

    function CompetitionReport(props) {
        _classCallCheck(this, CompetitionReport);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            competition: null
        };
        _message_dispatcher.message_dispatcher.addListener("db_update", _this.reloadFromStorage.bind(_this));
        _message_dispatcher.message_dispatcher.addListener("reload_data", _this.loadData.bind(_this));
        return _this;
    }

    CompetitionReport.prototype.componentWillMount = function componentWillMount() {
        this.storage = _storage.storage.getDomain("start_list_" + this.props.competition_id);
        this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
        this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
        this.loadData();
    };

    CompetitionReport.prototype.componentWillUnmount = function componentWillUnmount() {
        _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
        _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
        _storage.storage.delDomain("start_list_" + this.props.competition_id);
    };

    CompetitionReport.prototype.reloadFromStorage = function reloadFromStorage() {
        var data = this.storage.get("Competition").by_id(this.props.competition_id).serialize({
            disciplines: {},
            judges: {},
            clubs: {
                participants: {}
            }
        });
        this.setState({
            competition: data
        });
    };

    CompetitionReport.prototype.loadData = function loadData() {
        (0, _api.Api)("competition.get", {
            competition_id: this.props.competition_id,
            children: {
                clubs: {
                    participants: {}
                },
                disciplines: {},
                judges: {}
            }
        }).addToDB("Competition", this.props.competition_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
    };

    CompetitionReport.prototype.renderInfoTable = function renderInfoTable() {
        return React.createElement(
            "table",
            { className: "info" },
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        { className: "w-40" },
                        React.createElement(
                            "p",
                            { className: "text-left" },
                            (0, _loader._)("admin.labels.competition_name")
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "w-60" },
                        React.createElement(
                            "p",
                            null,
                            React.createElement(
                                "strong",
                                null,
                                this.state.competition.name
                            )
                        )
                    )
                ),
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        { className: "w-40" },
                        React.createElement(
                            "p",
                            { className: "text-left" },
                            (0, _loader._)("admin.labels.competition_date")
                        )
                    ),
                    React.createElement(
                        "td",
                        { className: "w-60" },
                        React.createElement(
                            "p",
                            null,
                            React.createElement(
                                "strong",
                                null,
                                this.state.competition.date
                            )
                        )
                    )
                ),
                this.state.competition.info.map(function (row) {
                    return React.createElement(
                        "tr",
                        { key: row[0] },
                        React.createElement(
                            "th",
                            { className: "w-40" },
                            React.createElement(
                                "p",
                                { className: "text-left" },
                                row[0]
                            )
                        ),
                        React.createElement(
                            "td",
                            { className: "w-60" },
                            React.createElement(
                                "p",
                                null,
                                row[1]
                            )
                        )
                    );
                })
            )
        );
    };

    CompetitionReport.prototype.renderClubs = function renderClubs() {
        var clubs = this.state.competition.clubs.filter(function (club) {
            return club.participants.length > 0;
        });
        var clubs_dict = {};
        var cities = [];
        clubs.forEach(function (club) {
            return clubs_dict[club.city] = [];
        });
        clubs.forEach(function (club) {
            return clubs_dict[club.city].push(club.name);
        });
        clubs.forEach(function (club) {
            return clubs_dict[club.city].sort;
        });
        Object.getOwnPropertyNames(clubs_dict).forEach(function (city) {
            return cities.push(city);
        });
        cities.sort();
        return React.createElement(
            "table",
            { className: "clubs" },
            React.createElement(
                "tbody",
                null,
                cities.map(function (city) {
                    return React.createElement(
                        "tr",
                        { key: city, className: "va-top" },
                        React.createElement(
                            "th",
                            { className: "w-20" },
                            React.createElement(
                                "p",
                                { className: "text-left" },
                                city
                            )
                        ),
                        React.createElement(
                            "td",
                            { className: "w-80" },
                            React.createElement(
                                "p",
                                null,
                                clubs_dict[city].join(", ")
                            )
                        )
                    );
                })
            )
        );
    };

    CompetitionReport.prototype.renderJudges = function renderJudges() {
        return React.createElement(
            "table",
            { className: "judges" },
            React.createElement(
                "tbody",
                null,
                this.state.competition.judges.map(function (judge) {
                    return React.createElement(
                        "tr",
                        { key: judge.id },
                        React.createElement(
                            "th",
                            { className: "w-40" },
                            React.createElement(
                                "p",
                                { className: "text-left" },
                                judge.role_description || (0, _loader._)("global.phrases.judge_n", judge.number)
                            )
                        ),
                        React.createElement(
                            "td",
                            { className: "w-60" },
                            React.createElement(
                                "p",
                                null,
                                judge.name,
                                ", ",
                                judge.category
                            )
                        )
                    );
                })
            )
        );
    };

    CompetitionReport.prototype.renderResults = function renderResults() {
        return this.state.competition.disciplines.map(function (ic) {
            return React.createElement(
                "div",
                { key: ic.id },
                React.createElement(
                    "h5",
                    null,
                    React.createElement(
                        "p",
                        null,
                        ic.name
                    )
                ),
                React.createElement(_discipline_results.DisciplineResults, {
                    discipline_id: ic.id,
                    renderer: "table" })
            );
        });
    };

    CompetitionReport.prototype.render = function render() {
        var _this2 = this;

        // eslint-disable-line react/sort-comp
        if (this.state.competition === null) {
            return React.createElement(_components.Loader, null);
        }
        var body = React.createElement(
            "div",
            { className: "competition-report" },
            this.renderInfoTable(),
            React.createElement(
                "h4",
                null,
                React.createElement(
                    "p",
                    null,
                    (0, _loader._)("admin.headers.clubs")
                )
            ),
            this.renderClubs(),
            React.createElement(
                "h4",
                null,
                React.createElement(
                    "p",
                    null,
                    (0, _loader._)("admin.headers.judges")
                )
            ),
            this.renderJudges(),
            React.createElement(
                "h4",
                null,
                React.createElement(
                    "p",
                    null,
                    (0, _loader._)("admin.headers.competition_results")
                )
            ),
            this.renderResults()
        );
        return React.createElement(
            "div",
            { className: "app-content" },
            React.createElement(
                "header",
                { className: "app-header" },
                React.createElement(
                    "div",
                    { className: "controls" },
                    React.createElement(
                        "button",
                        { className: "btn btn-primary", onClick: function onClick() {
                                return _this2.createDocx();
                            } },
                        "DOCX"
                    )
                ),
                React.createElement(
                    "h1",
                    null,
                    (0, _loader._)("admin.headers.competition_report")
                )
            ),
            React.createElement(
                "div",
                { className: "app-body" },
                React.createElement(_printable.Printable, {
                    ref: "printable",
                    title1: (0, _loader._)("admin.headers.competition_report"),
                    body: body })
            )
        );
    };

    CompetitionReport.prototype.createDocx = function createDocx() {
        var filename = arguments.length <= 0 || arguments[0] === undefined ? "report.docx" : arguments[0];

        (0, _docx.Docx)(filename).setMargins([10, 15, 10, 25]).setTitle1((0, _loader._)("admin.headers.competition_report")).setBody(this.refs.printable.fetchPrintableData()).addStyle(".spacer td", "height", "5pt").addStyle(".tour-name", "background", "#ddd").addStyle(".bordered-table .sportsmen td, .bordered-table .sportsmen th", "border", "none").addStyle(".bordered-table .sportsmen td, .bordered-table .sportsmen th", "padding", "0").addStyle(".sportsmen", "width", "100%").save();
    };

    return CompetitionReport;
}(React.Component);

},{"../judging/discipline_results":2,"common/docx":24,"i10n/loader":27,"server/api":29,"server/message_dispatcher":30,"server/storage":31,"ui/components":32,"ui/printable":34}],14:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.Disciplines = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _loader = require("i10n/loader");

var _api = require("server/api");

var _dialogs = require("ui/dialogs");

var _definitions = require("common/definitions");

var _tools = require("common/tools");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Disciplines = exports.Disciplines = function (_React$Component) {
    _inherits(Disciplines, _React$Component);

    function Disciplines(props) {
        _classCallCheck(this, Disciplines);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            creating: false
        };
        return _this;
    }

    Disciplines.prototype.renderTable = function renderTable() {
        var rows = this.props.disciplines.map(function (discipline) {
            return React.createElement(DisciplineRow, {
                key: discipline.id,
                judges: this.props.judges,
                discipline: discipline,
                all_disciplines: this.props.disciplines });
        }.bind(this));
        return React.createElement(
            "div",
            { className: "manage-disciplines" },
            React.createElement(
                "table",
                { className: "table table-striped" },
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "name" },
                            (0, _loader._)("models.discipline.name")
                        ),
                        React.createElement(
                            "th",
                            { className: "sp" },
                            (0, _loader._)("models.discipline.sp")
                        ),
                        React.createElement(
                            "th",
                            { className: "external-id" },
                            (0, _loader._)("models.discipline.external_id")
                        ),
                        React.createElement("th", { className: "delete" })
                    ),
                    rows,
                    React.createElement(DisciplineCreationRow, {
                        judges: this.props.judges,
                        competition_id: this.props.competition_id })
                )
            )
        );
    };

    Disciplines.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "app-content" },
            React.createElement(
                "header",
                { className: "app-header" },
                React.createElement(
                    "h1",
                    null,
                    (0, _loader._)("admin.headers.disciplines_management")
                )
            ),
            React.createElement(
                "div",
                { className: "app-body" },
                this.renderTable()
            )
        );
    };

    return Disciplines;
}(React.Component);

var DisciplineEditorRow = function (_React$Component2) {
    _inherits(DisciplineEditorRow, _React$Component2);

    function DisciplineEditorRow(props) {
        _classCallCheck(this, DisciplineEditorRow);

        var _this2 = _possibleConstructorReturn(this, _React$Component2.call(this, props));

        _this2.state = {
            discipline_judges: props.discipline.discipline_judges.map(function (dj) {
                return {
                    judge_id: dj.judge.id,
                    role: dj.role
                };
            })
        };
        return _this2;
    }

    DisciplineEditorRow.prototype.addDisciplineJudge = function addDisciplineJudge() {
        var discipline_judges = (0, _tools.clone)(this.state.discipline_judges);
        var new_idx = discipline_judges.length;
        discipline_judges.push({
            judge_id: this.props.judges[0] && this.props.judges[0].id,
            role: _definitions.GL.judge_roles[0]
        });
        this.latest_added = "j" + new_idx;
        this.setState({
            discipline_judges: discipline_judges
        });
    };

    DisciplineEditorRow.prototype.removeDisciplineJudge = function removeDisciplineJudge(idx) {
        var discipline_judges = (0, _tools.clone)(this.state.discipline_judges);
        discipline_judges.splice(idx, 1);
        this.setState({
            discipline_judges: discipline_judges
        });
    };

    DisciplineEditorRow.prototype.validate = function validate() {
        var used_judges = {};
        this.state.discipline_judges.forEach(function (dj) {
            if (used_judges[dj.judge_id]) {
                var judge = this.props.judges.filter(function (j) {
                    return j.id === dj.judge_id;
                })[0];
                throw (0, _loader._)("errors.discipline_judge.repeating_judge", judge.name);
            }
            used_judges[dj.judge_id] = true;
        }.bind(this));
    };

    DisciplineEditorRow.prototype.serialize = function serialize() {
        return {
            name: this._name.value,
            sp: this._sp.value,
            discipline_judges: this.state.discipline_judges.map(function (dj) {
                return {
                    judge_id: parseInt(dj.judge_id),
                    role: dj.role
                };
            }),
            external_id: this._external_id.value
        };
    };

    DisciplineEditorRow.prototype.onDisciplineJudgeChange = function onDisciplineJudgeChange(idx, field, event) {
        var discipline_judges = (0, _tools.clone)(this.state.discipline_judges);
        discipline_judges[idx][field] = event.target.value;
        this.setState({
            discipline_judges: discipline_judges
        });
    };

    DisciplineEditorRow.prototype.onSubmit = function onSubmit(event) {
        event.preventDefault();
        try {
            this.validate();
            if (!this.props.newDiscipline) {
                (0, _api.Api)("discipline.set", {
                    discipline_id: this.props.discipline.id,
                    data: this.serialize()
                }).onSuccess(this.props.stopEditing).send();
            } else {
                (0, _api.Api)("discipline.create", {
                    competition_id: this.props.competition_id,
                    data: this.serialize()
                }).onSuccess(this.props.stopEditing).send();
            }
        } catch (ex) {
            (0, _dialogs.showError)(ex);
        }
    };

    DisciplineEditorRow.prototype.render = function render() {
        var _this3 = this;

        return React.createElement(
            "tr",
            { className: "editor" + (this.props.newDiscipline ? " create" : "") },
            React.createElement(
                "td",
                { colSpan: "5" },
                React.createElement(
                    "form",
                    { onSubmit: this.onSubmit.bind(this) },
                    React.createElement(
                        "div",
                        { className: "row" },
                        React.createElement(
                            "div",
                            { className: "col-lg-4" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.discipline.name"),
                                React.createElement("input", {
                                    ref: function (e) {
                                        if (e) {
                                            this._name = e;
                                        }
                                    }.bind(this),
                                    className: "full-width",
                                    defaultValue: this.props.discipline.name })
                            ),
                            React.createElement(
                                "div",
                                { className: "row" },
                                React.createElement(
                                    "div",
                                    { className: "col-lg-6" },
                                    React.createElement(
                                        "label",
                                        { className: "full-width" },
                                        (0, _loader._)("models.discipline.sp"),
                                        React.createElement("input", {
                                            ref: function ref(e) {
                                                return e && (_this3._sp = e);
                                            },
                                            className: "full-width",
                                            defaultValue: this.props.discipline.sp })
                                    )
                                ),
                                React.createElement(
                                    "div",
                                    { className: "col-lg-6" },
                                    React.createElement(
                                        "label",
                                        { className: "full-width" },
                                        (0, _loader._)("models.discipline.external_id"),
                                        React.createElement("br", null),
                                        React.createElement("input", {
                                            ref: function ref(e) {
                                                return e && (_this3._external_id = e);
                                            },
                                            className: "full-width",
                                            defaultValue: this.props.discipline.external_id })
                                    )
                                )
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-lg-6" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.discipline.discipline_judges")
                            ),
                            this.state.discipline_judges.map(function (dj, idx) {
                                return React.createElement(
                                    "div",
                                    { key: idx },
                                    React.createElement(
                                        "select",
                                        { value: dj.judge_id, className: "judge", onChange: _this3.onDisciplineJudgeChange.bind(_this3, idx, "judge_id") },
                                        _this3.props.judges.map(function (j) {
                                            return React.createElement(
                                                "option",
                                                { value: j.id, key: j.id },
                                                j.name
                                            );
                                        })
                                    ),
                                    React.createElement(
                                        "select",
                                        { value: dj.role, className: "judge-role", onChange: _this3.onDisciplineJudgeChange.bind(_this3, idx, "role") },
                                        _definitions.GL.judge_roles.map(function (jr) {
                                            return React.createElement(
                                                "option",
                                                { value: jr, key: jr },
                                                (0, _loader._)("judge_roles." + jr)
                                            );
                                        })
                                    ),
                                    React.createElement(
                                        "button",
                                        {
                                            type: "button",
                                            className: "del btn btn-danger",
                                            onClick: _this3.removeDisciplineJudge.bind(_this3, idx) },
                                        "X"
                                    )
                                );
                            }),
                            React.createElement(
                                "button",
                                {
                                    type: "button",
                                    className: "full-width btn btn-sm btn-default",
                                    onClick: this.addDisciplineJudge.bind(this) },
                                (0, _loader._)("global.buttons.add")
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-lg-2" },
                            React.createElement(
                                "label",
                                null,
                                " "
                            ),
                            React.createElement(
                                "div",
                                { className: "buttons" },
                                React.createElement(
                                    "button",
                                    {
                                        type: "submit",
                                        className: "btn btn-primary" },
                                    (0, _loader._)("global.buttons.submit")
                                ),
                                React.createElement("br", null),
                                React.createElement(
                                    "button",
                                    {
                                        type: "button",
                                        className: "btn btn-danger",
                                        onClick: this.props.stopEditing },
                                    (0, _loader._)("global.buttons.discard")
                                )
                            )
                        )
                    )
                )
            )
        );
    };

    return DisciplineEditorRow;
}(React.Component);

var DisciplineRow = function (_React$Component3) {
    _inherits(DisciplineRow, _React$Component3);

    function DisciplineRow(props) {
        _classCallCheck(this, DisciplineRow);

        var _this4 = _possibleConstructorReturn(this, _React$Component3.call(this, props));

        _this4.state = {
            editing: false
        };
        return _this4;
    }

    DisciplineRow.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    DisciplineRow.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    DisciplineRow.prototype.onDelete = function onDelete(event) {
        var _this5 = this;

        event.stopPropagation();
        (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_discipline"), function () {
            (0, _api.Api)("discipline.delete", {
                discipline_id: _this5.props.discipline.id
            }).onSuccess(function () {
                return swal.close();
            }).send();
        });
    };

    DisciplineRow.prototype.renderEditor = function renderEditor() {
        return React.createElement(DisciplineEditorRow, _extends({
            newDiscipline: false,
            stopEditing: this.stopEditing.bind(this)
        }, this.props));
    };

    DisciplineRow.prototype.renderViewer = function renderViewer() {
        var c = this.props.discipline;
        return React.createElement(
            "tr",
            { className: "viewer", onClick: this.startEditing.bind(this) },
            React.createElement(
                "td",
                { className: "name" },
                c.name
            ),
            React.createElement(
                "td",
                { className: "sp" },
                c.sp
            ),
            React.createElement(
                "td",
                { className: "external-id" },
                c.external_id
            ),
            React.createElement(
                "td",
                { className: "delete" },
                React.createElement(
                    "button",
                    { className: "btn btn-danger", onClick: this.onDelete.bind(this) },
                    "X"
                )
            )
        );
    };

    DisciplineRow.prototype.render = function render() {
        if (this.state.editing) {
            return this.renderEditor();
        } else {
            return this.renderViewer();
        }
    };

    return DisciplineRow;
}(React.Component);

var DisciplineCreationRow = function (_React$Component4) {
    _inherits(DisciplineCreationRow, _React$Component4);

    function DisciplineCreationRow(props) {
        _classCallCheck(this, DisciplineCreationRow);

        var _this6 = _possibleConstructorReturn(this, _React$Component4.call(this, props));

        _this6.state = {
            editing: false
        };
        return _this6;
    }

    DisciplineCreationRow.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    DisciplineCreationRow.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    DisciplineCreationRow.prototype.renderEditor = function renderEditor() {
        var empty_data = {
            "name": "",
            "discipline_judges": [],
            "sp": "0",
            "external_id": ""
        };
        return React.createElement(DisciplineEditorRow, _extends({
            newDiscipline: true,
            stopEditing: this.stopEditing.bind(this),
            discipline: empty_data
        }, this.props));
    };

    DisciplineCreationRow.prototype.renderButton = function renderButton() {
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                { colSpan: "5" },
                React.createElement(
                    "button",
                    {
                        type: "button",
                        className: "btn btn-default full-width",
                        onClick: this.startEditing.bind(this) },
                    (0, _loader._)("admin.buttons.add_discipline")
                )
            )
        );
    };

    DisciplineCreationRow.prototype.render = function render() {
        return this.state.editing ? this.renderEditor() : this.renderButton();
    };

    return DisciplineCreationRow;
}(React.Component);

},{"common/definitions":23,"common/tools":26,"i10n/loader":27,"server/api":29,"ui/dialogs":33}],15:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.ImportExport = undefined;

var _loader = require("i10n/loader");

var _api = require("server/api");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ImportExport = exports.ImportExport = function (_React$Component) {
    _inherits(ImportExport, _React$Component);

    function ImportExport(props) {
        _classCallCheck(this, ImportExport);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            import_files: [],
            submitting: false
        };
        return _this;
    }

    ImportExport.prototype.import = function _import() {
        var _this2 = this;

        var reader = new FileReader();
        reader.onload = function (f) {
            _this2.setState({
                submitting: true
            });
            (0, _api.Api)("competition.load", {
                competition_id: _this2.props.competition_id,
                data: f.target.result
            }).onSuccess(function () {
                swal({
                    title: (0, _loader._)("global.messages.success"),
                    type: "success",
                    animation: false
                });
            }).onDone(function () {
                _this2.setState({
                    submitting: false
                });
            }).send();
        };
        reader.readAsText(this.state.import_files[0]);
    };

    ImportExport.prototype.export = function _export() {
        (0, _api.Api)("competition.export", { competition_id: this.props.competition_id }).onSuccess(function (r) {
            return saveAs(new Blob([JSON.stringify(r)], { type: 'application/json' }), "rockjudge.export.json");
        }).send();
    };

    ImportExport.prototype.onSubmit = function onSubmit(event) {
        event.preventDefault();
        var data = this._input.value;
    };

    ImportExport.prototype.render = function render() {
        var _this3 = this;

        return React.createElement(
            "div",
            { className: "app-content load-competition-page" },
            React.createElement(
                "header",
                { className: "app-head" },
                React.createElement(
                    "h1",
                    null,
                    (0, _loader._)("admin.headers.import_export")
                )
            ),
            React.createElement(
                "div",
                { className: "import-export" },
                React.createElement(
                    "h3",
                    null,
                    (0, _loader._)("admin.headers.import_competition")
                ),
                React.createElement(
                    "form",
                    { className: "import-form", onSubmit: function onSubmit(e) {
                            e.preventDefault();_this3.import();
                        } },
                    React.createElement(
                        "label",
                        null,
                        React.createElement(
                            "div",
                            null,
                            (0, _loader._)("global.labels.browse")
                        ),
                        this.state.import_files.length === 0 ? (0, _loader._)("admin.labels.no_files_selected") : this.state.import_files[0].name,
                        React.createElement("input", { type: "file",
                            onChange: function onChange(e) {
                                return _this3.setState({ import_files: e.target.files });
                            } })
                    ),
                    React.createElement("br", null),
                    React.createElement(
                        "button",
                        { type: "submit",
                            className: "btn btn-primary",
                            disabled: this.state.import_files.length !== 1 || this.state.submitting },
                        (0, _loader._)("admin.buttons.import")
                    )
                ),
                React.createElement(
                    "h3",
                    null,
                    (0, _loader._)("admin.headers.export_competition")
                ),
                React.createElement(
                    "button",
                    { type: "button",
                        className: "btn btn-primary",
                        onClick: this.export.bind(this) },
                    (0, _loader._)("admin.buttons.export")
                )
            )
        );
    };

    return ImportExport;
}(React.Component);

},{"i10n/loader":27,"server/api":29}],16:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.Judges = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _loader = require("i10n/loader");

var _api = require("server/api");

var _dialogs = require("ui/dialogs");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Judges = exports.Judges = function (_React$Component) {
    _inherits(Judges, _React$Component);

    function Judges(props) {
        _classCallCheck(this, Judges);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            creating: false
        };
        return _this;
    }

    Judges.prototype.renderTable = function renderTable() {
        var rows = this.props.judges.map(function (judge) {
            return React.createElement(JudgeRow, {
                key: judge.id,
                judge: judge });
        }.bind(this));
        return React.createElement(
            "div",
            { className: "manage-judges" },
            React.createElement(
                "table",
                { className: "table table-striped" },
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "role_description" },
                            (0, _loader._)("models.judge.role_description")
                        ),
                        React.createElement(
                            "th",
                            { className: "name" },
                            (0, _loader._)("models.judge.name")
                        ),
                        React.createElement(
                            "th",
                            { className: "category" },
                            (0, _loader._)("models.judge.category")
                        ),
                        React.createElement("th", { className: "delete" })
                    ),
                    rows,
                    React.createElement(JudgeCreationRow, { competition_id: this.props.competition_id })
                )
            )
        );
    };

    Judges.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "app-content" },
            React.createElement(
                "header",
                { className: "app-header" },
                React.createElement(
                    "h1",
                    null,
                    (0, _loader._)("admin.headers.judges_management")
                )
            ),
            React.createElement(
                "div",
                { className: "app-body" },
                this.renderTable()
            )
        );
    };

    return Judges;
}(React.Component);

var JudgeEditorRow = function (_React$Component2) {
    _inherits(JudgeEditorRow, _React$Component2);

    function JudgeEditorRow() {
        _classCallCheck(this, JudgeEditorRow);

        return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));
    }

    JudgeEditorRow.prototype.sertialize = function sertialize() {
        return {
            name: this._name.value,
            number: this._number.value,
            category: this._category.value,
            role_description: this._role_description.value,
            sp: this._sp.value,
            external_id: this._external_id.value
        };
    };

    JudgeEditorRow.prototype.onSubmit = function onSubmit(event) {
        event.preventDefault();
        if (!this.props.newJudge) {
            (0, _api.Api)("judge.set", {
                judge_id: this.props.judge.id,
                data: this.sertialize()
            }).onSuccess(this.props.stopEditing).send();
        } else {
            (0, _api.Api)("judge.create", {
                competition_id: this.props.competition_id,
                data: this.sertialize()
            }).onSuccess(this.props.stopEditing).send();
        }
    };

    JudgeEditorRow.prototype.render = function render() {
        var _this3 = this;

        return React.createElement(
            "tr",
            { className: "editor" + (this.props.newJudge ? " create" : "") },
            React.createElement(
                "td",
                { colSpan: "5" },
                React.createElement(
                    "form",
                    { onSubmit: this.onSubmit.bind(this) },
                    React.createElement(
                        "div",
                        { className: "row" },
                        React.createElement(
                            "div",
                            { className: "col-lg-1" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.judge.number"),
                                React.createElement("input", {
                                    ref: function ref(e) {
                                        if (e) {
                                            e.select();_this3._number = e;
                                        }
                                    },
                                    className: "full-width",
                                    defaultValue: this.props.judge.number })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-lg-1" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.judge.category"),
                                React.createElement("input", {
                                    ref: function ref(e) {
                                        return e && (_this3._category = e);
                                    },
                                    className: "full-width",
                                    defaultValue: this.props.judge.category })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-lg-3" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.judge.name"),
                                React.createElement("input", {
                                    ref: function ref(e) {
                                        return e && (_this3._name = e);
                                    },
                                    className: "full-width",
                                    defaultValue: this.props.judge.name })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-lg-3" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.judge.role_description"),
                                React.createElement("input", {
                                    ref: function ref(e) {
                                        return e && (_this3._role_description = e);
                                    },
                                    className: "full-width",
                                    defaultValue: this.props.judge.role_description })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-lg-1" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.judge.external_id"),
                                React.createElement("input", {
                                    ref: function ref(e) {
                                        return e && (_this3._external_id = e);
                                    },
                                    className: "full-width",
                                    defaultValue: this.props.judge.external_id })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-lg-1" },
                            React.createElement(
                                "label",
                                { className: "full-width" },
                                (0, _loader._)("models.judge.sp"),
                                React.createElement("input", {
                                    ref: function ref(e) {
                                        return e && (_this3._sp = e);
                                    },
                                    className: "full-width",
                                    defaultValue: this.props.judge.sp })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-lg-2" },
                            React.createElement(
                                "div",
                                { className: "buttons" },
                                React.createElement(
                                    "button",
                                    {
                                        type: "submit",
                                        className: "btn btn-sm btn-primary" },
                                    (0, _loader._)("global.buttons.submit")
                                ),
                                React.createElement(
                                    "button",
                                    {
                                        type: "button",
                                        className: "btn btn-sm btn-danger",
                                        onClick: this.props.stopEditing },
                                    (0, _loader._)("global.buttons.discard")
                                )
                            )
                        )
                    )
                )
            )
        );
    };

    return JudgeEditorRow;
}(React.Component);

var JudgeRow = function (_React$Component3) {
    _inherits(JudgeRow, _React$Component3);

    function JudgeRow(props) {
        _classCallCheck(this, JudgeRow);

        var _this4 = _possibleConstructorReturn(this, _React$Component3.call(this, props));

        _this4.state = {
            editing: false
        };
        return _this4;
    }

    JudgeRow.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    JudgeRow.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    JudgeRow.prototype.onDelete = function onDelete(event) {
        var _this5 = this;

        event.stopPropagation();
        (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_judge"), function () {
            (0, _api.Api)("judge.delete", {
                judge_id: _this5.props.judge.id
            }).onSuccess(function () {
                return swal.close();
            }).send();
        });
    };

    JudgeRow.prototype.renderEditor = function renderEditor() {
        return React.createElement(JudgeEditorRow, _extends({
            newJudge: false,
            stopEditing: this.stopEditing.bind(this)
        }, this.props));
    };

    JudgeRow.prototype.renderViewer = function renderViewer() {
        var j = this.props.judge;
        return React.createElement(
            "tr",
            { className: "viewer", onClick: this.startEditing.bind(this) },
            React.createElement(
                "td",
                { className: "role-description" },
                j.role_description || (0, _loader._)("global.phrases.judge_n", j.number)
            ),
            React.createElement(
                "td",
                { className: "name" },
                j.name
            ),
            React.createElement(
                "td",
                { className: "category" },
                j.category
            ),
            React.createElement(
                "td",
                { className: "delete" },
                React.createElement(
                    "button",
                    { className: "btn btn-danger", onClick: this.onDelete.bind(this) },
                    "X"
                )
            )
        );
    };

    JudgeRow.prototype.render = function render() {
        if (this.state.editing) {
            return this.renderEditor();
        } else {
            return this.renderViewer();
        }
    };

    return JudgeRow;
}(React.Component);

var JudgeCreationRow = function (_React$Component4) {
    _inherits(JudgeCreationRow, _React$Component4);

    function JudgeCreationRow(props) {
        _classCallCheck(this, JudgeCreationRow);

        var _this6 = _possibleConstructorReturn(this, _React$Component4.call(this, props));

        _this6.state = {
            editing: false
        };
        return _this6;
    }

    JudgeCreationRow.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    JudgeCreationRow.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    JudgeCreationRow.prototype.renderEditor = function renderEditor() {
        var empty_data = {
            "name": "",
            "number": "",
            "role_description": "",
            "category": ""
        };
        return React.createElement(JudgeEditorRow, _extends({
            newJudge: true,
            stopEditing: this.stopEditing.bind(this),
            judge: empty_data
        }, this.props));
    };

    JudgeCreationRow.prototype.renderButton = function renderButton() {
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                { colSpan: "5" },
                React.createElement(
                    "button",
                    {
                        type: "button",
                        className: "btn btn-default full-width",
                        onClick: this.startEditing.bind(this) },
                    (0, _loader._)("admin.buttons.add_judge")
                )
            )
        );
    };

    JudgeCreationRow.prototype.render = function render() {
        return this.state.editing ? this.renderEditor() : this.renderButton();
    };

    return JudgeCreationRow;
}(React.Component);

},{"i10n/loader":27,"server/api":29,"ui/dialogs":33}],17:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.Management = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _loader = require("i10n/loader");

var _clubs = require("./clubs");

var _competition_plan = require("./competition_plan");

var _competition_report = require("./competition_report");

var _disciplines = require("./disciplines");

var _import_export = require("./import_export");

var _judges = require("./judges");

var _participants = require("./participants");

var _start_list = require("./start_list");

var _tours = require("./tours");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Management = exports.Management = function (_React$Component) {
    _inherits(Management, _React$Component);

    function Management(props) {
        _classCallCheck(this, Management);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            "page": _this.getPageFromHash(),
            "page_props": _this.getPagePropsFromHash()
        };
        return _this;
    }

    Management.prototype.switchPage = function switchPage(page, props) {
        this.setState({
            page: page,
            page_props: props
        });
        var props_pairs = [];
        Object.getOwnPropertyNames(props).forEach(function (key) {
            props_pairs.push([key, props[key]]);
        });
        window.location.hash = "#management/" + page + "/" + props_pairs.map(function (p) {
            return p.join("=");
        }).join("$");
    };

    Management.prototype.getPageFromHash = function getPageFromHash() {
        var chunks = window.location.hash.substr(1).split("/");
        if (chunks[1] && ["import_export", "manage_competition_plan", "manage_tours", "manage_participants", "manage_judges", "manage_clubs", "manage_disciplines", "start_list", "competition_report"].indexOf(chunks[1]) >= 0) {
            return chunks[1];
        }
        return null;
    };

    Management.prototype.getPagePropsFromHash = function getPagePropsFromHash() {
        var chunks = window.location.hash.substr(1).split("/");
        if (chunks[2]) {
            var _ret = function () {
                var result = {};
                chunks[2].split("$").forEach(function (pair_str) {
                    var pair = pair_str.split("=");
                    result[pair[0]] = pair[1];
                });
                return {
                    v: result
                };
            }();

            if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
        }
        return {};
    };

    Management.prototype.renderDiscipline = function renderDiscipline(ic, page) {
        return React.createElement(
            "div",
            {
                className: "level-2" + (this.state.page === page && this.state.page_props.discipline_id === ic.id ? " active" : ""),
                key: ic.id,
                onClick: this.switchPage.bind(this, page, { discipline_id: ic.id }) },
            ic.name
        );
    };

    Management.prototype.renderContent = function renderContent() {
        switch (this.state.page) {
            case "import_export":
                return React.createElement(_import_export.ImportExport, { competition_id: this.props.competition_id });
            case "manage_tours":
                // Seeking for discipline with given ID
                var ic = null;
                this.props.disciplines.forEach(function (el) {
                    if (el.id === this.state.page_props.discipline_id) {
                        ic = el;
                    }
                }.bind(this));
                return React.createElement(_tours.Tours, {
                    key: this.state.page_props.discipline_id,
                    discipline: ic });
            case "manage_participants":
                return React.createElement(_participants.Participants, {
                    key: this.state.page_props.discipline_id,
                    discipline_id: this.state.page_props.discipline_id });
            case "manage_judges":
                return React.createElement(_judges.Judges, {
                    judges: this.props.judges,
                    competition_id: this.props.competition_id });
            case "manage_clubs":
                return React.createElement(_clubs.Clubs, {
                    clubs: this.props.clubs,
                    competition_id: this.props.competition_id });
            case "manage_competition_plan":
                return React.createElement(_competition_plan.CompetitionPlan, {
                    items: this.props.competition_plan,
                    disciplines: this.props.disciplines,
                    competition_name: this.props.competition_name,
                    competition_date: this.props.competition_date,
                    competition_id: this.props.competition_id });
            case "manage_disciplines":
                return React.createElement(_disciplines.Disciplines, {
                    disciplines: this.props.disciplines,
                    judges: this.props.judges,
                    competition_id: this.props.competition_id });
            case "start_list":
                return React.createElement(_start_list.StartList, {
                    competition_id: this.props.competition_id });
            case "competition_report":
                return React.createElement(_competition_report.CompetitionReport, {
                    competition_id: this.props.competition_id });
        }
    };

    Management.prototype.renderSideMenu = function renderSideMenu() {
        var ics_tours = this.props.disciplines.map(function (ic) {
            return this.renderDiscipline(ic, "manage_tours");
        }.bind(this));
        var ics_participants = this.props.disciplines.map(function (ic) {
            return this.renderDiscipline(ic, "manage_participants");
        }.bind(this));
        return React.createElement(
            "div",
            { className: "side-menu" },
            React.createElement(
                "div",
                { className: "block" },
                React.createElement(
                    "div",
                    {
                        className: "level-1" + (this.state.page === "import_export" ? " active" : ""),
                        onClick: this.switchPage.bind(this, "import_export", {}) },
                    (0, _loader._)("admin.menu.import_export")
                )
            ),
            React.createElement(
                "div",
                { className: "block" },
                React.createElement(
                    "div",
                    {
                        className: "level-1" + (this.state.page === "manage_judges" ? " active" : ""),
                        onClick: this.switchPage.bind(this, "manage_judges", {}) },
                    (0, _loader._)("admin.menu.manage_judges")
                )
            ),
            React.createElement(
                "div",
                { className: "block" },
                React.createElement(
                    "div",
                    {
                        className: "level-1" + (this.state.page === "manage_disciplines" ? " active" : ""),
                        onClick: this.switchPage.bind(this, "manage_disciplines", {}) },
                    (0, _loader._)("admin.menu.manage_disciplines")
                )
            ),
            React.createElement(
                "div",
                { className: "block" },
                React.createElement(
                    "div",
                    {
                        className: "level-1" + (this.state.page === "manage_clubs" ? " active" : ""),
                        onClick: this.switchPage.bind(this, "manage_clubs", {}) },
                    (0, _loader._)("admin.menu.manage_clubs")
                )
            ),
            React.createElement(
                "details",
                { className: "block", open: !!parseInt(sessionStorage.getItem("D_SPORTSMEN")) },
                React.createElement(
                    "summary",
                    { className: "level-1", onClick: function onClick(e) {
                            return sessionStorage.setItem("D_SPORTSMEN", e.target.parentNode.open ? 0 : 1);
                        } },
                    (0, _loader._)("admin.menu.manage_sportsmen")
                ),
                ics_participants
            ),
            React.createElement(
                "details",
                { className: "block", open: !!parseInt(sessionStorage.getItem("D_TOURS")) },
                React.createElement(
                    "summary",
                    { className: "level-1", onClick: function onClick(e) {
                            return sessionStorage.setItem("D_TOURS", e.target.parentNode.open ? 0 : 1);
                        } },
                    (0, _loader._)("admin.menu.manage_tours")
                ),
                ics_tours
            ),
            React.createElement(
                "div",
                { className: "block" },
                React.createElement(
                    "div",
                    {
                        className: "level-1" + (this.state.page === "manage_competition_plan" ? " active" : ""),
                        onClick: this.switchPage.bind(this, "manage_competition_plan", {}) },
                    (0, _loader._)("admin.menu.manage_competition_plan")
                )
            ),
            React.createElement(
                "div",
                { className: "block" },
                React.createElement(
                    "div",
                    {
                        className: "level-1" + (this.state.page === "start_list" ? " active" : ""),
                        onClick: this.switchPage.bind(this, "start_list", {}) },
                    (0, _loader._)("admin.menu.start_list")
                )
            ),
            React.createElement(
                "div",
                { className: "block" },
                React.createElement(
                    "div",
                    {
                        className: "level-1" + (this.state.page === "competition_report" ? " active" : ""),
                        onClick: this.switchPage.bind(this, "competition_report", {}) },
                    (0, _loader._)("admin.menu.competition_report")
                )
            )
        );
    };

    Management.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "app" },
            this.renderSideMenu(),
            this.renderContent()
        );
    };

    return Management;
}(React.Component);

},{"./clubs":11,"./competition_plan":12,"./competition_report":13,"./disciplines":14,"./import_export":15,"./judges":16,"./participants":18,"./start_list":19,"./tours":20,"i10n/loader":27}],18:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.Participants = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _loader = require("i10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _dialogs = require("ui/dialogs");

var _tools = require("common/tools");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Participants = exports.Participants = function (_React$Component) {
    _inherits(Participants, _React$Component);

    function Participants(props) {
        _classCallCheck(this, Participants);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            name: null
        };
        return _this;
    }

    Participants.prototype.componentWillMount = function componentWillMount() {
        this.storage = _storage.storage.getDomain("participants_" + this.props.discipline_id);
        this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
        this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
        this.loadData();
    };

    Participants.prototype.componentWillUnmount = function componentWillUnmount() {
        _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
        _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
        _storage.storage.delDomain("participants_" + this.props.discipline_id);
    };

    Participants.prototype.reloadFromStorage = function reloadFromStorage() {
        var SCHEMA = {
            competition: {
                clubs: {}
            },
            participants: {
                club: {},
                programs: {}
            }
        };
        var serialized = this.storage.get("Discipline").by_id(this.props.discipline_id).serialize(SCHEMA);
        this.setState(serialized);
    };

    Participants.prototype.loadData = function loadData() {
        (0, _api.Api)("discipline.get", {
            discipline_id: this.props.discipline_id,
            children: {
                competition: {
                    clubs: {}
                },
                participants: {
                    club: {},
                    programs: {}
                }
            }
        }).addToDB("Discipline", this.props.discipline_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
    };

    Participants.prototype.renderTable = function renderTable() {
        var _this2 = this;

        var rows = this.state.participants.map(function (participant) {
            return React.createElement(ParticipantRow, {
                key: participant.id,
                participant: participant,
                clubs: _this2.state.competition.clubs });
        });
        return React.createElement(
            "div",
            { className: "manage-participants" },
            React.createElement(
                "table",
                { className: "table table-striped" },
                React.createElement(
                    "tbody",
                    null,
                    React.createElement(
                        "tr",
                        null,
                        React.createElement(
                            "th",
                            { className: "number" },
                            (0, _loader._)("models.participant.number")
                        ),
                        React.createElement(
                            "th",
                            { className: "name" },
                            (0, _loader._)("models.participant.name")
                        ),
                        React.createElement(
                            "th",
                            { className: "club-name" },
                            (0, _loader._)("models.participant.club_name")
                        ),
                        React.createElement(
                            "th",
                            { className: "club-city" },
                            (0, _loader._)("models.participant.club_city")
                        ),
                        React.createElement("th", { className: "delete" })
                    ),
                    rows,
                    React.createElement(ParticipantCreationRow, {
                        clubs: this.state.competition.clubs,
                        discipline_id: this.props.discipline_id })
                )
            ),
            React.createElement(
                "div",
                { className: "total-participants" },
                (0, _loader._)("admin.phrases.total_n_participants", this.state.participants.length)
            )
        );
    };

    Participants.prototype.render = function render() {
        if (this.state.name === null) {
            return React.createElement(_components.Loader, null);
        }
        return React.createElement(
            "div",
            { className: "app-content" },
            React.createElement(
                "header",
                { className: "app-header" },
                React.createElement(
                    "h1",
                    null,
                    this.state.name
                ),
                React.createElement(
                    "h2",
                    null,
                    (0, _loader._)("admin.headers.participants_management")
                )
            ),
            React.createElement(
                "div",
                { className: "app-body" },
                this.renderTable()
            )
        );
    };

    return Participants;
}(React.Component);

var ClubsSelector = function (_React$Component2) {
    _inherits(ClubsSelector, _React$Component2);

    function ClubsSelector() {
        _classCallCheck(this, ClubsSelector);

        return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));
    }

    ClubsSelector.prototype.renderList = function renderList() {
        return this.props.clubs.map(function (club) {
            return React.createElement(
                "option",
                { value: club.id, key: club.id },
                club.name
            );
        });
    };

    ClubsSelector.prototype.render = function render() {
        return React.createElement(
            "select",
            {
                className: "full-width",
                value: this.props.club_id,
                onChange: this.props.onChange },
            this.renderList()
        );
    };

    return ClubsSelector;
}(React.Component);

var ParticipantEditorRowGeneralInfo = function (_React$Component3) {
    _inherits(ParticipantEditorRowGeneralInfo, _React$Component3);

    function ParticipantEditorRowGeneralInfo() {
        _classCallCheck(this, ParticipantEditorRowGeneralInfo);

        return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));
    }

    ParticipantEditorRowGeneralInfo.prototype.genOnChange = function genOnChange(field) {
        var _this5 = this;

        return function (event) {
            return _this5.props.onChange(field, event.target.value);
        };
    };

    ParticipantEditorRowGeneralInfo.prototype.render = function render() {
        return React.createElement(
            "div",
            null,
            React.createElement(
                "h4",
                null,
                (0, _loader._)("models.participant.general_info")
            ),
            React.createElement("input", {
                placeholder: (0, _loader._)("models.participant.number"),
                className: "full-width",
                value: this.props.participant.number,
                onChange: this.genOnChange("number") }),
            React.createElement(ClubsSelector, {
                className: "full-width",
                participant: this.props.participant,
                club_id: this.props.participant.club_id,
                clubs: this.props.clubs,
                onChange: this.genOnChange("club_id") }),
            React.createElement("input", {
                placeholder: (0, _loader._)("models.participant.coaches"),
                className: "full-width",
                value: this.props.participant.coaches,
                onChange: this.genOnChange("coaches") }),
            React.createElement("input", {
                placeholder: (0, _loader._)("models.participant.formation_name"),
                className: "full-width",
                value: this.props.participant.formation_name,
                onChange: this.genOnChange("formation_name") })
        );
    };

    return ParticipantEditorRowGeneralInfo;
}(React.Component);

var ParticipantEditorRowSportsman = function (_React$Component4) {
    _inherits(ParticipantEditorRowSportsman, _React$Component4);

    function ParticipantEditorRowSportsman() {
        _classCallCheck(this, ParticipantEditorRowSportsman);

        return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));
    }

    ParticipantEditorRowSportsman.prototype.genOnChange = function genOnChange(field) {
        var _this7 = this;

        return function (event) {
            return _this7.props.onChange(field, event.target.value);
        };
    };

    ParticipantEditorRowSportsman.prototype.genOnSubstituteChange = function genOnSubstituteChange() {
        var _this8 = this;

        return function (event) {
            return _this8.props.onChange("substitute", event.target.value === "Y");
        };
    };

    ParticipantEditorRowSportsman.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "sportsman" },
            React.createElement("input", {
                type: "text",
                className: "last-name",
                placeholder: (0, _loader._)("models.participant.last_name"),
                value: this.props.sportsman.last_name,
                onChange: this.genOnChange("last_name") }),
            React.createElement("input", {
                type: "text",
                className: "first-name",
                placeholder: (0, _loader._)("models.participant.first_name"),
                value: this.props.sportsman.first_name,
                onChange: this.genOnChange("first_name") }),
            React.createElement("input", {
                type: "text",
                className: "yob",
                placeholder: (0, _loader._)("models.participant.yob"),
                value: this.props.sportsman.year_of_birth,
                onChange: this.genOnChange("year_of_birth") }),
            React.createElement(
                "select",
                {
                    className: "gender",
                    value: this.props.sportsman.gender,
                    onChange: this.genOnChange("gender") },
                React.createElement(
                    "option",
                    { value: "F" },
                    (0, _loader._)("models.participant.gender_f")
                ),
                React.createElement(
                    "option",
                    { value: "M" },
                    (0, _loader._)("models.participant.gender_m")
                )
            ),
            React.createElement(
                "select",
                {
                    className: "substitute",
                    value: this.props.sportsman.substitute ? "Y" : "N",
                    onChange: this.genOnSubstituteChange() },
                React.createElement(
                    "option",
                    { value: "N" },
                    (0, _loader._)("models.participant.substitute_n")
                ),
                React.createElement(
                    "option",
                    { value: "Y" },
                    (0, _loader._)("models.participant.substitute_y")
                )
            ),
            React.createElement(
                "button",
                {
                    type: "button",
                    className: "del btn btn-danger",
                    onClick: this.props.onSportsmanRemove },
                "X"
            )
        );
    };

    return ParticipantEditorRowSportsman;
}(React.Component);

var ParticipantEditorRowSportsmenList = function (_React$Component5) {
    _inherits(ParticipantEditorRowSportsmenList, _React$Component5);

    function ParticipantEditorRowSportsmenList() {
        _classCallCheck(this, ParticipantEditorRowSportsmenList);

        return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));
    }

    ParticipantEditorRowSportsmenList.prototype.genOnChange = function genOnChange(idx) {
        var _this10 = this;

        return function (field, value) {
            var list = (0, _tools.clone)(_this10.props.sportsmen);
            list[idx][field] = value;
            _this10.props.onChange("sportsmen", list);
        };
    };

    ParticipantEditorRowSportsmenList.prototype.addSportsman = function addSportsman() {
        var list = (0, _tools.clone)(this.props.sportsmen);
        list.push({
            "last_name": "",
            "first_name": "",
            "year_of_birth": "0",
            "gender": "F",
            "substitute": false
        });
        this.props.onChange("sportsmen", list);
    };

    ParticipantEditorRowSportsmenList.prototype.removeSportsman = function removeSportsman(idx) {
        var list = (0, _tools.clone)(this.props.sportsmen);
        list.splice(idx, 1);
        this.props.onChange("sportsmen", list);
    };

    ParticipantEditorRowSportsmenList.prototype.render = function render() {
        var _this11 = this;

        return React.createElement(
            "div",
            null,
            React.createElement(
                "h4",
                null,
                (0, _loader._)("models.participant.sportsmen")
            ),
            this.props.sportsmen.map(function (sp, idx) {
                return React.createElement(ParticipantEditorRowSportsman, {
                    key: idx,
                    sportsman: sp,
                    onSportsmanRemove: _this11.removeSportsman.bind(_this11, idx),
                    onChange: _this11.genOnChange(idx) });
            }),
            React.createElement(
                "button",
                {
                    type: "button",
                    className: "full-width btn btn-sm btn-default",
                    onClick: this.addSportsman.bind(this) },
                (0, _loader._)("global.buttons.add")
            )
        );
    };

    return ParticipantEditorRowSportsmenList;
}(React.Component);

var ParticipantEditorRowProgramEditorElement = function (_React$Component6) {
    _inherits(ParticipantEditorRowProgramEditorElement, _React$Component6);

    function ParticipantEditorRowProgramEditorElement() {
        _classCallCheck(this, ParticipantEditorRowProgramEditorElement);

        return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));
    }

    ParticipantEditorRowProgramEditorElement.prototype.genOnChange = function genOnChange(field) {
        var _this13 = this;

        return function (event) {
            return _this13.props.onChange(field, event.target.value);
        };
    };

    ParticipantEditorRowProgramEditorElement.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "acrobatic" },
            React.createElement("input", {
                type: "text",
                className: "description",
                placeholder: (0, _loader._)("models.participant.acro_description"),
                value: this.props.element.description,
                onChange: this.genOnChange("description") }),
            React.createElement("input", {
                type: "text",
                className: "score",
                placeholder: (0, _loader._)("models.participant.acro_score"),
                value: this.props.element.score,
                onChange: this.genOnChange("score") }),
            React.createElement(
                "button",
                {
                    type: "button",
                    className: "del btn btn-danger",
                    onClick: this.props.onElementRemove },
                "X"
            )
        );
    };

    return ParticipantEditorRowProgramEditorElement;
}(React.Component);

var ParticipantEditorRowProgramEditorElements = function (_React$Component7) {
    _inherits(ParticipantEditorRowProgramEditorElements, _React$Component7);

    function ParticipantEditorRowProgramEditorElements(props) {
        _classCallCheck(this, ParticipantEditorRowProgramEditorElements);

        var _this14 = _possibleConstructorReturn(this, _React$Component7.call(this, props));

        _this14.state = {
            elements: (0, _tools.clone)(_this14.props.elements)
        };
        return _this14;
    }

    ParticipantEditorRowProgramEditorElements.prototype.changeElements = function changeElements(func) {
        var elements = (0, _tools.clone)(this.state.elements);
        elements = func(elements);
        this.setState({ elements: elements });
    };

    ParticipantEditorRowProgramEditorElements.prototype.onChange = function onChange(idx, field, value) {
        this.changeElements(function (elements) {
            elements[idx][field] = value;
            return elements;
        });
    };

    ParticipantEditorRowProgramEditorElements.prototype.addElement = function addElement() {
        this.changeElements(function (elements) {
            elements.push({
                description: "",
                score: 0
            });
            return elements;
        });
    };

    ParticipantEditorRowProgramEditorElements.prototype.removeElement = function removeElement(idx) {
        this.changeElements(function (elements) {
            elements.splice(idx, 1);
            return elements;
        });
    };

    ParticipantEditorRowProgramEditorElements.prototype.load = function load(data) {
        this.setState({
            elements: data.map(function (e) {
                return {
                    description: e[0],
                    score: e[1]
                };
            })
        });
    };

    ParticipantEditorRowProgramEditorElements.prototype.serialize = function serialize() {
        return this.state.elements.map(function (element) {
            return {
                description: element.description,
                score: parseFloat(element.score) || 0
            };
        });
    };

    ParticipantEditorRowProgramEditorElements.prototype.render = function render() {
        var _this15 = this;

        return React.createElement(
            "div",
            { className: "elements" },
            this.state.elements.map(function (element, idx) {
                return React.createElement(ParticipantEditorRowProgramEditorElement, {
                    key: idx,
                    element: element,
                    onChange: _this15.onChange.bind(_this15, idx),
                    onElementRemove: _this15.removeElement.bind(_this15, idx) });
            }),
            React.createElement(
                "button",
                { type: "button", className: "btn btn-sm btn-default full-width", onClick: this.addElement.bind(this) },
                (0, _loader._)("global.buttons.add")
            )
        );
    };

    return ParticipantEditorRowProgramEditorElements;
}(React.Component);

var ParticipantEditorRowProgramEditor = function (_React$Component8) {
    _inherits(ParticipantEditorRowProgramEditor, _React$Component8);

    function ParticipantEditorRowProgramEditor() {
        _classCallCheck(this, ParticipantEditorRowProgramEditor);

        return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));
    }

    ParticipantEditorRowProgramEditor.prototype.loadAcrobatics = function loadAcrobatics() {
        var _this17 = this;

        swal({
            title: (0, _loader._)("admin.headers.load_acrobatics"),
            text: (0, _loader._)("admin.labels.paste_acro"),
            showCancelButton: true,
            closeOnConfirm: false,
            type: "input",
            animation: false
        }, function (value) {
            try {
                var data = JSON.parse(value);
                _this17.refs.elements_editor.load(data);
                swal.close();
            } catch (SyntaxError) {
                (0, _dialogs.showError)((0, _loader._)("errors.admin.load_syntax_error"));
            }
        });
    };

    ParticipantEditorRowProgramEditor.prototype.serialize = function serialize() {
        return {
            name: this.refs.name.value,
            default_for: this.refs.default_for.value,
            acrobatics: this.refs.elements_editor.serialize()
        };
    };

    ParticipantEditorRowProgramEditor.prototype.render = function render() {
        var _this18 = this;

        var classes = ["program-editor"];
        if (this.props.creating) {
            classes.push("create");
        }
        return React.createElement(
            "form",
            { className: classes.join(" "), onSubmit: function onSubmit(e) {
                    e.preventDefault();_this18.props.onSubmit(_this18.serialize());
                } },
            React.createElement("input", {
                ref: "name",
                className: "name",
                defaultValue: this.props.program.name || "",
                placeholder: (0, _loader._)("models.program.name") }),
            React.createElement("input", {
                ref: "default_for",
                className: "default-for",
                defaultValue: this.props.program.default_for || "",
                placeholder: (0, _loader._)("models.program.default_for") }),
            React.createElement(ParticipantEditorRowProgramEditorElements, {
                ref: "elements_editor",
                elements: this.props.program.acrobatics || [] }),
            React.createElement(
                "div",
                { className: "pull-right" },
                React.createElement(
                    "button",
                    { type: "button", className: "btn btn-sm btn-default", onClick: this.loadAcrobatics.bind(this) },
                    (0, _loader._)("admin.buttons.load_acro")
                )
            ),
            React.createElement(
                "button",
                { className: "btn btn-sm btn-primary" },
                (0, _loader._)("global.buttons.submit")
            ),
            React.createElement(
                "button",
                { type: "button", className: "btn btn-sm btn-danger", onClick: this.props.onStopEditing },
                (0, _loader._)("global.buttons.discard")
            )
        );
    };

    return ParticipantEditorRowProgramEditor;
}(React.Component);

var ParticipantEditorRowProgramCreator = function (_React$Component9) {
    _inherits(ParticipantEditorRowProgramCreator, _React$Component9);

    function ParticipantEditorRowProgramCreator(props) {
        _classCallCheck(this, ParticipantEditorRowProgramCreator);

        var _this19 = _possibleConstructorReturn(this, _React$Component9.call(this, props));

        _this19.state = {
            editing: false
        };
        return _this19;
    }

    ParticipantEditorRowProgramCreator.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    ParticipantEditorRowProgramCreator.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    ParticipantEditorRowProgramCreator.prototype.onSubmit = function onSubmit(data) {
        (0, _api.Api)("program.create", { participant_id: this.props.participant_id, data: data }).onSuccess(this.stopEditing.bind(this)).send();
    };

    ParticipantEditorRowProgramCreator.prototype.renderBody = function renderBody() {
        if (this.state.editing) {
            return React.createElement(ParticipantEditorRowProgramEditor, {
                creating: true,
                onSubmit: this.onSubmit.bind(this),
                onStopEditing: this.stopEditing.bind(this),
                program: {} });
        }
        return React.createElement(
            "button",
            { type: "button", className: "btn btn-sm btn-default full-width", onClick: this.startEditing.bind(this) },
            (0, _loader._)("global.buttons.add")
        );
    };

    ParticipantEditorRowProgramCreator.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "program-creator" },
            this.renderBody()
        );
    };

    return ParticipantEditorRowProgramCreator;
}(React.Component);

var ParticipantEditorRowProgram = function (_React$Component10) {
    _inherits(ParticipantEditorRowProgram, _React$Component10);

    function ParticipantEditorRowProgram(props) {
        _classCallCheck(this, ParticipantEditorRowProgram);

        var _this20 = _possibleConstructorReturn(this, _React$Component10.call(this, props));

        _this20.state = {
            editing: false
        };
        return _this20;
    }

    ParticipantEditorRowProgram.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    ParticipantEditorRowProgram.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    ParticipantEditorRowProgram.prototype.onDelClick = function onDelClick(event) {
        var _this21 = this;

        event.preventDefault();
        (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_program"), function () {
            (0, _api.Api)("program.delete", { program_id: _this21.props.program.id }).onSuccess(function () {
                return swal.close();
            }).send();
        });
    };

    ParticipantEditorRowProgram.prototype.onSubmit = function onSubmit(data) {
        (0, _api.Api)("program.set", { program_id: this.props.program.id, data: data }).onSuccess(this.stopEditing.bind(this)).send();
    };

    ParticipantEditorRowProgram.prototype.render = function render() {
        var _this22 = this;

        if (this.state.editing) {
            return React.createElement(ParticipantEditorRowProgramEditor, _extends({
                onSubmit: this.onSubmit.bind(this),
                onStopEditing: this.stopEditing.bind(this)
            }, this.props));
        }
        return React.createElement(
            "div",
            null,
            React.createElement(
                "h5",
                null,
                this.props.program.name,
                this.props.program.default_for ? React.createElement(
                    "em",
                    null,
                    " (",
                    this.props.program.default_for,
                    ")"
                ) : null,
                " / ",
                React.createElement(
                    "a",
                    { href: "#", onClick: function onClick(e) {
                            e.preventDefault();_this22.startEditing();
                        } },
                    "Редактировать"
                ),
                " / ",
                React.createElement(
                    "a",
                    { href: "#", onClick: this.onDelClick.bind(this) },
                    "Удалить"
                )
            ),
            React.createElement(
                "table",
                { className: "full-width program" },
                React.createElement(
                    "tbody",
                    null,
                    this.props.program.acrobatics.map(function (element, idx) {
                        return React.createElement(
                            "tr",
                            { key: idx },
                            React.createElement(
                                "td",
                                null,
                                element.description
                            ),
                            React.createElement(
                                "td",
                                { className: "text-right" },
                                element.score.toFixed(1)
                            )
                        );
                    })
                )
            )
        );
    };

    return ParticipantEditorRowProgram;
}(React.Component);

var ParticipantEditorRowPrograms = function (_React$Component11) {
    _inherits(ParticipantEditorRowPrograms, _React$Component11);

    function ParticipantEditorRowPrograms() {
        _classCallCheck(this, ParticipantEditorRowPrograms);

        return _possibleConstructorReturn(this, _React$Component11.apply(this, arguments));
    }

    ParticipantEditorRowPrograms.prototype.render = function render() {
        return React.createElement(
            "div",
            null,
            React.createElement(
                "h4",
                null,
                (0, _loader._)("models.participant.programs")
            ),
            this.props.programs.map(function (p) {
                return React.createElement(ParticipantEditorRowProgram, {
                    key: p.id,
                    program: p });
            }),
            this.props.newParticipant ? React.createElement(
                "div",
                { className: "alert alert-info" },
                (0, _loader._)("admin.alerts.add_programs_after_creation")
            ) : React.createElement(ParticipantEditorRowProgramCreator, {
                participant_id: this.props.participant_id })
        );
    };

    return ParticipantEditorRowPrograms;
}(React.Component);

var ParticipantEditorRow = function (_React$Component12) {
    _inherits(ParticipantEditorRow, _React$Component12);

    function ParticipantEditorRow(props) {
        _classCallCheck(this, ParticipantEditorRow);

        var _this24 = _possibleConstructorReturn(this, _React$Component12.call(this, props));

        var p = _this24.props.participant;
        _this24.state = {
            participant: {
                number: p.number,
                club_id: p.club.id,
                coaches: p.coaches,
                formation_name: p.formation_name,
                sportsmen: (0, _tools.clone)(p.sportsmen)
            }
        };
        return _this24;
    }

    ParticipantEditorRow.prototype.onChange = function onChange(field, value) {
        var participant = (0, _tools.clone)(this.state.participant);
        participant[field] = value;
        this.setState({
            participant: participant
        });
    };

    ParticipantEditorRow.prototype.sertialize = function sertialize() {
        return this.state.participant;
    };

    ParticipantEditorRow.prototype.onSubmit = function onSubmit(event) {
        event.preventDefault();
        if (!this.props.newParticipant) {
            (0, _api.Api)("participant.set", {
                participant_id: this.props.participant.id,
                data: this.sertialize()
            }).onSuccess(this.props.stopEditing).send();
        } else {
            (0, _api.Api)("participant.create", {
                discipline_id: this.props.discipline_id,
                data: this.sertialize()
            }).onSuccess(this.props.stopEditing).send();
        }
    };

    ParticipantEditorRow.prototype.render = function render() {
        return React.createElement(
            "tr",
            { className: "editor" + (this.props.newParticipant ? " create" : "") },
            React.createElement(
                "td",
                { colSpan: "6" },
                React.createElement(
                    "div",
                    { className: "row" },
                    React.createElement(
                        "div",
                        { className: "col-md-7" },
                        React.createElement(
                            "form",
                            { onSubmit: this.onSubmit.bind(this), className: "row" },
                            React.createElement(
                                "div",
                                { className: "col-md-5 general-info" },
                                React.createElement(ParticipantEditorRowGeneralInfo, {
                                    participant: this.state.participant,
                                    clubs: this.props.clubs,
                                    onChange: this.onChange.bind(this) }),
                                React.createElement(
                                    "div",
                                    { className: "buttons" },
                                    React.createElement(
                                        "button",
                                        {
                                            type: "submit",
                                            className: "btn btn-primary" },
                                        (0, _loader._)("global.buttons.submit")
                                    ),
                                    React.createElement(
                                        "button",
                                        {
                                            type: "button",
                                            className: "btn btn-danger",
                                            onClick: this.props.stopEditing },
                                        (0, _loader._)("global.buttons.discard")
                                    )
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-md-7" },
                                React.createElement(ParticipantEditorRowSportsmenList, {
                                    sportsmen: this.state.participant.sportsmen,
                                    onChange: this.onChange.bind(this) })
                            )
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "col-md-5" },
                        React.createElement(ParticipantEditorRowPrograms, {
                            newParticipant: this.props.newParticipant,
                            participant_id: this.props.participant.id,
                            programs: this.props.participant.programs,
                            onChange: this.onChange.bind(this) })
                    )
                )
            )
        );
    };

    return ParticipantEditorRow;
}(React.Component);

var ParticipantRow = function (_React$Component13) {
    _inherits(ParticipantRow, _React$Component13);

    function ParticipantRow(props) {
        _classCallCheck(this, ParticipantRow);

        var _this25 = _possibleConstructorReturn(this, _React$Component13.call(this, props));

        _this25.state = {
            editing: false
        };
        return _this25;
    }

    ParticipantRow.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    ParticipantRow.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    ParticipantRow.prototype.onDelete = function onDelete(event) {
        var _this26 = this;

        event.stopPropagation();
        (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_participant"), function () {
            (0, _api.Api)("participant.delete", {
                participant_id: _this26.props.participant.id
            }).onSuccess(function () {
                return swal.close();
            }).send();
        });
    };

    ParticipantRow.prototype.renderEditor = function renderEditor() {
        return React.createElement(ParticipantEditorRow, _extends({
            newParticipant: false,
            stopEditing: this.stopEditing.bind(this)
        }, this.props));
    };

    ParticipantRow.prototype.renderViewer = function renderViewer() {
        var p = this.props.participant;
        return React.createElement(
            "tr",
            { className: "viewer", onClick: this.startEditing.bind(this) },
            React.createElement(
                "td",
                { className: "number" },
                p.number
            ),
            React.createElement(
                "td",
                { className: "name" },
                p.name
            ),
            React.createElement(
                "td",
                { className: "club-name" },
                p.club.name
            ),
            React.createElement(
                "td",
                { className: "club-city" },
                p.club.city
            ),
            React.createElement(
                "td",
                { className: "delete" },
                React.createElement(
                    "button",
                    { className: "btn btn-danger", onClick: this.onDelete.bind(this) },
                    "X"
                )
            )
        );
    };

    ParticipantRow.prototype.render = function render() {
        if (this.state.editing) {
            return this.renderEditor();
        } else {
            return this.renderViewer();
        }
    };

    return ParticipantRow;
}(React.Component);

var ParticipantCreationRow = function (_React$Component14) {
    _inherits(ParticipantCreationRow, _React$Component14);

    function ParticipantCreationRow(props) {
        _classCallCheck(this, ParticipantCreationRow);

        var _this27 = _possibleConstructorReturn(this, _React$Component14.call(this, props));

        _this27.state = {
            editing: false
        };
        return _this27;
    }

    ParticipantCreationRow.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    ParticipantCreationRow.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    ParticipantCreationRow.prototype.renderEditor = function renderEditor() {
        var empty_data = {
            "formation_name": "",
            "coaches": "",
            "number": "",
            "club": { "id": this.props.clubs[0] ? this.props.clubs[0].id : null },
            "sportsmen": [],
            "acrobatics": [],
            "programs": []
        };
        return React.createElement(ParticipantEditorRow, _extends({
            newParticipant: true,
            stopEditing: this.stopEditing.bind(this),
            participant: empty_data
        }, this.props));
    };

    ParticipantCreationRow.prototype.renderButton = function renderButton() {
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                { colSpan: "6" },
                React.createElement(
                    "button",
                    {
                        type: "button",
                        className: "btn btn-default full-width",
                        onClick: this.startEditing.bind(this) },
                    (0, _loader._)("admin.buttons.add_participant")
                )
            )
        );
    };

    ParticipantCreationRow.prototype.render = function render() {
        return this.state.editing ? this.renderEditor() : this.renderButton();
    };

    return ParticipantCreationRow;
}(React.Component);

},{"common/tools":26,"i10n/loader":27,"server/api":29,"server/message_dispatcher":30,"server/storage":31,"ui/components":32,"ui/dialogs":33}],19:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.StartList = undefined;

var _loader = require("i10n/loader");

var _api = require("server/api");

var _storage = require("server/storage");

var _message_dispatcher = require("server/message_dispatcher");

var _components = require("ui/components");

var _printable = require("ui/printable");

var _docx = require("common/docx");

var _tools = require("common/tools");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ParticipantNumbersNumber = function (_React$Component) {
    _inherits(ParticipantNumbersNumber, _React$Component);

    function ParticipantNumbersNumber() {
        _classCallCheck(this, ParticipantNumbersNumber);

        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    ParticipantNumbersNumber.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "participant" },
            React.createElement(
                "p",
                { className: "spacer-top" },
                " "
            ),
            React.createElement(
                "div",
                { className: "competition" },
                React.createElement(
                    "p",
                    null,
                    this.props.competition_name,
                    " "
                )
            ),
            React.createElement(
                "p",
                { className: "spacer-top2" },
                " "
            ),
            React.createElement(
                "p",
                { className: "number" },
                this.props.participant.number
            ),
            React.createElement(
                "p",
                { className: "name" },
                this.props.participant.name,
                " "
            ),
            React.createElement(
                "p",
                { className: "discipline" },
                this.props.participant.discipline_name,
                " "
            ),
            React.createElement(
                "p",
                { className: "club" },
                this.props.participant.club.name,
                " — ",
                this.props.participant.club.city
            ),
            React.createElement(
                "p",
                { className: "spacer-bottom" },
                " "
            )
        );
    };

    return ParticipantNumbersNumber;
}(React.Component);

var ParticipantNumbers = function (_React$Component2) {
    _inherits(ParticipantNumbers, _React$Component2);

    function ParticipantNumbers() {
        _classCallCheck(this, ParticipantNumbers);

        return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));
    }

    ParticipantNumbers.prototype.makeParticipantsList = function makeParticipantsList() {
        var res = [];
        this.props.disciplines.forEach(function (discipline, idx) {
            return res = res.concat(discipline.participants.map(function (participant) {
                return {
                    id: participant.id,
                    number: participant.number,
                    name: participant.name,
                    club: participant.club,
                    discipline_idx: idx,
                    discipline_name: discipline.name
                };
            }));
        });
        res.sort(function (a, b) {
            return (0, _tools.CmpChain)().cmp(a.club.city, b.club.city).cmp(a.club.name, b.club.name).cmp(a.discipline_idx, b.discipline_idx).cmp(a.number, b.number).end();
        });
        return res;
    };

    ParticipantNumbers.prototype.render = function render() {
        var _this3 = this;

        // eslint-disable-line react/sort-comp
        return React.createElement(
            "div",
            { ref: "content", className: "print-only" },
            this.makeParticipantsList().map(function (participant) {
                return React.createElement(ParticipantNumbersNumber, {
                    participant: participant,
                    competition_name: _this3.props.competition_name,
                    key: participant.id });
            })
        );
    };

    ParticipantNumbers.prototype.createDocx = function createDocx() {
        var filename = arguments.length <= 0 || arguments[0] === undefined ? "numbers.docx" : arguments[0];

        (0, _docx.Docx)(filename).setMargins([0, 10, 0, 10]).setBody(this.refs.content.innerHTML).addStyle("div", "margin", "0").addStyle("div", "padding", "0").addStyle("p", "mso-line-height-rule", "exactly").addStyle("div", "mso-line-height-rule", "exactly").addStyle(".participant", "text-align", "center").addStyle(".spacer-top", "line-height", "20pt").addStyle(".competition", "line-height", "15pt").addStyle(".spacer-top2", "line-height", "30pt").addStyle(".number", "line-height", "300pt").addStyle(".name", "line-height", "10pt").addStyle(".club", "line-height", "10pt").addStyle(".discipline", "line-height", "10pt").addStyle(".spacer-bottom", "line-height", "16pt").addStyle(".number", "font-size", "350pt").addStyle(".number", "letter-spacing:", "-20.0pt").addStyle(".competition", "font-size", "12pt").addStyle(".competition", "font-weight", "bold").addStyle(".competition", "border-bottom", "1pt solid black").addStyle(".name", "font-size", "12pt").addStyle(".name", "font-weight", "bold").addStyle(".club", "font-size", "12pt").addStyle(".discipline", "font-size", "12pt").save();
    };

    return ParticipantNumbers;
}(React.Component);

var StartList = exports.StartList = function (_React$Component3) {
    _inherits(StartList, _React$Component3);

    function StartList(props) {
        _classCallCheck(this, StartList);

        var _this4 = _possibleConstructorReturn(this, _React$Component3.call(this, props));

        _this4.state = {
            name: null,
            include_formation_sportsmen: false,
            include_acrobatics: false
        };
        _message_dispatcher.message_dispatcher.addListener("db_update", _this4.reloadFromStorage.bind(_this4));
        _message_dispatcher.message_dispatcher.addListener("reload_data", _this4.loadData.bind(_this4));
        return _this4;
    }

    StartList.prototype.componentWillMount = function componentWillMount() {
        this.storage = _storage.storage.getDomain("start_list_" + this.props.competition_id);
        this.reload_listener = _message_dispatcher.message_dispatcher.addListener("reload_data", this.loadData.bind(this));
        this.db_update_listener = _message_dispatcher.message_dispatcher.addListener("db_update", this.reloadFromStorage.bind(this));
        this.loadData();
    };

    StartList.prototype.componentWillUnmount = function componentWillUnmount() {
        _message_dispatcher.message_dispatcher.removeListener(this.reload_listener);
        _message_dispatcher.message_dispatcher.removeListener(this.db_update_listener);
        _storage.storage.delDomain("start_list_" + this.props.competition_id);
    };

    StartList.prototype.reloadFromStorage = function reloadFromStorage() {
        var SCHEMA = {
            disciplines: {
                participants: {
                    club: {},
                    programs: {}
                }
            }
        };
        this.setState(this.storage.get("Competition").by_id(this.props.competition_id).serialize(SCHEMA));
    };

    StartList.prototype.loadData = function loadData() {
        (0, _api.Api)("competition.get", {
            competition_id: this.props.competition_id,
            children: {
                disciplines: {
                    participants: {
                        club: {},
                        programs: {}
                    }
                }
            }
        }).addToDB("Competition", this.props.competition_id, this.storage).onSuccess(this.reloadFromStorage.bind(this)).send();
    };

    StartList.prototype.onCbChange = function onCbChange() {
        this.setState({
            include_acrobatics: this.refs.cb_acro.checked,
            include_formation_sportsmen: this.refs.cb_forms.checked
        });
    };

    StartList.prototype.onDisciplineCbChange = function onDisciplineCbChange(discipline_id, event) {
        var upd = {};
        upd["hide_" + discipline_id] = !event.target.checked;
        this.setState(upd);
    };

    StartList.prototype.setAllDisciplines = function setAllDisciplines(selected, event) {
        event.preventDefault();
        var upd = {};
        this.state.disciplines.forEach(function (d) {
            return upd["hide_" + d.id] = selected;
        });
        this.setState(upd);
    };

    StartList.prototype.renderDiscipline = function renderDiscipline(ic) {
        var _this5 = this;

        if (this.state["hide_" + ic.id]) {
            return null;
        }
        return React.createElement(
            "div",
            { key: ic.id },
            React.createElement(
                "h5",
                null,
                React.createElement(
                    "p",
                    null,
                    ic.name
                )
            ),
            React.createElement(
                "div",
                { className: "discipline" },
                React.createElement(
                    "table",
                    { className: "bordered-table" },
                    React.createElement(
                        "thead",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                { className: "w-8 number" },
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("models.participant.number")
                                )
                            ),
                            React.createElement(
                                "th",
                                { className: "w-27 name" },
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("models.participant.sportsmen")
                                )
                            ),
                            React.createElement(
                                "th",
                                { className: "w-9 year-of-birth" },
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("models.participant.sportsmen_year_of_birth")
                                )
                            ),
                            React.createElement(
                                "th",
                                { className: "w-28 club" },
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("models.participant.club_name")
                                )
                            ),
                            React.createElement(
                                "th",
                                { className: "w-28 coaches" },
                                React.createElement(
                                    "p",
                                    null,
                                    (0, _loader._)("models.participant.coaches")
                                )
                            )
                        )
                    ),
                    React.createElement(
                        "tbody",
                        null,
                        ic.participants.map(function (p) {
                            return [React.createElement(
                                "tr",
                                { key: p.id, className: !_this5.state.include_acrobatics || p.programs.length === 0 ? "" : "has-acro" },
                                React.createElement(
                                    "td",
                                    { className: "w-8 number" },
                                    React.createElement(
                                        "p",
                                        { className: "text-center" },
                                        p.number
                                    )
                                ),
                                React.createElement(
                                    "td",
                                    { className: "w-36 name", colSpan: "2" },
                                    React.createElement(
                                        "table",
                                        { className: "inner" },
                                        React.createElement(
                                            "tbody",
                                            null,
                                            p.formation_name ? React.createElement(
                                                "tr",
                                                null,
                                                React.createElement(
                                                    "th",
                                                    { colSpan: "2" },
                                                    React.createElement(
                                                        "p",
                                                        { className: "text-left" },
                                                        p.formation_name
                                                    )
                                                )
                                            ) : null,
                                            _this5.state.include_formation_sportsmen || !p.formation_name ? p.sportsmen.map(function (s, idx) {
                                                return React.createElement(
                                                    "tr",
                                                    { key: idx },
                                                    React.createElement(
                                                        "td",
                                                        { className: "w-75" },
                                                        React.createElement(
                                                            "p",
                                                            null,
                                                            s.last_name + " " + s.first_name,
                                                            s.substitute ? React.createElement(
                                                                "i",
                                                                null,
                                                                " (",
                                                                (0, _loader._)("admin.labels.sub"),
                                                                ".)"
                                                            ) : null
                                                        )
                                                    ),
                                                    React.createElement(
                                                        "td",
                                                        { className: "w-25" },
                                                        React.createElement(
                                                            "p",
                                                            { className: "text-center" },
                                                            s.year_of_birth
                                                        )
                                                    )
                                                );
                                            }) : null
                                        )
                                    )
                                ),
                                React.createElement(
                                    "td",
                                    { className: "w-28 club" },
                                    React.createElement(
                                        "p",
                                        null,
                                        p.club.name
                                    )
                                ),
                                React.createElement(
                                    "td",
                                    { className: "w-28 coaches" },
                                    React.createElement(
                                        "p",
                                        null,
                                        p.coaches.split(",").map(function (c) {
                                            return [c.trim(), React.createElement("br", { key: "X" })];
                                        })
                                    )
                                )
                            ), !_this5.state.include_acrobatics || p.programs.length === 0 ? null : React.createElement(
                                "tr",
                                { key: "Acro" + p.id },
                                React.createElement(
                                    "td",
                                    { className: "acro", colSpan: "5" },
                                    React.createElement(
                                        "table",
                                        { className: "inner" },
                                        React.createElement(
                                            "tbody",
                                            null,
                                            p.programs.map(function (pr, pr_idx) {
                                                return [React.createElement(
                                                    "tr",
                                                    { key: "H" + pr_idx },
                                                    React.createElement(
                                                        "th",
                                                        { colSpan: "2" },
                                                        React.createElement(
                                                            "p",
                                                            { className: "text-left" },
                                                            pr.name
                                                        )
                                                    )
                                                )].concat(pr.acrobatics.map(function (a, a_idx) {
                                                    return React.createElement(
                                                        "tr",
                                                        { key: "A_" + pr_idx + "_" + a_idx },
                                                        React.createElement(
                                                            "td",
                                                            { className: "w-93" },
                                                            React.createElement(
                                                                "p",
                                                                { className: "text-left" },
                                                                a.description
                                                            )
                                                        ),
                                                        React.createElement(
                                                            "td",
                                                            { className: "w-7" },
                                                            React.createElement(
                                                                "p",
                                                                { className: "text-right" },
                                                                a.score.toFixed(1)
                                                            )
                                                        )
                                                    );
                                                }));
                                            })
                                        )
                                    )
                                )
                            )];
                        })
                    )
                ),
                React.createElement(
                    "p",
                    { className: "text-right" },
                    React.createElement(
                        "strong",
                        null,
                        (0, _loader._)("admin.phrases.total_n_participants", ic.participants.length)
                    )
                )
            )
        );
    };

    StartList.prototype.render = function render() {
        var _this6 = this;

        // eslint-disable-line react/sort-comp
        if (this.state.name === null) {
            return React.createElement(_components.Loader, null);
        }
        return React.createElement(
            "div",
            { className: "app-content" },
            React.createElement(
                "header",
                { className: "app-header" },
                React.createElement(
                    "div",
                    { className: "controls" },
                    React.createElement(
                        "button",
                        { className: "btn btn-primary", onClick: function onClick() {
                                return _this6.createDocx();
                            } },
                        "DOCX"
                    ),
                    React.createElement(
                        "button",
                        { className: "btn btn-primary", onClick: function onClick() {
                                return _this6.refs.numbers.createDocx();
                            } },
                        (0, _loader._)("admin.buttons.docx_numbers")
                    )
                ),
                React.createElement(
                    "h1",
                    null,
                    (0, _loader._)("admin.headers.start_list")
                )
            ),
            React.createElement(
                "div",
                { className: "app-body start-list" },
                React.createElement(
                    "div",
                    { className: "controls" },
                    React.createElement(
                        "div",
                        { className: "row" },
                        React.createElement(
                            "div",
                            { className: "col-md-6" },
                            this.state.disciplines.map(function (d) {
                                return React.createElement(
                                    "div",
                                    { className: "switch", key: d.id },
                                    React.createElement(
                                        "label",
                                        null,
                                        React.createElement("input", {
                                            type: "checkbox",
                                            checked: !_this6.state["hide_" + d.id],
                                            onChange: _this6.onDisciplineCbChange.bind(_this6, d.id) }),
                                        d.name
                                    )
                                );
                            }),
                            React.createElement(
                                "a",
                                { href: "#", onClick: this.setAllDisciplines.bind(this, false) },
                                (0, _loader._)("global.buttons.select_all")
                            ),
                            "    ",
                            React.createElement(
                                "a",
                                { href: "#", onClick: this.setAllDisciplines.bind(this, true) },
                                (0, _loader._)("global.buttons.deselect_all")
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col-md-6" },
                            React.createElement(
                                "div",
                                { className: "switch" },
                                React.createElement(
                                    "label",
                                    null,
                                    React.createElement("input", { type: "checkbox", ref: "cb_acro", onChange: this.onCbChange.bind(this) }),
                                    (0, _loader._)("admin.labels.include_acrobatics")
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "switch" },
                                React.createElement(
                                    "label",
                                    null,
                                    React.createElement("input", { type: "checkbox", ref: "cb_forms", onChange: this.onCbChange.bind(this) }),
                                    (0, _loader._)("admin.labels.include_formation_sportsmen")
                                )
                            )
                        )
                    )
                ),
                React.createElement(_printable.Printable, {
                    ref: "printable",
                    header: this.state.name + ", " + this.state.date,
                    title1: (0, _loader._)("admin.headers.start_list"),
                    body: this.state.disciplines.map(function (dis) {
                        return _this6.renderDiscipline(dis);
                    }) })
            ),
            React.createElement(ParticipantNumbers, {
                competition_name: this.state.name,
                disciplines: this.state.disciplines.filter(function (dis) {
                    return !_this6.state["hide_" + dis.id];
                }),
                ref: "numbers" })
        );
    };

    StartList.prototype.createDocx = function createDocx() {
        var filename = arguments.length <= 0 || arguments[0] === undefined ? "start-list.docx" : arguments[0];

        (0, _docx.Docx)(filename).setMargins([10, 15, 10, 25]).setHeader(this.state.name + ", " + this.state.date).setTitle1((0, _loader._)("admin.headers.start_list")).setBody(this.refs.printable.fetchPrintableData()).addStyle(".bordered-table .inner td, .bordered-table .inner th", "border", "none").addStyle(".bordered-table .inner td, .bordered-table .inner th", "padding", "0").addStyle(".inner", "width", "100%").addStyle(".acro", "border-top", "none !important").addStyle(".has-acro td", "border-bottom", "1px solid #555 !important").addStyle(".has-acro td td", "border-bottom", "none !important").save();
    };

    return StartList;
}(React.Component);

},{"common/docx":24,"common/tools":26,"i10n/loader":27,"server/api":29,"server/message_dispatcher":30,"server/storage":31,"ui/components":32,"ui/printable":34}],20:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.Tours = undefined;

var _loader = require("i10n/loader");

var _api = require("server/api");

var _definitions = require("common/definitions");

var _dialogs = require("ui/dialogs");

var _tools = require("common/tools");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tours = exports.Tours = function (_React$Component) {
    _inherits(Tours, _React$Component);

    function Tours(props) {
        _classCallCheck(this, Tours);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            new_tour_after_id: -1
        };
        return _this;
    }

    Tours.prototype.addTourAfter = function addTourAfter(tour_id) {
        this.setState({
            new_tour_after_id: tour_id
        });
    };

    Tours.prototype.renderTourCreation = function renderTourCreation(after_id, next_tour) {
        if (next_tour && next_tour.finalized) {
            return null;
        }
        if (after_id === this.state.new_tour_after_id) {
            return React.createElement(TourCreatingUI, {
                discipline_id: this.props.discipline.id,
                add_after: after_id,
                stopEditing: this.addTourAfter.bind(this, -1) });
        } else {
            return React.createElement(
                "button",
                { className: "btn btn-default full-width", onClick: this.addTourAfter.bind(this, after_id) },
                (0, _loader._)("admin.buttons.add_tour")
            );
        }
    };

    Tours.prototype.renderTours = function renderTours() {
        return this.props.discipline.tours.map(function (tour, idx, arr) {
            return [React.createElement(TourEditingUI, { tour: tour, key: tour.id }), this.renderTourCreation(tour.id, arr[idx + 1])];
        }.bind(this));
    };

    Tours.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "app-content" },
            React.createElement(
                "header",
                { className: "app-header" },
                React.createElement(
                    "h1",
                    null,
                    this.props.discipline.name
                )
            ),
            React.createElement(
                "div",
                { className: "app-body ic-management-ui" },
                this.renderTourCreation(null, this.props.discipline.tours[0]),
                this.renderTours()
            ),
            React.createElement(
                "datalist",
                { id: "dl_tours" },
                _loader.tour_names.map(function (n, idx) {
                    return React.createElement("option", { key: idx, value: n });
                })
            ),
            React.createElement(
                "datalist",
                { id: "dl_programs" },
                _definitions.GL.suggested_programs.map(function (n, idx) {
                    return React.createElement("option", { key: idx, value: n });
                })
            )
        );
    };

    return Tours;
}(React.Component);

var TourInputForm = function (_React$Component2) {
    _inherits(TourInputForm, _React$Component2);

    function TourInputForm() {
        _classCallCheck(this, TourInputForm);

        return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));
    }

    TourInputForm.prototype.submitTour = function submitTour(event) {
        event.preventDefault();
        this.props.submitTour(this.serialize());
    };

    TourInputForm.prototype.serialize = function serialize() {
        var result = {
            name: this.refs.name.value,
            participants_per_heat: this.refs.participants_per_heat.value,
            default_program: this.refs.default_program.value
        };
        if (!this.props.tour || !this.props.tour.finalized) {
            result["num_advances"] = this.refs.num_advances.value;
            result["scoring_system_name"] = this.refs.scoring_system_name.value;
            result["hope_tour"] = this.refs.hope_tour.checked;
        }
        return result;
    };

    TourInputForm.prototype.render = function render() {
        var classes = ["tour", ""].concat(this.props.classes || []).join(" ");
        var tour = this.props.tour || { id: "new" };
        return React.createElement(
            "form",
            { className: classes, key: tour.id, onSubmit: this.submitTour.bind(this) },
            React.createElement(
                "div",
                { className: "row" },
                React.createElement(
                    "div",
                    { className: "col-md-6" },
                    React.createElement(
                        "div",
                        { className: "form-group form-group-sm" },
                        React.createElement(
                            "label",
                            { className: "control-label" },
                            (0, _loader._)("models.tour.name")
                        ),
                        React.createElement("input", {
                            list: "dl_tours",
                            type: "text",
                            className: "form-control",
                            ref: "name",
                            defaultValue: tour.name })
                    ),
                    React.createElement(
                        "div",
                        { className: "form-group form-group-sm row" },
                        React.createElement(
                            "div",
                            { className: "col-lg-4" },
                            React.createElement(
                                "label",
                                { className: "control-label" },
                                (0, _loader._)("models.tour.num_advances")
                            ),
                            React.createElement("input", {
                                type: "text",
                                className: "form-control",
                                ref: "num_advances",
                                disabled: tour.finalized,
                                defaultValue: tour.num_advances })
                        ),
                        React.createElement(
                            "div",
                            { className: "col-lg-4" },
                            React.createElement(
                                "label",
                                { className: "control-label" },
                                (0, _loader._)("models.tour.participants_per_heat")
                            ),
                            React.createElement("input", {
                                type: "text",
                                className: "form-control",
                                ref: "participants_per_heat",
                                defaultValue: tour.participants_per_heat || 2 })
                        ),
                        React.createElement(
                            "div",
                            { div: true, className: "col-lg-4" },
                            React.createElement(
                                "label",
                                { className: "control-label" },
                                (0, _loader._)("models.tour.is_hope_tour")
                            ),
                            React.createElement(
                                "div",
                                { className: "checkbox" },
                                React.createElement(
                                    "label",
                                    null,
                                    React.createElement("input", {
                                        type: "checkbox",
                                        ref: "hope_tour",
                                        disabled: tour.finalized,
                                        defaultChecked: tour.hope_tour })
                                )
                            )
                        )
                    )
                ),
                React.createElement(
                    "div",
                    { className: "col-md-6" },
                    React.createElement(
                        "div",
                        { className: "form-group form-group-sm" },
                        React.createElement(
                            "label",
                            { className: "control-label" },
                            (0, _loader._)("models.tour.scoring_system_name")
                        ),
                        React.createElement(
                            "select",
                            {
                                className: "form-control",
                                ref: "scoring_system_name",
                                disabled: tour.finalized,
                                defaultValue: tour.scoring_system_name || _definitions.GL.scoring_systems[0] },
                            _definitions.GL.scoring_systems.map(function (sn) {
                                return React.createElement(
                                    "option",
                                    { key: sn, value: sn },
                                    (0, _loader._)("scoring_systems_names." + sn)
                                );
                            })
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "form-group form-group-sm row" },
                        React.createElement(
                            "div",
                            { className: "col-lg-6" },
                            React.createElement(
                                "label",
                                { className: "control-label" },
                                (0, _loader._)("models.tour.default_program")
                            ),
                            React.createElement("input", {
                                type: "text",
                                list: "dl_programs",
                                className: "form-control",
                                ref: "default_program",
                                defaultValue: tour.default_program || "" })
                        ),
                        React.createElement(
                            "div",
                            { className: "col-lg-6" },
                            React.createElement(
                                "label",
                                { className: "control-label" },
                                " "
                            ),
                            React.createElement(
                                "div",
                                { className: "text-right" },
                                React.createElement(
                                    "button",
                                    { className: "btn btn-primary btn-sm", type: "submit" },
                                    (0, _loader._)("global.buttons.submit")
                                ),
                                " ",
                                React.createElement(
                                    "button",
                                    { className: "btn btn-primary btn-sm", type: "button", onClick: this.props.stopEditing },
                                    (0, _loader._)("global.buttons.discard")
                                )
                            )
                        )
                    )
                )
            )
        );
    };

    return TourInputForm;
}(React.Component);

var TourEditingUI = function (_React$Component3) {
    _inherits(TourEditingUI, _React$Component3);

    function TourEditingUI(props) {
        _classCallCheck(this, TourEditingUI);

        var _this3 = _possibleConstructorReturn(this, _React$Component3.call(this, props));

        _this3.state = {
            editing: false
        };
        return _this3;
    }

    TourEditingUI.prototype.startEditing = function startEditing() {
        this.setState({
            editing: true
        });
    };

    TourEditingUI.prototype.stopEditing = function stopEditing() {
        this.setState({
            editing: false
        });
    };

    TourEditingUI.prototype.renderEditor = function renderEditor() {
        return React.createElement(TourInputForm, {
            tour: this.props.tour,
            submitTour: this.submitTour.bind(this),
            stopEditing: this.stopEditing.bind(this) });
    };

    TourEditingUI.prototype.renderViewer = function renderViewer() {
        return React.createElement(
            "div",
            { className: "tour", key: this.props.tour.id },
            React.createElement(
                "h3",
                null,
                this.props.tour.name
            ),
            React.createElement(
                "div",
                { className: "row" },
                React.createElement(
                    "div",
                    { className: "col-md-5" },
                    React.createElement(
                        "p",
                        null,
                        React.createElement(
                            "strong",
                            null,
                            (0, _loader._)("models.tour.num_advances"),
                            ":"
                        ),
                        " ",
                        this.props.tour.num_advances,
                        " "
                    ),
                    React.createElement(
                        "p",
                        null,
                        React.createElement(
                            "strong",
                            null,
                            (0, _loader._)("models.tour.participants_per_heat"),
                            ":"
                        ),
                        " ",
                        this.props.tour.participants_per_heat,
                        " "
                    ),
                    React.createElement(
                        "p",
                        null,
                        React.createElement(
                            "strong",
                            null,
                            (0, _loader._)("models.tour.is_hope_tour"),
                            ":"
                        ),
                        " ",
                        this.props.tour.hope_tour ? (0, _loader._)("global.labels.yes") : (0, _loader._)("global.labels.no"),
                        " "
                    )
                ),
                React.createElement(
                    "div",
                    { className: "col-md-5" },
                    React.createElement(
                        "p",
                        null,
                        React.createElement(
                            "strong",
                            null,
                            (0, _loader._)("models.tour.scoring_system_name"),
                            ":"
                        ),
                        " ",
                        (0, _loader._)("scoring_systems_names." + this.props.tour.scoring_system_name),
                        " "
                    ),
                    React.createElement(
                        "p",
                        null,
                        React.createElement(
                            "strong",
                            null,
                            (0, _loader._)("models.tour.default_program"),
                            ":"
                        ),
                        " ",
                        this.props.tour.default_program,
                        " "
                    )
                ),
                React.createElement(
                    "div",
                    { className: "col-md-2" },
                    React.createElement(
                        "button",
                        { className: "full-width btn btn-primary btn-sm", onClick: this.startEditing.bind(this) },
                        (0, _loader._)("global.buttons.edit")
                    ),
                    React.createElement("br", null),
                    React.createElement(
                        "button",
                        { className: "full-width btn btn-danger btn-sm", onClick: this.deleteTour.bind(this) },
                        (0, _loader._)("global.buttons.delete")
                    )
                )
            )
        );
    };

    TourEditingUI.prototype.submitTour = function submitTour(data) {
        (0, _api.Api)("tour.set", {
            tour_id: this.props.tour.id,
            data: data
        }).onSuccess(function (response) {
            this.stopEditing();
        }.bind(this)).send();
    };

    TourEditingUI.prototype.deleteTour = function deleteTour() {
        var _this4 = this;

        (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.delete_tour"), function () {
            (0, _api.Api)("tour.delete", { tour_id: _this4.props.tour.id }).onSuccess(function () {
                return swal.close();
            }).send();
        });
    };

    TourEditingUI.prototype.render = function render() {
        return this.state.editing ? this.renderEditor() : this.renderViewer();
    };

    return TourEditingUI;
}(React.Component);

var TourCreatingUI = function (_React$Component4) {
    _inherits(TourCreatingUI, _React$Component4);

    function TourCreatingUI() {
        _classCallCheck(this, TourCreatingUI);

        return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));
    }

    TourCreatingUI.prototype.submitTour = function submitTour(data) {
        (0, _api.Api)("tour.create", {
            discipline_id: this.props.discipline_id,
            add_after: this.props.add_after,
            data: data
        }).onSuccess(function (response) {
            this.props.stopEditing();
        }.bind(this)).send();
    };

    TourCreatingUI.prototype.render = function render() {
        return React.createElement(TourInputForm, {
            classes: ["tour-create"],
            submitTour: this.submitTour.bind(this),
            stopEditing: this.props.stopEditing });
    };

    return TourCreatingUI;
}(React.Component);

},{"common/definitions":23,"common/tools":26,"i10n/loader":27,"server/api":29,"ui/dialogs":33}],21:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.AutoPrinterStatus = undefined;

var _loader = require("i10n/loader");

var _components = require("ui/components");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AutoPrinterStatus = exports.AutoPrinterStatus = function (_React$Component) {
    _inherits(AutoPrinterStatus, _React$Component);

    function AutoPrinterStatus(props) {
        _classCallCheck(this, AutoPrinterStatus);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            available: null
        };
        return _this;
    }

    AutoPrinterStatus.prototype.componentDidMount = function componentDidMount() {
        var _this2 = this;

        var xhr = new XMLHttpRequest();
        xhr.open("GET", "http://127.0.0.1:5949", true);
        xhr.onload = function () {
            return _this2.setState({ available: true });
        }; //eslint-disable-line react/no-did-mount-set-state
        xhr.onerror = function () {
            return _this2.setState({ available: false });
        }; //eslint-disable-line react/no-did-mount-set-state
        xhr.send();
    };

    AutoPrinterStatus.prototype.render = function render() {
        var _this3 = this;

        if (this.state.available === null) {
            return React.createElement(_components.Loader, null);
        }
        if (!this.state.available) {
            return React.createElement(
                "div",
                { className: "alert alert-danger" },
                React.createElement(
                    "p",
                    null,
                    (0, _loader._)("admin.alerts.auto_printer_not_available")
                )
            );
        }
        return React.createElement(
            "div",
            { className: "alert alert-success" },
            React.createElement(
                "p",
                null,
                (0, _loader._)("admin.alerts.auto_printer_available")
            ),
            React.createElement("br", null),
            React.createElement(
                "button",
                { className: "btn btn-default",
                    type: "button",
                    onClick: function onClick() {
                        return window.printer_window ? window.printer_window.focus() : window.printer_window = window.open("/printer/" + _this3.props.competition_id, "printer", "resizable=yes,location=no");
                    } },
                (0, _loader._)("admin.buttons.launch_auto_printer")
            )
        );
    };

    return AutoPrinterStatus;
}(React.Component);

},{"i10n/loader":27,"ui/components":32}],22:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.Service = undefined;

var _loader = require("i10n/loader");

var _api = require("server/api");

var _dialogs = require("ui/dialogs");

var _auto_printer_status = require("./auto_printer_status");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Service = exports.Service = function (_React$Component) {
    _inherits(Service, _React$Component);

    function Service(props) {
        _classCallCheck(this, Service);

        return _possibleConstructorReturn(this, _React$Component.call(this, props));
    }

    Service.prototype.reloadClients = function reloadClients() {
        (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.reload_clients"), function () {
            (0, _api.Api)("service.reload_clients", {}).onSuccess(function () {
                return swal.close();
            }).send();
        });
    };

    Service.prototype.refreshClients = function refreshClients() {
        (0, _dialogs.showConfirm)((0, _loader._)("admin.confirms.refresh_clients"), function () {
            (0, _api.Api)("service.refresh_clients", {}).onSuccess(function () {
                return swal.close();
            }).send();
        });
    };

    Service.prototype.unfinalizeTour = function unfinalizeTour(event) {
        var _this2 = this;

        event.preventDefault();
        var passcode = swal({
            title: (0, _loader._)("admin.headers.unfinalize_tour"),
            text: (0, _loader._)("admin.confirms.unfinalize_tour"),
            showCancelButton: true,
            closeOnConfirm: false,
            type: "input",
            animation: false
        }, function (value) {
            if (value !== "unfinalize") {
                swal.showInputError((0, _loader._)("admin.messages.invalid_passcode"));
                return false;
            }
            (0, _api.Api)("tour.unfinalize", {
                tour_id: _this2._select_unfinalize.value
            }).onSuccess(function (event) {
                swal({
                    title: (0, _loader._)("global.messages.success"),
                    animation: false,
                    type: "success"
                });
            }).send();
        });
    };

    Service.prototype.renderUnfinalize = function renderUnfinalize() {
        var _this3 = this;

        var eligible_tours = [];
        this.props.disciplines.forEach(function (ic) {
            for (var idx = ic.tours.length - 1; idx >= 0; --idx) {
                var tour = ic.tours[idx];
                if (tour.finalized) {
                    eligible_tours.push(React.createElement(
                        "option",
                        { value: tour.id, key: tour.id },
                        ic.name,
                        " — ",
                        tour.name
                    ));
                    break;
                }
            }
        });
        if (eligible_tours.length === 0) {
            return React.createElement(
                "div",
                { className: "alert alert-danger" },
                (0, _loader._)("admin.alerts.no_finalized")
            );
        }
        return React.createElement(
            "div",
            null,
            React.createElement(
                "div",
                { className: "alert alert-danger" },
                (0, _loader._)("admin.alerts.unfinalize_warning")
            ),
            React.createElement(
                "form",
                { className: "unfinalization", onSubmit: this.unfinalizeTour.bind(this) },
                React.createElement(
                    "select",
                    { className: "form-control", ref: function ref(c) {
                            return _this3._select_unfinalize = c;
                        } },
                    eligible_tours
                ),
                React.createElement(
                    "button",
                    { className: "btn btn-primary", type: "submit" },
                    (0, _loader._)("admin.buttons.unfinalize")
                )
            )
        );
    };

    Service.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "app" },
            React.createElement(
                "div",
                { className: "app-content" },
                React.createElement(
                    "header",
                    { className: "app-header" },
                    React.createElement(
                        "h1",
                        null,
                        (0, _loader._)("admin.headers.service_menu")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "service-menu app-body" },
                    React.createElement(
                        "h3",
                        null,
                        (0, _loader._)("admin.headers.clients_management")
                    ),
                    React.createElement(
                        "button",
                        { className: "btn btn-primary control-btn", onClick: this.reloadClients.bind(this) },
                        (0, _loader._)("admin.buttons.reload_clients")
                    ),
                    React.createElement(
                        "button",
                        { className: "btn btn-primary control-btn", onClick: this.refreshClients.bind(this) },
                        (0, _loader._)("admin.buttons.refresh_clients")
                    ),
                    React.createElement(
                        "h3",
                        null,
                        (0, _loader._)("admin.headers.unfinalize_tour")
                    ),
                    this.renderUnfinalize(),
                    React.createElement(
                        "h3",
                        null,
                        (0, _loader._)("admin.headers.auto_printer")
                    ),
                    React.createElement(_auto_printer_status.AutoPrinterStatus, { competition_id: this.props.competition_id }),
                    React.createElement(
                        "h3",
                        null,
                        (0, _loader._)("admin.headers.about")
                    ),
                    (0, _loader._)("admin.alerts.about", "v1.0", "22 февраля 2016г.")
                )
            )
        );
    };

    return Service;
}(React.Component);

},{"./auto_printer_status":21,"i10n/loader":27,"server/api":29,"ui/dialogs":33}],23:[function(require,module,exports){
"use strict";

exports.__esModule = true;
var GL = exports.GL = {
    "judge_roles": ["dance_judge", "acro_judge", "head_judge", "tech_judge"],
    "scoring_systems": ["rosfarr.no_acro", "rosfarr.acro", "rosfarr.formation", "rosfarr.formation_acro", "rosfarr.simplified", "rosfarr.am_final_fw", "rosfarr.am_final_acro"],
    "suggested_programs": ["default", "qualification", "quarterfinal", "final"]
};

},{}],24:[function(require,module,exports){
"use strict";

exports.__esModule = true;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DocxImpl = function () {
    function DocxImpl(filename) {
        _classCallCheck(this, DocxImpl);

        this.filename = filename;
        this.header = null;
        this.title1 = null;
        this.title2 = null;
        this.title3 = null;
        this.margins = null;
        this.body = "";
        this.orientation = "portrait";
        this.styles = {
            "body": {
                "font-size": "10pt",
                "font-family": "Calibri, Tahoma, Arial, sans-serif"
            },
            "table": {
                "border-collapse": "collapse",
                "width": "100%"
            },
            "tr": {
                "page-break-inside": "avoid"
            },
            "td, th": {
                "padding": "1pt 3pt"
            },
            "h1, h2, h3, h4, h5, h6": {
                "page-break-after": "avoid",
                "margin-bottom": 0
            },
            "h1": {
                "font-size": "20pt",
                "font-weight": "bold",
                "text-align": "center",
                "margin-top": "10pt"
            },
            "h2": {
                "font-size": "16pt",
                "font-weight": "bold",
                "text-align": "center",
                "margin-top": "6pt"
            },
            "h3": {
                "font-size": "16pt",
                "font-weight": "bold",
                "text-align": "center",
                "margin-top": "4pt"
            },
            "h4 p": {
                "font-size": "14pt",
                "font-weight": "bold",
                "margin": "10pt 0 6pt"
            },
            "h5 p": {
                "font-size": "12pt",
                "font-weight": "bold",
                "margin": "6pt 0"
            },
            ".header": {
                "border-bottom": "1px solid black",
                "font-size": "10pt",
                "font-weight": "bold",
                "margin": 0,
                "padding-bottom": "2pt",
                "margin-bottom": "20pt",
                "text-align": "center"
            },
            "p": {
                "margin": 0,
                "padding": 0
            },
            ".spacer": {
                "font-size": "14pt"
            },
            ".va-top": {
                "vertical-align": "top"
            },
            ".text-left": { "text-align": "left" },
            ".text-right": { "text-align": "right" },
            ".text-center": { "text-align": "center" },
            ".bordered-table td, .bordered-table th": {
                "border": "1pt solid black"
            }
        };
        this.addWidthCss();
    }

    DocxImpl.prototype.addWidthCss = function addWidthCss() {
        for (var i = 1; i <= 100; ++i) {
            this.addStyle(".w-" + i, "width", i + "%");
        }
    };

    DocxImpl.prototype.addStyle = function addStyle(selector, key, value) {
        if (!this.styles[selector]) {
            this.styles[selector] = {};
        }
        this.styles[selector][key] = value;
        return this;
    };

    DocxImpl.prototype.setHeader = function setHeader(header) {
        this.header = header;
        return this;
    };

    DocxImpl.prototype.setTitle1 = function setTitle1(title1) {
        this.title1 = title1;
        return this;
    };

    DocxImpl.prototype.setTitle2 = function setTitle2(title2) {
        this.title2 = title2;
        return this;
    };

    DocxImpl.prototype.setTitle3 = function setTitle3(title3) {
        this.title3 = title3;
        return this;
    };

    DocxImpl.prototype.setMargins = function setMargins(margins) {
        this.margins = margins;
        return this;
    };

    DocxImpl.prototype.setBody = function setBody(body) {
        this.body = body;
        return this;
    };

    DocxImpl.prototype.setOrientation = function setOrientation(orientation) {
        this.orientation = orientation;
        return this;
    };

    DocxImpl.prototype.renderStyleBlock = function renderStyleBlock(selector, data) {
        var css_pairs = Object.getOwnPropertyNames(data).map(function (key) {
            return key + ': ' + data[key] + '; ';
        });
        return selector + " { " + css_pairs.join(" ") + " }";
    };

    DocxImpl.prototype.renderStyles = function renderStyles() {
        var _this = this;

        var css_blocks = Object.getOwnPropertyNames(this.styles).map(function (selector) {
            return _this.renderStyleBlock(selector, _this.styles[selector]);
        }.bind(this));
        return css_blocks.join("\n");
    };

    DocxImpl.prototype.renderHTML = function renderHTML() {
        var css = this.renderStyles();
        var header = this.header ? '<p class="header">' + this.header + '</p>' : "";
        var title1 = this.title1 ? '<h1>' + this.title1 + '</h1>' : "";
        var title2 = this.title2 ? '<h2>' + this.title2 + '</h2>' : "";
        var title3 = this.title3 ? '<h3>' + this.title3 + '</h3>' : "";
        var spacer = header || title1 || title2 || title3 ? '<p class="spacer">&nbsp;</p>' : "";
        return "<!DOCTYPE html>\n" + "<html><head>" + "<meta charset=\"utf-8\">" + "<style>\n" + css + "\n</style>\n" + "</head><body>\n" + header + title1 + title2 + title3 + spacer + this.body + "</body></html>";
    };

    DocxImpl.prototype.save = function save() {
        var html = this.renderHTML();
        var margins = this.margins || (this.orientation === "portrait" ? [10, 15, 10, 15] : [7, 10, 7, 10]);
        var converted = htmlDocx.asBlob(html, {
            orientation: this.orientation,
            margins: {
                top: Math.floor(margins[0] * 56.659).toString(),
                right: Math.floor(margins[1] * 56.659).toString(),
                bottom: Math.floor(margins[2] * 56.659).toString(),
                left: Math.floor(margins[3] * 56.659).toString()
            }
        });
        saveAs(converted, this.filename);
    };

    return DocxImpl;
}();

var Docx = exports.Docx = function Docx(fn) {
    return new DocxImpl(fn);
};

},{}],25:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.getParticipantDisplay = getParticipantDisplay;
exports.getScoringType = getScoringType;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RunScoresWrapper = exports.RunScoresWrapper = function () {
    function RunScoresWrapper(run, discipline_judges) {
        _classCallCheck(this, RunScoresWrapper);

        this.run = run;
        this.discipline_judges = discipline_judges;
        this.scores_by_discipline_judge_id = {};
        run.scores.forEach(function (score) {
            var dj_id = score.discipline_judge_id;
            this.scores_by_discipline_judge_id[dj_id] = score;
        }.bind(this));
    }

    RunScoresWrapper.prototype.getScoresByJudgeIds = function getScoresByJudgeIds(discipline_judge_ids) {
        var _this = this;

        return discipline_judge_ids.map(function (dj_id) {
            return _this.scores_by_discipline_judge_id[dj_id];
        }.bind(this));
    };

    return RunScoresWrapper;
}();

var TourScoresWrapper = exports.TourScoresWrapper = function () {
    function TourScoresWrapper(tour, results) {
        var _this2 = this;

        _classCallCheck(this, TourScoresWrapper);

        this.run_wrappers = tour.runs.map(function (run) {
            return new RunScoresWrapper(run, tour.discipline_judges);
        });
        this.discipline_judges = tour.discipline.discipline_judges;
        this.discipline_judges_by_roles = {};
        this.discipline_judges.forEach(function (dj, idx) {
            var arr = this.discipline_judges_by_roles[dj.role] || [];
            arr.push({
                idx: idx,
                discipline_judge: dj
            });
            this.discipline_judges_by_roles[dj.role] = arr;
        }.bind(this));
        if (results) {
            (function () {
                var results_by_run_ids = {};
                results.forEach(function (res) {
                    return results_by_run_ids[res.run_id] = res;
                });
                _this2.run_wrappers.forEach(function (w) {
                    return w.results_info = results_by_run_ids[w.run.id];
                });
                _this2.run_wrappers.sort(function (a, b) {
                    return a.results_info.place - b.results_info.place;
                });
            })();
        }
    }

    TourScoresWrapper.prototype.getDisciplineJudgesByRoles = function getDisciplineJudgesByRoles() {
        if (arguments.length === 1) {
            return this.discipline_judges_by_roles[arguments[0]] ? this.discipline_judges_by_roles[arguments[0]].map(function (b) {
                return b.discipline_judge;
            }) : [];
        }
        var res = [];
        for (var i = 0; i < arguments.length; ++i) {
            res = res.concat(this.discipline_judges_by_roles[arguments[i]] || []);
        }
        res.sort(function (a, b) {
            return a.idx - b.idx;
        });
        return res.map(function (b) {
            return b.discipline_judge;
        });
    };

    TourScoresWrapper.prototype.getScoresTableByRoles = function getScoresTableByRoles() {
        var discipline_judge_ids = this.getDisciplineJudgesByRoles.apply(this, arguments).map(function (dj) {
            return dj.id;
        });
        return this.run_wrappers.map(function (w) {
            return w.getScoresByJudgeIds(discipline_judge_ids);
        });
    };

    TourScoresWrapper.prototype.getResultsInfo = function getResultsInfo() {
        return this.run_wrappers.map(function (w) {
            return w.results_info;
        });
    };

    TourScoresWrapper.prototype.getRuns = function getRuns() {
        return this.run_wrappers.map(function (w) {
            return w.run;
        });
    };

    return TourScoresWrapper;
}();

function getParticipantDisplay(participant) {
    if (participant.formation_name !== "") {
        return React.createElement(
            "p",
            null,
            participant.formation_name
        );
    }
    return participant.sportsmen.map(function (s, idx) {
        return React.createElement(
            "p",
            { key: idx },
            s.last_name + " " + s.first_name
        );
    });
}

function getScoringType(discipline_judge, scoring_system_name) {
    switch (discipline_judge.role) {
        case "dance_judge":
            switch (scoring_system_name) {
                case "rosfarr.formation":
                    return "formation";
                case "rosfarr.formation_acro":
                    return "formation_acro";
                case "rosfarr.simplified":
                    return "simplified";
                default:
                    return "dance";
            }
        case "acro_judge":
            switch (scoring_system_name) {
                case "rosfarr.am_final_fw":
                    return "dance";
                default:
                    return "acro";
            }
        case "tech_judge":
            return "tech";
        case "head_judge":
            return "head";
    }
}

},{}],26:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.clone = clone;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function clone(obj) {
    if ((typeof obj === "undefined" ? "undefined" : _typeof(obj)) !== "object") {
        return obj;
    }
    return JSON.parse(JSON.stringify(obj));
}

var CmpChainImpl = function () {
    function CmpChainImpl() {
        _classCallCheck(this, CmpChainImpl);

        this.result = 0;
    }

    CmpChainImpl.prototype.cmp = function cmp(a, b) {
        if (this.result === 0) {
            if (a < b) {
                this.result = -1;
            } else if (a > b) {
                this.result = 1;
            }
        }
        return this;
    };

    CmpChainImpl.prototype.end = function end() {
        return this.result;
    };

    return CmpChainImpl;
}();

var CmpChain = exports.CmpChain = function CmpChain() {
    return new CmpChainImpl();
};

},{}],27:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.tour_names = exports._ = undefined;

var _ru = require("./ru");

var _ = exports._ = _ru.translate;
var tour_names = exports.tour_names = (0, _ru.getPossibleTourNames)();

},{"./ru":28}],28:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.translate = translate;
function translate(src, arg) {
    function chooseEnding(n, e1, e2, e5) {
        var x = n % 100;
        if (Math.floor(x / 10) === 1) {
            return e5;
        }
        if (x % 10 === 1) {
            return e1;
        }
        if (x % 10 >= 5 || x % 10 === 0) {
            return e5;
        }
        return e2;
    }

    var PHRASES = {
        "admin": {
            "alerts": {
                "about": function about(version, date) {
                    return React.createElement(
                        "div",
                        { className: "about" },
                        React.createElement(
                            "p",
                            null,
                            React.createElement(
                                "b",
                                null,
                                "RockJudge ",
                                version
                            ),
                            " (от ",
                            date,
                            ") — система для подсчета результатов соревнований по акробатическому рок-н-роллу."
                        ),
                        React.createElement(
                            "p",
                            null,
                            "Авторские права на систему RockJudge полностью принадлежат разработчику Артему Казакову. Соавтор системы Антон Амелин."
                        ),
                        React.createElement(
                            "p",
                            null,
                            "Система распространяется по лицензии Linum d.o.o (info@linum.hr). Для использования системы судейства RockJudge необходимо и достаточно иметь право использования системы Linum LPS."
                        ),
                        React.createElement(
                            "p",
                            null,
                            "Официальный сайт: ",
                            React.createElement(
                                "a",
                                { href: "https://rockjudge.com/", target: "_blank" },
                                "https://rockjudge.com/"
                            )
                        )
                    );
                },
                "add_programs_after_creation": "Программы можно будет добавить только после сохранения участника",
                "auto_printer_available": "Автоматическая печать корректно настроена и может быть использована.",
                "auto_printer_not_available": "Автоматическая печать недоступна на этом компьтере.",
                "no_finalized": "Отсутствуют финализированные туры",
                "unfinalize_warning": React.createElement(
                    "div",
                    null,
                    React.createElement(
                        "p",
                        null,
                        React.createElement(
                            "strong",
                            null,
                            "Финализация должна отменяться только в исключительных случаях!"
                        )
                    ),
                    React.createElement(
                        "p",
                        null,
                        "Если же это действительно необходимо, обратите внимание, что после повторной финализации список участников следующего тура будет автоматически пересоздан. Результаты участников, прошедших в следующий тур после первой финализации и не прошедших после повторной будут безвозвратно утеряны!"
                    ),
                    React.createElement(
                        "p",
                        null,
                        "И не забудьте заново напечатать все тблицы."
                    )
                )
            },
            "auto_printer": {
                "discipline": "Дисциплина",
                "discipline_results": "Результаты дисциплины",
                "heats": "Заходы сл. тура",
                "print_test_page": "Напечатать тестовую страницу",
                "queue": "Очередь печати",
                "queue_empty": "Очередь пуста",
                "results_1": "Краткая таблица",
                "results_2": "Средняя таблица",
                "results_3": "Подробная таблица",
                "rules": "Задания",
                "test": "",
                "test_page": "Тестовая страница",
                "test_text": "Это тестовая страница RockJudge"
            },
            "buttons": {
                "add_club": "Добавить клуб",
                "add_competition": "Создать соревнование",
                "add_competition_plan_item": "Добавить элемент",
                "add_discipline": "Добавить дисциплину",
                "add_judge": "Добавить судью",
                "add_participant": "Добавить участника",
                "add_tour": "Добавить тур",
                "confirm_score": "Зафиксировать",
                "docx_heats": "Заходы в DOCX",
                "docx_numbers": "Номера в DOCX",
                "docx_results": "Результаты в DOCX",
                "export": "Экспортировать",
                "import": "Импортировать",
                "launch_auto_printer": "Запуск автоматической печати",
                "load_acro": "Загрузить акробатику",
                "refresh_clients": "Перезагрузить все устройства",
                "reload_clients": "Обновить данные на всех устройствах",
                "switch_to_plan": "Сортирока по программе",
                "switch_to_disciplines": "Сортирока по дисциплинам",
                "to_start_page": "На главную",
                "unconfirm_score": "Отмена фиксации",
                "unfinalize": "Отменить финализацию"
            },
            "confirms": {
                "delete_club": "Вы действительно хотите удалить этот клуб?",
                "delete_competition": "Вы действительно хотите удалить это соревнование?",
                "delete_discipline": "Вы действительно хотите удалить эту дисциплину?",
                "delete_judge": "Вы действительно хотите удалить этого судью?",
                "delete_participant": "Вы действительно хотите удалить этого участника?",
                "delete_program": "Вы действительно хотите удалить эту программу?",
                "delete_tour": "Вы действительно хотите удалить этот тур?",
                "refresh_clients": "Вы действительно хотите перезагрузить страницу на всех клиентах?",
                "reload_clients": "Вы действительно хотите обновить данные на всех клиентах?",
                "unfinalize_tour": "Вы действительно хотите отменить финализацию тура? Введите «unfinalize», чтобы продолжить"
            },
            "headers": {
                "about": "О программе",
                "auto_printer": "Автоматическая печать",
                "clients_management": "Управление подключенными устройствами",
                "clubs": "Клубы-участники",
                "clubs_management": "Управление клубами",
                "competition_plan": "Программа соревнований",
                "competition_plan_management": "Программа соревнований",
                "competition_report": "Протокол соревнований",
                "competition_results": "Результаты соревнований",
                "competitions_management": "Управление соревнованиями",
                "discipline_results": "Результаты дисциплины",
                "disciplines_management": "Управление дисциплинами",
                "export_competition": "Экспорт данных турнира и результатов",
                "import_competition": "Импорт данных турнира",
                "import_export": "Импорт / экспорт",
                "judges": "Судейская бригада",
                "judges_management": "Управление судьями",
                "load_acrobatics": "Загрузка акробатики",
                "participants_management": "Управление участниками",
                "service_menu": "Сервисное меню",
                "start_list": "Стартовый лист",
                "tour_heats": "Заходы участников",
                "tour_results": "Результаты тура",
                "unfinalize_tour": "Отмена финализации тура",
                "unpicked_tours": "Не включены в программу"
            },
            "labels": {
                "competition_name": "Наименование соревнования",
                "competition_date": "Дата проведения",
                "include_acrobatics": "Включить акробатику",
                "include_formation_sportsmen": "Включить состав формейшнов",
                "no_files_selected": "Выберите файл...",
                "paste_acro": "Вставьте данные из калькулятора акробатики",
                "sub": "зап" },
            // substitute
            "messages": {
                "invalid_passcode": "Введён неверный код потверждения"
            },
            "menu": {
                "competition_report": "Протокол соревнований",
                "discipline_results": "Результаты дисциплины",
                "import_export": "Импорт / экспорт",
                "manage_clubs": "Управление клубами",
                "manage_competition_plan": "Программа соревнований",
                "manage_disciplines": "Управление дисциплинами",
                "manage_judges": "Управление судьями",
                "manage_sportsmen": "Управление спортсменами",
                "manage_tours": "Управление турами",
                "start_list": "Стартовый лист"
            },
            "phrases": {
                "total_n_participants": function total_n_participants(n) {
                    return "Итого " + n + " участник" + chooseEnding(n, "", "а", "ов");
                }
            },
            "judging-tabs": {
                "tour-admin": "Управление",
                "heats": "Заходы",
                "results-1": "Краткая таблица",
                "results-2": "Средняя таблица",
                "results-3": "Подробная таблица",
                "discipline-results": "Результаты дисциплины"
            }
        },
        "errors": {
            "admin": {
                "load_syntax_error": "Некорректный формат данных"
            },
            "api": {
                "duplicated_external_id": "В данных имеются записи с повторяющимимся external_id",
                "unable_to_get": function unable_to_get(wanted) {
                    return "Невозможно получить " + wanted + " из запроса";
                }
            },
            "club": {
                "delete_with_participants": "Невозможно удалить клуб, к которому привязаны участники"
            },
            "competition": {
                "delete_non_empty": "Невозможно удалить соревнование, содержащее дисциплины, клубы или судей"
            },
            "competition_plan": {
                "too_many_tours": function too_many_tours(d) {
                    return ["Ошибка в программе соревнований", "В дисциплине " + d + " содержится больше туров, чем создано в системе"];
                }
            },
            "discipline": {
                "change_judges_with_finalized_tour": "Невозможно изменить состав судей для дисциплины, содержащей финализированные туры ",
                "delete_with_participants": "Невозможно удалить дисциплину, содержащую участников",
                "delete_with_tours": "Невозможно удалить дисциплину, содержащую туры"
            },
            "discipline_judge": {
                "delete_with_finalized": "Невозможно удалить судью, у корого есть финализированне туры",
                "delete_with_scores": "Невозможно удалить судью принявшего участие в судействе хотя бы одного тура",
                "repeating_judge": function repeating_judge(name) {
                    return name + " встречается в списке судей более одного раза";
                }
            },
            "global": {
                "internal_server_error": ["Ошибка на сервере", "проверьте логи для информации"]
            },
            "judge": {
                "delete_with_disciplines": "Невозможно удалить судью, входящего в судейскую бригаду хотя бы одной дисциплины"
            },
            "run": {
                "set_performed_flag_on_finalized": "Невозможно изменить статус захода финализинованного тура"
            },
            "score": {
                "score_not_exist": "Попытка получить значение несуществующей оценки судьи",
                "update_on_finalized_tour": "Невозможно изменить оценку в финализированном туре"
            },
            "tour": {
                "add_before_finalized": "Невозможно добавить новый тур перед финализированным",
                "delete_finalized": "Невозможно удалить финализированный тур",
                "delete_in_competition_plan": "Невозможно удалить тур, присутствующий в программе соревнований",
                "init_finailzed": "Невозможно пересоздать финализированный тур",
                "invalid_add_after_id": "Попытка добаить тур в несуществующее место",
                "load_to_non_empty": function load_to_non_empty(d) {
                    return ["Невозможно загрузить туры для дисциплины", "Дисциплина " + d + " уже содержит туры"];
                },
                "next_is_finailzed": "Следующий тур не должен быть финализирован",
                "no_next_tour": "Данный тур последний в программе соревнований",
                "not_in_competition_plan": "Данный тур не содержится в программе соревнований",
                "prev_not_finailzed": "Предыдущий тур должен быть финализирован",
                "start_finalized": "Невозможно запустить финализированный тур",
                "update_finalized": "Для финализированного тура не допускается изменение квоты вывода, типа тура или системы судейства"
            }
        },
        "global": {
            "buttons": {
                "add": "Добавить",
                "close": "Закрыть",
                "deselect_all": "Снять все",
                "edit": "Редактировать",
                "delete": "Удалить",
                "discard": "Отменить",
                "load": "Загрузить",
                "save": "Сохранить",
                "select_all": "Выбрать все",
                "submit": "Сохранить"
            },
            "labels": {
                "browse": "Обзор...",
                "yes": "Да",
                "no": "Нет"
            },
            "messages": {
                "connection_error": "Похоже, имеются проблемы с сетью",
                "error_header": "Ошибка",
                "success": "Операция успешно завершена"
            },
            "phrases": {
                "heat_n": function heat_n(n) {
                    return "Заход №" + n.toString();
                },
                "judge_n": function judge_n(n) {
                    return "Линейный судья №" + n.toString();
                },
                "participant_n": function participant_n(n, name, n_sp) {
                    return n_sp > 2 ? "Формейшн №" + n.toString() + (name ? ": " + name : "") : (n_sp === 2 ? "Пара №" : "Участник №") + n.toString();
                }
            }
        },
        "judging": {
            "buttons": {
                "confirm_score": "Зафиксировать",
                "init_tour": "Пересоздать тур",
                "finalize_tour": "Финализировать",
                "reset_acrobatic_override": "Сброс",
                "shuffle_heats": "Перемешать заходы",
                "start_tour": "Начать тур",
                "stop_tour": "Остановить тур"
            },
            "confirms": {
                "finalize_tour": "Вы действительно хотите финализировать этот тур?",
                "init_tour": "Вы действительно хотите пересоздать этот тур?",
                "load_program": "Вы действительно хотите перезагрузить программу для этого участника?",
                "shuffle_heats": "Вы действительно хотите перемешать заходы?",
                "stop_tour": "Вы действительно хотите остановить этот тур?"
            },
            "headers": {
                "acrobatic_overrides": "Корректировки базовых оценок акробатики"
            },
            "labels": {
                "acro_description": "Описание трюка",
                "acro_idx": "№ трюка",
                "acrobatics": "Акробатика",
                "club": "Клуб",
                "confirmed": "Зафиксировано",
                "heat": "Заход",
                "new_score": "Корр.",
                "number": "№",
                "old_score": "База",
                "participant_name": "Участник",
                "performed": "В",
                "total_score": "Сумма баллов"
            }
        },
        "models": {
            "club": {
                "name": "Название клуба",
                "city": "Город",
                "external_id": "Внешний ID"
            },
            "competition": {
                "active": "Активно",
                "date": "Дата",
                "info": "Дополнительная информация для протокола",
                "info_item_title": "Заголовок",
                "info_item_value": "Значение",
                "name": "Название"
            },
            "competition_plan_item": {
                "discipline": "Дисциплина",
                "estimated_beginning": "Начало",
                "estimated_duration": "Длительность",
                "name": "Название",
                "sp": "Приоритет",
                "tour": "Тур",
                "verbose_name": "Название"
            },
            "discipline": {
                "discipline_judges": "Судьи",
                "external_id": "Внешний ID",
                "name": "Название дисциплины",
                "sp": "Приоритет"
            },
            "judge": {
                "category": "Категория",
                "external_id": "Вн. ID",
                "name": "Ф. И. О.",
                "number": "Номер",
                "role": "Роль в судействе",
                "role_description": "Должность",
                "sp": "Приоритет"
            },
            "participant": {
                "acro_description": "Описание трюка",
                "acro_descriptions": "Описание трюков",
                "acro_score": "Оценка",
                "acrobatics": "Акробатика",
                "club_name": "Клуб",
                "club_city": "Город",
                "coaches": "Тренеры",
                "first_name": "Имя",
                "gender": "Пол",
                "gender_f": "Ж",
                "gender_m": "М",
                "general_info": "Основная информация",
                "formation_name": "Название команды формейшн",
                "last_name": "Фамилия",
                "name": "Участник",
                "number": "Номер",
                "programs": "Программы",
                "sportsmen": "Спортсмены",
                "sportsmen_year_of_birth": "Г.р.",
                "substitute_n": "Осн.",
                "substitute_y": "Зап.",
                "year_of_birth": "Год рождения",
                "yob": "Г.р."
            },
            "program": {
                "default_for": "По умолчанию",
                "name": "Название программы"
            },
            "tour": {
                "default_program": "Акробатика по умолчанию",
                "is_hope_tour": "Тур «Надежды»",
                "name": "Название тура",
                "num_advances": "Квота вывода",
                "participants_per_heat": "Участников в заходе",
                "scoring_system_name": "Система судейства"
            }
        },
        "screen_operator": {
            "buttons": {
                "reset_heat": "Сброс номера захода",
                "reset_place": "Сброс места"
            },
            "headers": {
                "discipline": "Дисциплина",
                "heat": "Заход",
                "places": "Места для вывода",
                "tour": "Тур"
            },
            "labels": {
                "place": "место",
                "heat": "заход"
            }
        },
        "presenter": {
            "headers": {
                "clubs": "Клубы-участники",
                "heats": "Заходы",
                "info": "Информация",
                "judges": "Судьи",
                "results": "Результаты"
            },
            "labels": {
                "no_active_tour": "Нет активного тура",
                "place": "место"
            }
        },
        "results": {
            "alerts": {
                "not_finalized": "Данные результаты не являются окончательными."
            },
            "buttons": {
                "print": "Печать",
                "simple_view": "Упрощенная таблица",
                "verbose_view": "Подробная таблица"
            }
        },
        "start_page": {
            "headers": {
                "select_competition": "Выберите соревнование для продолжения",
                "select_role": "Выберите свою роль"
            },
            "messages": {
                "no_competitions": "Нет активных соревнований",
                "competitions_management_link": function competitions_management_link(link) {
                    return React.createElement(
                        "span",
                        null,
                        "Управление соревнованиями находится по адресу ",
                        React.createElement(
                            "a",
                            { href: link },
                            link
                        )
                    );
                }
            },
            "roles": {
                "administrator": "Администратор",
                "presenter": "Ведущий",
                "screen": "Экран",
                "screen_operator": "Оператор экрана"
            }
        },
        "tablet": {
            "buttons": {
                "finalize_tour": "Финализировать тур",
                "finalize_tour_and_start_next": "Финализировать тур и перейти к следующему",
                "next_heat": "След. заход",
                "not_performed": "Невыход на площадку",
                "performed": "Отмена невыхода на площадку",
                "prev_heat": "Пред. заход",
                "reset_stopwatch": "Сброс",
                "start_stopwatch": "Старт",
                "stop_stopwatch": "Стоп",
                "stop_tour": "Завершить тур",
                "stop_tour_and_start_next": "Перейти к следующему туру",
                "to_start_page": "На главную"
            },
            "confirms": {
                "finalize_tour": "Вы действительно хотите финализировать этот тур?",
                "finalize_tour_and_start_next": "Вы действительно хотите финализировать этот тур и перейти к следующему туру?",
                "stop_tour": "Вы действительно хотите остановить этот тур?",
                "stop_tour_and_start_next": "Вы действительно хотите перейти к следующему туру?"
            },
            "headers": {
                "acro_n": function acro_n(n) {
                    return "Акробатика №" + (n + 1);
                },
                "heat": "Заход",
                "presenter": "Ведущий",
                "select_page": "Страница"
            },
            "messages": {
                "not_judging_discipline": "Вы не участвуете в судействе данной дисциплины",
                "not_judging_participant": "Вы не оцениваете этого участника",
                "not_judging_tour": "Вы не оцениваете этот тур",
                "not_performing": "Не выступает"
            },
            "pages": {
                "acrobatics": "Акробатика",
                "actions": "Действия",
                "dance": "Танец",
                "heats": "Заходы",
                "results": "Результаты"
            }
        },

        "scoring_systems": {
            "rosfarr": {
                "tablet": {
                    "acro_judge": {
                        "fall_down": "Падения (-30)"
                    },
                    "dance_judge": {
                        "acrobatics": "Акробатика",
                        "big_mistakes": "Большие ошибки (-30)",
                        "composition": "Композиция",
                        "dance_figs": "Танцевальные фигуры",
                        "dance_tech": "Техника танцевания",
                        "form_fall_down": "Падения (-3)",
                        "form_mistakes": "Ошибки (-2)",
                        "form_small_mistakes": "Маленькие ошибки (-2)",
                        "form_big_mistakes": "Большие ошибки (-3)",
                        "fw_man": "Основной ход, партнёр (сбавка в %)",
                        "fw_woman": "Основной ход, партнёрша (сбавка в %)",
                        "impression": "Общее впечатление",
                        "points": "Оценка",
                        "small_mistakes": "Маленькие ошибки (-5)"
                    },
                    "global": {
                        "total_score": "Сумма баллов"
                    },
                    "head_judge": {
                        "acrobatic_overrides": "Корректировки акробатики",
                        "black_card": "-100",
                        "dance_judge_scores": "Оценки линейных судей",
                        "ok": "OK",
                        "penalty_type": "Штрафные санкции",
                        "previous_penalties": "Предыдущие штрафы",
                        "red_card": "-30",
                        "yellow_card": "-3",
                        "form_yellow_card": "-5",
                        "form_red_card": "-15"
                    },
                    "tech_judge": {
                        "jump_steps": "Основные ходы",
                        "reset_to_n": function reset_to_n(n) {
                            return "Сброс на " + n.toString();
                        },
                        "timing": "Длительность"
                    }
                },
                "results": {
                    "breakdown": {
                        "a": "A",
                        "acro_n": function acro_n(n) {
                            return "A" + n.toString();
                        },
                        "bm": "БО",
                        "c": "К",
                        "df": "ТФ",
                        "dt": "ТT",
                        "fd": "П",
                        "fm": "ОХм",
                        "fw": "ОХж",
                        "i": "ОВ",
                        "m": "Ош",
                        "p": "М",
                        "sm": "МО",
                        "t": "Σ"
                    },
                    "headers": {
                        "participants_advanced": "Прошли в следующий тур",
                        "participants_not_advanced": "Не прошли в следующий тур",
                        "participants_not_performed": "Не выступали"
                    },
                    "labels": {
                        "acro_score": "Результат акро",
                        "acrobatics": "Акробатика",
                        "acrobatics_verbose": "Акробатика (заявка/факт)",
                        "card": "Штраф",
                        "fw_score": "Результат ТН",
                        "fw_score_short": "ТН",
                        "info": "Участник, результат",
                        "next_tour": "Следующий тур",
                        "not_performed": "Не принимал участие",
                        "number": "№",
                        "participant_club": "Клуб",
                        "participant_coaches": "Тренеры",
                        "participant_name": "Участник",
                        "penalty": "Штраф главного судьи",
                        "place": "Место",
                        "sportsmen": "Спортсмены",
                        "sportsmen_year_of_birth": "Г.р.",
                        "total_score": "Итог"
                    }
                }
            }
        },

        "scoring_systems_names": {
            "rosfarr": {
                "acro": "РосФАРР, акробатические программы",
                "am_final_acro": "РосФАРР, A и M классы, финал, акробатика",
                "am_final_fw": "РосФАРР, A и M классы, финал, техника ног",
                "formation": "РосФАРР, формейшн без акробатики",
                "formation_acro": "РосФАРР, формейшн с акробатикой",
                "no_acro": "РосФАРР, танцевальные программы",
                "simplified": "РосФАРР, упрощенная система (1–40)"
            }
        },
        "judge_roles": {
            "": "-",
            "acro_judge": "Судья акробатики",
            "dance_judge": "Судья танца",
            "head_judge": "Главный судья",
            "tech_judge": "Технический судья"
        }
    };
    var path = src.split(".");
    var phrase_ptr = PHRASES;
    path.forEach(function (chunk) {
        return phrase_ptr = phrase_ptr[chunk];
    });
    if (typeof phrase_ptr === "undefined") {
        console.error("Unable to find translation for " + src);
        return;
    }
    if (typeof phrase_ptr === "function") {
        var args = [];
        for (var idx = 1; idx < arguments.length; ++idx) {
            args.push(arguments[idx]);
        }
        return phrase_ptr.apply(undefined, args);
    }
    return phrase_ptr;
}

var getPossibleTourNames = exports.getPossibleTourNames = function getPossibleTourNames() {
    return ["Финал", "Тур «Надежды»", "Отборочный тур", "1/2 финала", "1/4 финала", "1/8 финала", "1/16 финала", "Финал, техника ног", "Финал, акробатика"];
};

},{}],29:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.Api = undefined;

var _loader = require("i10n/loader");

var _storage = require("server/storage");

var _dialogs = require("ui/dialogs");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ApiImpl = function () {
    function ApiImpl(method, data) {
        _classCallCheck(this, ApiImpl);

        this.method = method;
        this.data = data;
        this.cb_success = function () {};
        this.cb_error = function (msg, code, args) {
            return (0, _dialogs.showError)(code ? _loader._.apply(undefined, [code].concat(args)) : msg);
        };
        this.cb_fail = function () {
            var _console;

            for (var _len = arguments.length, data = Array(_len), _key = 0; _key < _len; _key++) {
                data[_key] = arguments[_key];
            }

            return (_console = console).error.apply(_console, ["API fail"].concat(data));
        };
        this.cb_done = function () {};
        this.update_db = function () {};
    }

    ApiImpl.prototype.onDone = function onDone(callback) {
        this.cb_done = callback;
        return this;
    };

    ApiImpl.prototype.onSuccess = function onSuccess(callback) {
        this.cb_success = callback;
        return this;
    };

    ApiImpl.prototype.onError = function onError(callback) {
        this.cb_error = callback;
        return this;
    };

    ApiImpl.prototype.onFail = function onFail(callback) {
        this.cb_fail = callback;
        return this;
    };

    ApiImpl.prototype.addToDB = function addToDB(model_type, model_id) {
        var st = arguments.length <= 2 || arguments[2] === undefined ? _storage.storage : arguments[2];

        this.update_db = function (response) {
            st.get(model_type).add(model_id, response);
        };
        return this;
    };

    ApiImpl.prototype.send = function send() {
        var _this = this;

        var xhr = new XMLHttpRequest();
        xhr.open("POST", "/api", true);
        xhr.onload = function () {
            _this.cb_done();
            if (xhr.status !== 200) {
                _this.cb_fail();
                return;
            }
            var response = JSON.parse(xhr.responseText);
            if (response.success) {
                _this.update_db(response.response);
                _this.cb_success(response.response);
            } else {
                _this.cb_error(response.message, response.code, response.args);
            }
        };
        xhr.onerror = function () {
            _this.cb_done();
            _this.cb_fail();
        };
        var data = new FormData();
        data.append("client_id", window.client_id);
        data.append("data", JSON.stringify(this.data));
        data.append("method", this.method);
        xhr.send(data);
    };

    return ApiImpl;
}();

var Api = exports.Api = function Api() {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
    }

    return new (Function.prototype.bind.apply(ApiImpl, [null].concat(args)))();
};

},{"i10n/loader":27,"server/storage":31,"ui/dialogs":33}],30:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.message_dispatcher = undefined;

var _storage = require("server/storage");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var MessageDispatcher = function () {
    function MessageDispatcher() {
        _classCallCheck(this, MessageDispatcher);

        this.closed = false;
        this.listeners = {};
        this.listeners_cnt = 0;
        this.connect();
    }

    MessageDispatcher.prototype.connect = function connect() {
        console.log("Connecting to websocket...");
        this.ws = new SockJS("http://" + window.location.host + "/ws");
        this.ws.onopen = function () {
            console.log("Connected.");
            if (this.closed) {
                this.onMessage({
                    data: JSON.stringify({
                        messages: [["reload_data", null]],
                        model_updates: []
                    })
                });
            }
        }.bind(this);
        this.ws.onclose = function () {
            console.log("Connection closed.");
            this.closed = true;
            setTimeout(this.connect.bind(this), 500);
        }.bind(this);
        this.ws.onmessage = this.onMessage.bind(this);
    };

    MessageDispatcher.prototype.onMessage = function onMessage(message) {
        var _this = this;

        var data = JSON.parse(message.data);
        if (data["client_id"]) {
            window.client_id = data["client_id"];
            return;
        }
        data.messages.forEach(function (data) {
            var msg_type = data[0];
            var msg_data = data[1];
            var listeners = this.listeners[msg_type] || {};
            if (msg_type === "force_refresh") {
                window.location.reload(true);
            }
            Object.keys(this.listeners[msg_type] || {}).forEach(function (key) {
                return listeners[key](msg_data);
            });
        }.bind(this));
        var data_changed = false;
        data.model_updates.forEach(function (model_info) {
            data_changed = _storage.storage.updateModel(model_info.model, model_info.id, model_info.data) || data_changed;
        });
        if (data_changed) {
            (function () {
                var listeners = _this.listeners["db_update"] || {};
                Object.keys(listeners).forEach(function (key) {
                    if (listeners[key]) {
                        listeners[key]();
                    }
                });
            })();
        }
    };

    MessageDispatcher.prototype.getListenerId = function getListenerId() {
        return this.listeners_cnt++;
    };

    MessageDispatcher.prototype.addListener = function addListener(msg_types, callback) {
        var id = this.getListenerId();
        msg_types.split(" ").forEach(function (msg_type) {
            if (!this.listeners[msg_type]) {
                this.listeners[msg_type] = {};
            }
            this.listeners[msg_type][id] = callback;
        }.bind(this));
        return id;
    };

    MessageDispatcher.prototype.removeListener = function removeListener(listener_id) {
        Object.keys(this.listeners).forEach(function (key) {
            delete this.listeners[key][listener_id];
        }.bind(this));
    };

    return MessageDispatcher;
}();

var message_dispatcher = exports.message_dispatcher = new MessageDispatcher();

},{"server/storage":31}],31:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Ref = function () {
    function Ref(storage, model_name, id) {
        _classCallCheck(this, Ref);

        this.model_name = model_name;
        this.id = id;
        this.storage = storage;
    }

    Ref.prototype.get = function get() {
        return this.storage.get(this.model_name).by_id(this.id);
    };

    return Ref;
}();

var Model = function () {
    function Model(storage, id, model_storage) {
        _classCallCheck(this, Model);

        this.id = id;
        this.__storage = storage;
        this.__key_types = {};
        this.__model_storage = model_storage;
    }

    Model.prototype.addBackRef = function addBackRef(key, ref) {
        this[key] = ref;
        this.__key_types[key] = "^";
    };

    Model.prototype.update = function update(data) {
        var _this = this;

        var create = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

        for (var idx in data) {
            if (data.hasOwnProperty(idx)) {
                if (idx.charAt(0) === "*" || idx.charAt(0) === "^") {
                    if (!create && typeof this[idx.slice(1)] === "undefined") {
                        continue;
                    }
                }
                if (idx.charAt(0) === "*") {
                    (function () {
                        var key = idx.slice(1);
                        _this[key] = [];
                        var back_ref = new Ref(_this.__storage, _this.__model_storage.model_name, _this.id);
                        var back_ref_key = data[idx].back_ref;
                        data[idx].children.forEach(function (nested_data) {
                            if (_typeof(nested_data.data) === "object") {
                                this.__storage.get(nested_data.model).add(nested_data.id, nested_data.data);
                            }
                            var ref = new Ref(this.__storage, nested_data.model, nested_data.id);
                            ref.get().addBackRef(back_ref_key, back_ref);
                            this[key].push(ref);
                        }.bind(_this));
                        _this.__key_types[key] = "*";
                    })();
                } else if (idx.charAt(0) === "^") {
                    var key = idx.slice(1);
                    var nested_data = data[idx];
                    if ((typeof nested_data === "undefined" ? "undefined" : _typeof(nested_data)) === "object") {
                        this.__storage.get(nested_data.model).add(nested_data.id, nested_data.data);
                    }
                    this[key] = new Ref(this.__storage, nested_data.model, nested_data.id);
                    this.__key_types[key] = "^";
                } else {
                    this[idx] = data[idx];
                    this.__key_types[idx] = "";
                }
            }
        }
    };

    Model.prototype.serialize = function serialize(schema) {
        var _this2 = this;

        var result = {};

        var _loop = function _loop(key) {
            if (_this2.__key_types.hasOwnProperty(key)) {
                switch (_this2.__key_types[key]) {
                    case "*":
                        if (key in schema) {
                            result[key] = _this2[key].map(function (ref) {
                                return ref.get().serialize(schema[key]);
                            });
                        }
                        break;
                    case "^":
                        if (key in schema) {
                            result[key] = _this2[key].get().serialize(schema[key]);
                        }
                        break;
                    default:
                        result[key] = _this2[key];
                }
            }
        };

        for (var key in this.__key_types) {
            _loop(key);
        }result.id = this.id;
        return result;
    };

    return Model;
}();

var ModelsStorage = function () {
    function ModelsStorage(storage, model_name) {
        _classCallCheck(this, ModelsStorage);

        this.model_name = model_name;
        this.models = {};
        this.storage = storage;
    }

    ModelsStorage.prototype.add = function add(id, data) {
        if (typeof this.models[id] === "undefined") {
            this.models[id] = new Model(this.storage, id, this);
        }
        this.models[id].update(data);
    };

    ModelsStorage.prototype.update = function update(id, data) {
        if (this.models[id]) {
            this.models[id].update(data, false);
            return true;
        }
        return false;
    };

    ModelsStorage.prototype.by_id = function by_id(id) {
        return this.models[id];
    };

    ModelsStorage.prototype.all = function all() {
        var keys = Object.getOwnPropertyNames(this.models);
        return keys.map(function (key) {
            return this.models[key];
        }.bind(this));
    };

    return ModelsStorage;
}();

var Storage = function () {
    function Storage() {
        _classCallCheck(this, Storage);

        this.model_storages = {};
        this.domains = {};
    }

    Storage.prototype.getDomain = function getDomain(domain) {
        if (typeof this.domains[domain] === "undefined") {
            this.domains[domain] = new Storage();
        }
        return this.domains[domain];
    };

    Storage.prototype.delDomain = function delDomain(domain) {
        delete this.domains[domain];
    };

    Storage.prototype.get = function get(model_name) {
        if (typeof this.model_storages[model_name] === "undefined") {
            this.model_storages[model_name] = new ModelsStorage(this, model_name);
        }
        return this.model_storages[model_name];
    };

    Storage.prototype.del = function del(model_name) {
        delete this.model_storages[model_name];
    };

    Storage.prototype.updateModel = function updateModel(model_type, model_id, data) {
        var _this3 = this,
            _arguments = arguments;

        var data_changed = false;
        if (this.model_storages[model_type]) {
            data_changed = this.get(model_type).add(model_id, data) || data_changed;
        }
        Object.keys(this.domains).forEach(function (key) {
            var _domains$key;

            return data_changed = (_domains$key = _this3.domains[key]).updateModel.apply(_domains$key, _arguments) || data_changed;
        });
        // return data_changed;
        return true;
    };

    return Storage;
}();

var storage = exports.storage = new Storage();

},{}],32:[function(require,module,exports){
"use strict";

exports.__esModule = true;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Loader = exports.Loader = function (_React$Component) {
    _inherits(Loader, _React$Component);

    function Loader() {
        _classCallCheck(this, Loader);

        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    Loader.prototype.render = function render() {
        return React.createElement(
            "table",
            { style: { "height": "100%", "width": "100%" } },
            React.createElement(
                "tbody",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "td",
                        { style: { "textAlign": "center" } },
                        React.createElement("img", { src: "/static/img/ajax-loader.gif" })
                    )
                )
            )
        );
    };

    return Loader;
}(React.Component);

},{}],33:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.showError = showError;
exports.showConfirm = showConfirm;

var _loader = require("i10n/loader");

function showError(msg) {
    var title = (typeof msg === "undefined" ? "undefined" : _typeof(msg)) === "object" ? msg[0] : (0, _loader._)("global.messages.error_header");
    var text = (typeof msg === "undefined" ? "undefined" : _typeof(msg)) === "object" ? msg[1] : msg;
    swal({
        title: title,
        text: text,
        type: "error",
        animation: false
    });
}

function showConfirm(message, action) {
    var close_on_confirm = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];

    return swal({
        title: message,
        animation: false,
        showCancelButton: true,
        confirmButtonText: (0, _loader._)("global.labels.yes"),
        cancelButtonText: (0, _loader._)("global.labels.no"),
        closeOnConfirm: close_on_confirm
    }, action);
}

},{"i10n/loader":27}],34:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Printable = exports.Printable = function (_React$Component) {
    _inherits(Printable, _React$Component);

    function Printable() {
        _classCallCheck(this, Printable);

        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    Printable.prototype.fetchPrintableData = function fetchPrintableData() {
        return this._body.innerHTML;
    };

    Printable.prototype.renderHeader = function renderHeader() {
        return this.props.header ? React.createElement(
            "div",
            { className: "p-header" },
            this.props.header
        ) : null;
    };

    Printable.prototype.renderTitle1 = function renderTitle1() {
        return this.props.title1 ? React.createElement(
            "h1",
            null,
            this.props.title1
        ) : null;
    };

    Printable.prototype.renderTitle2 = function renderTitle2() {
        return this.props.title2 ? React.createElement(
            "h2",
            null,
            this.props.title2
        ) : null;
    };

    Printable.prototype.renderTitle3 = function renderTitle3() {
        return this.props.title3 ? React.createElement(
            "h3",
            null,
            this.props.title3
        ) : null;
    };

    Printable.prototype.renderBody = function renderBody() {
        var _this2 = this;

        return React.createElement(
            "div",
            {
                className: "p-content",
                ref: function ref(e) {
                    return _this2._body = e;
                }
            },
            this.props.body
        );
    };

    Printable.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "printable" },
            this.renderHeader(),
            this.renderTitle1(),
            this.renderTitle2(),
            this.renderTitle3(),
            this.renderBody()
        );
    };

    _createClass(Printable, null, [{
        key: "propTypes",
        get: function get() {
            return {
                header: React.PropTypes.string,
                title1: React.PropTypes.string,
                title2: React.PropTypes.string,
                title3: React.PropTypes.string,
                body: React.PropTypes.node.isRequired,
                sendDeltas: React.PropTypes.bool
            };
        }
    }]);

    return Printable;
}(React.Component);

},{}],35:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.StopWatch = exports.TabletPoint5Input = exports.TabletIntegerInput = exports.TabletPoint5SelectInput = exports.TabletIntegerSelectInput = exports.TabletSelectorInput = exports.Slider = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.onTouchOrClick = onTouchOrClick;
exports.onTouchEndOrClick = onTouchEndOrClick;

var _loader = require("i10n/loader");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function onTouchOrClick(handler) {
    var f = function f(event) {
        event.preventDefault();
        return handler(event);
    };
    return {
        onTouchStart: f,
        onClick: f
    };
}

function onTouchEndOrClick(handler, prevent_default) {
    var _handler = function _handler() {};
    var distance = 0;
    var latest_pos = [0, 0];
    var fire = function fire(event) {
        event.preventDefault();
        return _handler();
    };
    var discard = function discard() {
        _handler = function _handler() {};
    };
    var move = function move(event) {
        var current_pos = [event.touches[0].pageX, event.touches[0].pageY];
        var sqr = function sqr(x) {
            return x * x;
        };
        distance += Math.sqrt(sqr(current_pos[0] - latest_pos[0]) + sqr(current_pos[1] - latest_pos[1]));
        latest_pos = current_pos;
        if (distance > 20) {
            discard();
        }
    };
    var start = function start(event) {
        _handler = handler;
        distance = 0;
        latest_pos = [event.touches[0].pageX, event.touches[0].pageY];
    };
    return {
        onTouchStart: start,
        onTouchEnd: fire,
        onTouchMove: move,
        onTouchCancel: discard,
        onClick: handler
    };
}

var Slider = exports.Slider = function (_React$Component) {
    _inherits(Slider, _React$Component);

    _createClass(Slider, null, [{
        key: "propTypes",
        get: function get() {
            return {
                done: React.PropTypes.bool,
                doneText: React.PropTypes.string,
                slideText: React.PropTypes.string,
                onActivate: React.PropTypes.func
            };
        }
    }]);

    function Slider(props) {
        _classCallCheck(this, Slider);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            position: 0,
            touch: false,
            finished: false
        };
        _this.pin = null;
        return _this;
    }

    Slider.prototype.componentWillUpdate = function componentWillUpdate(nextProps) {
        if (!this.props.done && nextProps.done) {
            this.setState({
                finished: false
            });
        }
    };

    Slider.prototype.isFree = function isFree() {
        return !this.state.touch && !this.props.done && !this.state.finished;
    };

    Slider.prototype.getOuterTextOpacity = function getOuterTextOpacity() {
        if (this.state.finished) {
            return 0;
        }
        var value = Math.min(Math.max(100 - this.state.position, 0), 100);
        return (value / 100).toFixed(3);
    };

    Slider.prototype.getElementOffset = function getElementOffset(element) {
        var res = 0;
        while (element) {
            res += element.offsetLeft || 0;
            element = element.parentNode;
        }
        return res;
    };

    Slider.prototype.getTouch = function getTouch(event) {
        var touch = event.touches[0];
        var parent = event.target.parentNode;
        return touch.pageX - this.getElementOffset(parent);
    };

    Slider.prototype.getRelativeTouch = function getRelativeTouch(event) {
        var touch = event.touches[0];
        var parent = event.target;
        return touch.pageX - this.getElementOffset(parent);
    };

    Slider.prototype.getSliderPos = function getSliderPos(event) {
        var pos = this.getTouch(event) - this.pin;
        return Math.min(Math.max(pos, 0), 200);
    };

    Slider.prototype.onClick = function onClick(event) {
        if (this.state.finished || this.props.done) {
            return;
        }
        this.setState({
            posision: 200,
            touch: false,
            finished: true
        });
        this.props.onActivate();
    };

    Slider.prototype.onTouchStart = function onTouchStart(event) {
        event.preventDefault();
        if (this.state.finished || this.props.done) {
            return;
        }
        this.pin = this.getRelativeTouch(event);
        this.setState({
            position: this.getSliderPos(event),
            touch: true
        });
    };

    Slider.prototype.onTouchMove = function onTouchMove(event) {
        event.preventDefault();
        if (this.state.finished || this.props.done) {
            return;
        }
        this.setState({
            position: this.getSliderPos(event)
        });
    };

    Slider.prototype.onTouchEnd = function onTouchEnd(event) {
        event.preventDefault();
        if (this.state.finished || this.props.done) {
            return;
        }
        if (this.state.position === 200) {
            this.setState({
                position: 0,
                finished: true,
                touch: false
            });
            this.props.onActivate();
        } else {
            this.setState({
                position: 0,
                touch: false
            });
        }
    };

    Slider.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "slider noselect" },
            React.createElement(
                "div",
                { className: "inner" + (this.isFree() ? " free" : ""),
                    style: { left: this.props.done || this.state.finished ? "200px" : this.state.position + "px" },
                    onTouchStart: this.onTouchStart.bind(this),
                    onTouchMove: this.onTouchMove.bind(this),
                    onTouchEnd: this.onTouchEnd.bind(this),
                    onClick: this.onClick.bind(this)
                },
                "→"
            ),
            this.props.done ? React.createElement(
                "span",
                {
                    style: { color: "rgb(100,100,100)" },
                    className: "done-text"
                },
                this.props.doneText
            ) : React.createElement(
                "span",
                {
                    style: { color: "rgba(100,100,100," + this.getOuterTextOpacity() + ")" },
                    className: "slide-text" + (this.isFree() ? " free" : "")
                },
                this.props.slideText
            )
        );
    };

    return Slider;
}(React.Component);

var TabletSelectorInput = exports.TabletSelectorInput = function (_React$Component2) {
    _inherits(TabletSelectorInput, _React$Component2);

    function TabletSelectorInput() {
        _classCallCheck(this, TabletSelectorInput);

        return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));
    }

    TabletSelectorInput.prototype.getButtonsCount = function getButtonsCount() {
        if (this.props.style === "grid") {
            return this.props.row_size;
        }
        return this.props.choices.length;
    };

    TabletSelectorInput.prototype.onClick = function onClick(n) {
        this.props.onValueUpdate(n);
    };

    TabletSelectorInput.prototype.render = function render() {
        var _this3 = this;

        var result = [];
        this.props.choices.forEach(function (el, idx) {
            var key = el[0];
            var text = el[1];
            var active_class_name = _this3.props.active === key ? " active" : "";
            result.push(React.createElement(
                "button",
                _extends({
                    key: key
                }, onTouchOrClick(_this3.onClick.bind(_this3, key)), {
                    className: "tbtn score-btn" + active_class_name
                }),
                text
            ));
            if (_this3.props.style === "grid" && (idx + 1) % _this3.props.row_size === 0) {
                result.push(React.createElement("br", { key: "br" + idx }));
            }
        });
        var layout_class = this.props.style !== "two-lines" ? "selector-layout" : "selector-layout-2rows";
        var selected_class = this.props.active === null ? "" : " selected";
        return React.createElement(
            "div",
            { className: "scoring-layout " + layout_class + selected_class + " n-" + this.getButtonsCount().toString() },
            result
        );
    };

    _createClass(TabletSelectorInput, null, [{
        key: "propTypes",
        get: function get() {
            return {
                style: React.PropTypes.string,
                choices: React.PropTypes.string.isRequired,
                row_size: React.PropTypes.number,
                active: React.PropTypes.number,
                onValueUpdate: React.PropTypes.func.isRequired
            };
        }
    }]);

    return TabletSelectorInput;
}(React.Component);

var TabletIntegerSelectInput = exports.TabletIntegerSelectInput = function (_React$Component3) {
    _inherits(TabletIntegerSelectInput, _React$Component3);

    function TabletIntegerSelectInput() {
        _classCallCheck(this, TabletIntegerSelectInput);

        return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));
    }

    TabletIntegerSelectInput.prototype.createArray = function createArray(min, max) {
        var result = [];
        for (var idx = min; idx <= max; ++idx) {
            result.push([idx, idx.toString()]);
        }
        return result;
    };

    TabletIntegerSelectInput.prototype.render = function render() {
        return React.createElement(TabletSelectorInput, _extends({
            choices: this.createArray(this.props.min, this.props.max)
        }, this.props));
    };

    _createClass(TabletIntegerSelectInput, null, [{
        key: "propTypes",
        get: function get() {
            return {
                min: React.PropTypes.number.isRequired,
                max: React.PropTypes.number.isRequired
            };
        }
    }]);

    return TabletIntegerSelectInput;
}(React.Component);

var TabletPoint5SelectInput = exports.TabletPoint5SelectInput = function (_React$Component4) {
    _inherits(TabletPoint5SelectInput, _React$Component4);

    function TabletPoint5SelectInput() {
        _classCallCheck(this, TabletPoint5SelectInput);

        return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));
    }

    TabletPoint5SelectInput.prototype.createArray = function createArray(min, max) {
        var result = [];
        for (var idx = Math.round(2 * min); idx <= Math.round(2 * max); ++idx) {
            result.push([idx / 2, idx % 2 ? (idx / 2).toFixed(1) : Math.floor(idx / 2).toString()]);
        }
        return result;
    };

    TabletPoint5SelectInput.prototype.render = function render() {
        return React.createElement(TabletSelectorInput, _extends({
            choices: this.createArray(this.props.min, this.props.max)
        }, this.props));
    };

    _createClass(TabletPoint5SelectInput, null, [{
        key: "propTypes",
        get: function get() {
            return {
                min: React.PropTypes.number.isRequired,
                max: React.PropTypes.number.isRequired
            };
        }
    }]);

    return TabletPoint5SelectInput;
}(React.Component);

var TabletIntegerInput = exports.TabletIntegerInput = function (_React$Component5) {
    _inherits(TabletIntegerInput, _React$Component5);

    function TabletIntegerInput() {
        _classCallCheck(this, TabletIntegerInput);

        return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));
    }

    TabletIntegerInput.prototype.onMinus = function onMinus() {
        if (this.props.sendDeltas) {
            this.props.onValueUpdate({ "delta": -1 });
        } else {
            this.props.onValueUpdate(this.props.value - 1);
        }
    };

    TabletIntegerInput.prototype.onPlus = function onPlus() {
        if (this.props.sendDeltas) {
            this.props.onValueUpdate({ "delta": 1 });
        } else {
            this.props.onValueUpdate(this.props.value + 1);
        }
    };

    TabletIntegerInput.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "tablet-integer-input" },
            React.createElement(
                "button",
                _extends({
                    className: "tbtn btn-minus"
                }, onTouchOrClick(this.onMinus.bind(this))),
                "−"
            ),
            React.createElement(
                "div",
                { className: "value" },
                this.props.value
            ),
            React.createElement(
                "button",
                _extends({
                    className: "tbtn btn-plus"
                }, onTouchOrClick(this.onPlus.bind(this))),
                "+"
            )
        );
    };

    _createClass(TabletIntegerInput, null, [{
        key: "propTypes",
        get: function get() {
            return {
                value: React.PropTypes.number.isRequired,
                onValueUpdate: React.PropTypes.func.isRequired,
                sendDeltas: React.PropTypes.bool
            };
        }
    }, {
        key: "defaultProps",
        get: function get() {
            return {
                sendDeltas: false
            };
        }
    }]);

    return TabletIntegerInput;
}(React.Component);

var TabletPoint5Input = exports.TabletPoint5Input = function (_React$Component6) {
    _inherits(TabletPoint5Input, _React$Component6);

    function TabletPoint5Input() {
        _classCallCheck(this, TabletPoint5Input);

        return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));
    }

    TabletPoint5Input.prototype.onMinus = function onMinus() {
        if (this.props.sendDeltas) {
            this.props.onValueUpdate({ "delta": -0.5 });
        } else {
            this.props.onValueUpdate(this.props.value - 0.5);
        }
    };

    TabletPoint5Input.prototype.onPlus = function onPlus() {
        if (this.props.sendDeltas) {
            this.props.onValueUpdate({ "delta": 0.5 });
        } else {
            this.props.onValueUpdate(this.props.value + 0.5);
        }
    };

    TabletPoint5Input.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "tablet-integer-input" },
            React.createElement(
                "button",
                _extends({
                    className: "tbtn btn-minus"
                }, onTouchOrClick(this.onMinus.bind(this))),
                "−"
            ),
            React.createElement(
                "div",
                { className: "value" },
                this.props.value
            ),
            React.createElement(
                "button",
                _extends({
                    className: "tbtn btn-plus"
                }, onTouchOrClick(this.onPlus.bind(this))),
                "+"
            )
        );
    };

    _createClass(TabletPoint5Input, null, [{
        key: "propTypes",
        get: function get() {
            return {
                value: React.PropTypes.number.isRequired,
                onValueUpdate: React.PropTypes.func.isRequired,
                sendDeltas: React.PropTypes.bool
            };
        }
    }, {
        key: "defaultProps",
        get: function get() {
            return {
                sendDeltas: false
            };
        }
    }]);

    return TabletPoint5Input;
}(React.Component);

var stopwatches = {};

var StopWatch = exports.StopWatch = function (_React$Component7) {
    _inherits(StopWatch, _React$Component7);

    _createClass(StopWatch, null, [{
        key: "propTypes",
        get: function get() {
            return {
                score_id: React.PropTypes.number,
                onValueUpdate: React.PropTypes.func.isRequired,
                sendDeltas: React.PropTypes.bool
            };
        }
    }]);

    function StopWatch(props) {
        _classCallCheck(this, StopWatch);

        var _this8 = _possibleConstructorReturn(this, _React$Component7.call(this, props));

        _this8.state = stopwatches[_this8.props.score_id] || {
            active: false,
            value: 0,
            str_value: "0:00",
            interval: _this8.state.active ? setInterval(_this8.tick.bind(_this8), 10) : null
        };
        return _this8;
    }

    StopWatch.prototype.componentWillUnmount = function componentWillUnmount() {
        clearInterval(this.state.interval);
        stopwatches[this.props.score_id] = this.state;
    };

    StopWatch.prototype.now = function now() {
        return new Date().getTime();
    };

    StopWatch.prototype.toggle = function toggle() {
        this.state.active ? this.stop() : this.start();
    };

    StopWatch.prototype.start = function start() {
        this.setState({
            active: true,
            start_at: this.now() - this.state.value,
            interval: setInterval(this.tick.bind(this), 10)
        });
    };

    StopWatch.prototype.stop = function stop() {
        clearInterval(this.state.interval);
        this.setState({
            active: false,
            value: this.value()
        });
    };

    StopWatch.prototype.reset = function reset() {
        clearInterval(this.state.interval);
        this.setState({
            active: false,
            value: 0
        });
    };

    StopWatch.prototype.value = function value() {
        return this.state.active ? this.now() - this.state.start_at : this.state.value;
    };

    StopWatch.prototype.tick = function tick() {
        var new_value = this.value();
        if (new_value !== this.state.value) {
            this.setState({
                value: this.value()
            });
        }
    };

    StopWatch.prototype.pad = function pad(num, size) {
        var s = "0000" + num.toString();
        return s.substr(s.length - size);
    };

    StopWatch.prototype.getStrValue = function getStrValue() {
        var val = this.value();
        var m = 0,
            s = 0;
        var result = '';
        m = Math.floor(val / (60 * 1000));
        val %= 60 * 1000;
        s = Math.floor(val / 1000);
        return m.toString() + ':' + this.pad(s, 2);
    };

    StopWatch.prototype.render = function render() {
        return React.createElement(
            "div",
            { className: "stopwatch" },
            React.createElement(
                "button",
                _extends({
                    className: "tbtn btn-reset ignore-readonly"
                }, onTouchOrClick(this.reset.bind(this))),
                (0, _loader._)("tablet.buttons.reset_stopwatch")
            ),
            React.createElement(
                "button",
                _extends({
                    className: "tbtn btn-toggle ignore-readonly" + (this.state.active ? " active" : "")
                }, onTouchOrClick(this.toggle.bind(this))),
                this.state.active ? (0, _loader._)("tablet.buttons.stop_stopwatch") : (0, _loader._)("tablet.buttons.start_stopwatch")
            ),
            React.createElement(
                "div",
                { className: "time" },
                this.getStrValue()
            )
        );
    };

    return StopWatch;
}(React.Component);

},{"i10n/loader":27}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmNcXGpzeFxcYWRtaW4uanN4Iiwic3JjXFxqc3hcXGFkbWluXFxqdWRnaW5nXFxkaXNjaXBsaW5lX3Jlc3VsdHMuanN4Iiwic3JjXFxqc3hcXGFkbWluXFxqdWRnaW5nXFxoZWF0cy5qc3giLCJzcmNcXGpzeFxcYWRtaW5cXGp1ZGdpbmdcXG1haW4uanN4Iiwic3JjXFxqc3hcXGFkbWluXFxqdWRnaW5nXFxyb3NmYXJyXFxkaXNjaXBsaW5lX3Jlc3VsdHMuanN4Iiwic3JjXFxqc3hcXGFkbWluXFxqdWRnaW5nXFxyb3NmYXJyXFx0b3VyX2FkbWluLmpzeCIsInNyY1xcanN4XFxhZG1pblxcanVkZ2luZ1xccm9zZmFyclxcdG91cl9yZXN1bHRzLmpzeCIsInNyY1xcanN4XFxhZG1pblxcanVkZ2luZ1xcdG91cl9hZG1pbi5qc3giLCJzcmNcXGpzeFxcYWRtaW5cXGp1ZGdpbmdcXHRvdXJfcmVzdWx0cy5qc3giLCJzcmNcXGpzeFxcYWRtaW5cXG1haW4uanN4Iiwic3JjXFxqc3hcXGFkbWluXFxtYW5hZ2VtZW50XFxjbHVicy5qc3giLCJzcmNcXGpzeFxcYWRtaW5cXG1hbmFnZW1lbnRcXGNvbXBldGl0aW9uX3BsYW4uanN4Iiwic3JjXFxqc3hcXGFkbWluXFxtYW5hZ2VtZW50XFxjb21wZXRpdGlvbl9yZXBvcnQuanN4Iiwic3JjXFxqc3hcXGFkbWluXFxtYW5hZ2VtZW50XFxkaXNjaXBsaW5lcy5qc3giLCJzcmNcXGpzeFxcYWRtaW5cXG1hbmFnZW1lbnRcXGltcG9ydF9leHBvcnQuanN4Iiwic3JjXFxqc3hcXGFkbWluXFxtYW5hZ2VtZW50XFxqdWRnZXMuanN4Iiwic3JjXFxqc3hcXGFkbWluXFxtYW5hZ2VtZW50XFxtYWluLmpzeCIsInNyY1xcanN4XFxhZG1pblxcbWFuYWdlbWVudFxccGFydGljaXBhbnRzLmpzeCIsInNyY1xcanN4XFxhZG1pblxcbWFuYWdlbWVudFxcc3RhcnRfbGlzdC5qc3giLCJzcmNcXGpzeFxcYWRtaW5cXG1hbmFnZW1lbnRcXHRvdXJzLmpzeCIsInNyY1xcanN4XFxhZG1pblxcc2VydmljZVxcYXV0b19wcmludGVyX3N0YXR1cy5qc3giLCJzcmNcXGpzeFxcYWRtaW5cXHNlcnZpY2VcXG1haW4uanN4Iiwic3JjXFxqc3hcXGNvbW1vblxcZGVmaW5pdGlvbnMuanN4Iiwic3JjXFxqc3hcXGNvbW1vblxcZG9jeC5qc3giLCJzcmNcXGpzeFxcY29tbW9uXFxyb3NmYXJyXFxiYXNlLmpzeCIsInNyY1xcanN4XFxjb21tb25cXHRvb2xzLmpzeCIsInNyY1xcanN4XFxpMTBuXFxsb2FkZXIuanN4Iiwic3JjXFxqc3hcXGkxMG5cXHJ1LmpzeCIsInNyY1xcanN4XFxzZXJ2ZXJcXGFwaS5qc3giLCJzcmNcXGpzeFxcc2VydmVyXFxtZXNzYWdlX2Rpc3BhdGNoZXIuanN4Iiwic3JjXFxqc3hcXHNlcnZlclxcc3RvcmFnZS5qc3giLCJzcmNcXGpzeFxcdWlcXGNvbXBvbmVudHMuanN4Iiwic3JjXFxqc3hcXHVpXFxkaWFsb2dzLmpzeCIsInNyY1xcanN4XFx1aVxccHJpbnRhYmxlLmpzeCIsInNyY1xcanN4XFx1aVxcdGFibGV0X2NvbXBvbmVudHMuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQ0dBLFNBQVMsTUFBVCxDQUNJLGlDQUFZLE9BQU8sVUFBUCxDQURoQixFQUVJLFNBQVMsY0FBVCxDQUF3QixTQUF4QixDQUZKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQ1dhOzs7Ozs7Ozs7dUNBQ1QseUJBQU8sU0FBUzs7O0FBQ1osZUFBTzttQkFBTyxPQUFLLEtBQUwsQ0FBVyxRQUFYLENBQW9CLE9BQXBCO1NBQU4sQ0FBb0MsSUFBckMsQ0FBMEMsSUFBMUMsQ0FBUCxDQURZOzs7QUFEUCx1Q0FJVCwyQkFBUztBQUNMLGVBQU87OztZQUNIOztrQkFBUSxXQUFVLGlCQUFWLEVBQTRCLFNBQVUsS0FBSyxNQUFMLENBQVksTUFB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LElBQVgsQ0FBZ0IsSUFBaEIsQ0FBZixFQUZSO2dCQUlNLGVBQUUsZ0NBQUYsQ0FKTjthQURKO1lBT0k7OztBQUNJLCtCQUFZLHFDQUFxQyxLQUFLLEtBQUwsQ0FBVyxNQUFYLEdBQW9CLFNBQXBCLEdBQWdDLEVBQWhDLENBQXJDO21CQUNSLGVBQWUsS0FBSyxNQUFMLENBQVksSUFBWixDQUFpQixJQUFqQixDQUFmLEVBRlI7Z0JBSU0sS0FBSyxLQUFMLENBQVcsTUFBWCxHQUFvQixlQUFFLCtCQUFGLENBQXBCLEdBQXlELGVBQUUsZ0NBQUYsQ0FBekQ7YUFYVjtZQWFJOztrQkFBSyxXQUFVLE1BQVYsRUFBTDtnQkFDTSxLQUFLLFdBQUwsRUFETjthQWJKO1NBREosQ0FESzs7O1dBNUVBO0VBQWtCLE1BQU0sU0FBTiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJpbXBvcnQgeyBBZG1pbiB9IGZyb20gXCJhZG1pbi9tYWluXCI7XG5cblxuUmVhY3RET00ucmVuZGVyKFxuICAgIDxBZG1pbiB7IC4uLndpbmRvdy5wYWdlX3Byb3BzIH0gLz4sXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50XCIpXG4pO1xuIiwiaW1wb3J0IHsgXyB9IGZyb20gXCJpMTBuL2xvYWRlclwiO1xuaW1wb3J0IHsgQXBpIH0gZnJvbSBcInNlcnZlci9hcGlcIjtcbmltcG9ydCB7IHN0b3JhZ2UgfSBmcm9tIFwic2VydmVyL3N0b3JhZ2VcIjtcbmltcG9ydCB7IG1lc3NhZ2VfZGlzcGF0Y2hlciB9IGZyb20gXCJzZXJ2ZXIvbWVzc2FnZV9kaXNwYXRjaGVyXCI7XG5pbXBvcnQgeyBMb2FkZXIgfSBmcm9tIFwidWkvY29tcG9uZW50c1wiO1xuaW1wb3J0IHsgUHJpbnRhYmxlIH0gZnJvbSBcInVpL3ByaW50YWJsZVwiO1xuaW1wb3J0IHsgRG9jeCB9IGZyb20gXCJjb21tb24vZG9jeFwiO1xuXG5pbXBvcnQge1xuICAgIERpc2NpcGxpbmVSZXN1bHRzVGFibGUsXG4gICAgRGlzY2lwbGluZVJlc3VsdHNQcmVzZW50ZXJUYWJsZSxcbiAgICBEaXNjaXBsaW5lUmVzdWx0c1NjcmVlbk9wZXJhdG9yVGFibGUsXG59IGZyb20gXCIuL3Jvc2ZhcnIvZGlzY2lwbGluZV9yZXN1bHRzXCI7XG5cbmV4cG9ydCBjbGFzcyBEaXNjaXBsaW5lUmVzdWx0c0J1dHRvbnMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHNpZ25hbChtZXNzYWdlKSB7XG4gICAgICAgIHJldHVybiAoKCkgPT4gdGhpcy5wcm9wcy5vblNpZ25hbChtZXNzYWdlKSkuYmluZCh0aGlzKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGRpdj5cbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5XCIgb25DbGljaz17IHRoaXMuc2lnbmFsKFwiZG9jeFwiKSB9PlxuICAgICAgICAgICAgICAgIERPQ1hcbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBEaXNjaXBsaW5lUmVzdWx0cyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICBzdGF0aWMgZ2V0IGRlZmF1bHRQcm9wcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlbmRlcmVyOiBcInBhZ2VcIixcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIEluaXRpYWxpemF0aW9uXG5cbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBsb2FkZWQ6IGZhbHNlLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnJ1bnNfbG9hZGVkID0gZmFsc2U7XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICAgICAgdGhpcy5zdG9yYWdlID0gc3RvcmFnZS5nZXREb21haW4oXCJkaXNjaXBsaW5lX3Jlc3VsdHNfXCIgKyB0aGlzLnByb3BzLmRpc2NpcGxpbmVfaWQpO1xuICAgICAgICB0aGlzLnJlbG9hZF9saXN0ZW5lciA9IG1lc3NhZ2VfZGlzcGF0Y2hlci5hZGRMaXN0ZW5lcihcInJlbG9hZF9kYXRhXCIsIHRoaXMubG9hZERhdGEuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuZGJfdXBkYXRlX2xpc3RlbmVyID0gbWVzc2FnZV9kaXNwYXRjaGVyLmFkZExpc3RlbmVyKFwiZGJfdXBkYXRlXCIsIHRoaXMucmVsb2FkU3RhdGUuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMucmVzdWx0c19jaGFuZ2VfbGlzdGVuZXIgPSBtZXNzYWdlX2Rpc3BhdGNoZXIuYWRkTGlzdGVuZXIoXCJ0b3VyX3Jlc3VsdHNfY2hhbmdlZCByZWxvYWRfZGF0YVwiLCBmdW5jdGlvbihtZXNzYWdlKSB7XG4gICAgICAgICAgICBpZiAoIW1lc3NhZ2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvYWRSZXN1bHRzKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHRvdXJfc3RvcmFnZSA9IHRoaXMuc3RvcmFnZS5nZXQoXCJUb3VyXCIpLmJ5X2lkKG1lc3NhZ2VbXCJ0b3VyX2lkXCJdKTtcbiAgICAgICAgICAgIGlmICghdG91cl9zdG9yYWdlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRvdXJfc3RvcmFnZS5kaXNjaXBsaW5lLmlkID09PSB0aGlzLnByb3BzLmRpc2NpcGxpbmVfaWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvYWRSZXN1bHRzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMubG9hZERhdGEoKTtcbiAgICAgICAgdGhpcy5sb2FkUmVzdWx0cygpO1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5hdXRvRG9jeCkge1xuICAgICAgICAgICAgbGV0IGludGVydmFsX2lkID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnJlZnMucHJpbnRhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxfaWQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZURvY3godGhpcy5wcm9wcy5hdXRvRG9jeC5maWxlbmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuYXV0b0RvY3guY2FsbGJhY2sodGhpcy5wcm9wcy5hdXRvRG9jeC5maWxlbmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgICAgbWVzc2FnZV9kaXNwYXRjaGVyLnJlbW92ZUxpc3RlbmVyKHRoaXMucmVsb2FkX2xpc3RlbmVyKTtcbiAgICAgICAgbWVzc2FnZV9kaXNwYXRjaGVyLnJlbW92ZUxpc3RlbmVyKHRoaXMuZGJfdXBkYXRlX2xpc3RlbmVyKTtcbiAgICAgICAgbWVzc2FnZV9kaXNwYXRjaGVyLnJlbW92ZUxpc3RlbmVyKHRoaXMucmVzdWx0c19jaGFuZ2VfbGlzdGVuZXIpO1xuICAgICAgICBzdG9yYWdlLmRlbERvbWFpbihcImRpc2NpcGxpbmVfcmVzdWx0c19cIiArIHRoaXMucHJvcHMuZGlzY2lwbGluZV9pZCk7XG4gICAgfVxuICAgIHJlbG9hZFN0YXRlKCkge1xuICAgICAgICBpZiAoIXRoaXMuc3RhdGUuZGlzY2lwbGluZV9yZXN1bHRzKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLnJ1bnNfbG9hZGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHN0b3JhZ2VfcnVucyA9IHRoaXMuc3RvcmFnZS5nZXQoXCJSdW5cIilcbiAgICAgICAgbGV0IHJlc3VsdHMgPSB0aGlzLnN0YXRlLmRpc2NpcGxpbmVfcmVzdWx0cztcbiAgICAgICAgbGV0IG5ld19zdGF0ZSA9IFtdXG4gICAgICAgIHZhciBTQ0hFTUEgPSB7XG4gICAgICAgICAgICB0b3VyOiB7fSxcbiAgICAgICAgICAgIHBhcnRpY2lwYW50OiB7XG4gICAgICAgICAgICAgICAgc3BvcnRzbWVuOiB7fSxcbiAgICAgICAgICAgICAgICBjbHViOiB7fSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH1cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXN1bHRzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBuZXdfc3RhdGUucHVzaCh7XG4gICAgICAgICAgICAgICAgcGxhY2U6IHJlc3VsdHNbaV0ucGxhY2UsXG4gICAgICAgICAgICAgICAgcnVuOiBzdG9yYWdlX3J1bnMuYnlfaWQocmVzdWx0c1tpXS5ydW5faWQpLnNlcmlhbGl6ZShTQ0hFTUEpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsb2FkZWQ6IHRydWUsXG4gICAgICAgICAgICB0YWJsZTogbmV3X3N0YXRlLFxuICAgICAgICAgICAgZGlzY2lwbGluZTogdGhpcy5zdG9yYWdlLmdldChcIkRpc2NpcGxpbmVcIikuYnlfaWQodGhpcy5wcm9wcy5kaXNjaXBsaW5lX2lkKS5zZXJpYWxpemUoe1xuICAgICAgICAgICAgICAgIGNvbXBldGl0aW9uOiB7fSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgbG9hZFJlc3VsdHMoKSB7XG4gICAgICAgIEFwaShcImRpc2NpcGxpbmUuZ2V0X3Jlc3VsdHNcIiwge1xuICAgICAgICAgICAgZGlzY2lwbGluZV9pZDogdGhpcy5wcm9wcy5kaXNjaXBsaW5lX2lkLFxuICAgICAgICB9KVxuICAgICAgICAub25TdWNjZXNzKHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIGRpc2NpcGxpbmVfcmVzdWx0czogcmVzcG9uc2UsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMucmVsb2FkU3RhdGUoKTtcbiAgICAgICAgfSlcbiAgICAgICAgLnNlbmQoKTtcbiAgICB9XG4gICAgbG9hZERhdGEoKSB7XG4gICAgICAgIEFwaShcImRpc2NpcGxpbmUuZ2V0XCIsIHtcbiAgICAgICAgICAgIGRpc2NpcGxpbmVfaWQ6IHRoaXMucHJvcHMuZGlzY2lwbGluZV9pZCxcbiAgICAgICAgICAgIGNoaWxkcmVuOiB7XG4gICAgICAgICAgICAgICAgY29tcGV0aXRpb246IHt9LFxuICAgICAgICAgICAgICAgIHRvdXJzOiB7XG4gICAgICAgICAgICAgICAgICAgIHJ1bnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRpY2lwYW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2x1Yjoge30sXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuYWRkVG9EQihcIkRpc2NpcGxpbmVcIiwgdGhpcy5wcm9wcy5kaXNjaXBsaW5lX2lkLCB0aGlzLnN0b3JhZ2UpXG4gICAgICAgIC5vblN1Y2Nlc3MoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5ydW5zX2xvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLnJlbG9hZFN0YXRlKHRoaXMpXG4gICAgICAgIH0pXG4gICAgICAgIC5zZW5kKCk7XG4gICAgfVxuXG4gICAgLy8gTGlzdGVuZXJzXG5cbiAgICBvblNpZ25hbChtZXNzYWdlKSB7XG4gICAgICAgIHN3aXRjaCAobWVzc2FnZSkge1xuICAgICAgICBjYXNlIFwiZG9jeFwiOlxuICAgICAgICAgICAgdGhpcy5jcmVhdGVEb2N4KCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVW5rbm93biBtZXNzYWdlOlwiLCBtZXNzYWdlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmVuZGVyaW5nXG5cbiAgICByZW5kZXJCb2R5KCkge1xuICAgICAgICBzd2l0Y2ggKHRoaXMucHJvcHMucmVuZGVyZXIpIHtcbiAgICAgICAgY2FzZSBcInByZXNlbnRlclwiOlxuICAgICAgICAgICAgcmV0dXJuIDxEaXNjaXBsaW5lUmVzdWx0c1ByZXNlbnRlclRhYmxlIHRhYmxlPXsgdGhpcy5zdGF0ZS50YWJsZSB9IHJlZj1cIm1haW5fdGFibGVcIiAvPlxuICAgICAgICBjYXNlIFwic2NyZWVuX29wZXJhdG9yXCI6XG4gICAgICAgICAgICByZXR1cm4gPERpc2NpcGxpbmVSZXN1bHRzU2NyZWVuT3BlcmF0b3JUYWJsZVxuICAgICAgICAgICAgICAgIHRhYmxlPXsgdGhpcy5zdGF0ZS50YWJsZSB9XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRQbGFjZT17IHRoaXMucHJvcHMuc2VsZWN0ZWRQbGFjZSB9XG4gICAgICAgICAgICAgICAgb25QbGFjZVNlbGVjdD17IHRoaXMucHJvcHMub25QbGFjZVNlbGVjdCB9XG4gICAgICAgICAgICAgICAgcmVmPVwibWFpbl90YWJsZVwiIC8+XG4gICAgICAgIGNhc2UgXCJwYWdlXCI6XG4gICAgICAgICAgICByZXR1cm4gPFByaW50YWJsZVxuICAgICAgICAgICAgICAgIHJlZj1cInByaW50YWJsZVwiXG4gICAgICAgICAgICAgICAgaGVhZGVyPXsgdGhpcy5zdGF0ZS5kaXNjaXBsaW5lLmNvbXBldGl0aW9uLm5hbWUgKyBcIiwgXCIgKyB0aGlzLnN0YXRlLmRpc2NpcGxpbmUuY29tcGV0aXRpb24uZGF0ZSB9XG4gICAgICAgICAgICAgICAgdGl0bGUxPXsgXyhcImFkbWluLmhlYWRlcnMuZGlzY2lwbGluZV9yZXN1bHRzXCIpIH1cbiAgICAgICAgICAgICAgICB0aXRsZTM9eyB0aGlzLnN0YXRlLmRpc2NpcGxpbmUubmFtZSB9XG4gICAgICAgICAgICAgICAgYm9keT17IDxEaXNjaXBsaW5lUmVzdWx0c1RhYmxlIHRhYmxlPXsgdGhpcy5zdGF0ZS50YWJsZSB9IC8+IH0gLz5cbiAgICAgICAgY2FzZSBcInRhYmxlXCI6XG4gICAgICAgICAgICByZXR1cm4gPERpc2NpcGxpbmVSZXN1bHRzVGFibGUgdGFibGU9eyB0aGlzLnN0YXRlLnRhYmxlIH0gcmVmPVwibWFpbl90YWJsZVwiIC8+XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIoKSB7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHJlYWN0L3NvcnQtY29tcFxuICAgICAgICBpZiAoIXRoaXMuc3RhdGUubG9hZGVkKSB7XG4gICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJkaXNjaXBsaW5lLXJlc3VsdHNcIj48TG9hZGVyIC8+PC9kaXY+XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiZGlzY2lwbGluZS1yZXN1bHRzXCI+XG4gICAgICAgICAgICB7IHRoaXMucmVuZGVyQm9keSgpIH1cbiAgICAgICAgPC9kaXY+XG4gICAgfVxuICAgIGNyZWF0ZURvY3goZmlsZW5hbWU9XCJkaXNjaXBsaW5lLXJlc3VsdHMuZG9jeFwiKSB7XG4gICAgICAgIERvY3goZmlsZW5hbWUpXG4gICAgICAgICAgICAuc2V0SGVhZGVyKHRoaXMuc3RhdGUuZGlzY2lwbGluZS5jb21wZXRpdGlvbi5uYW1lICsgXCIsIFwiICsgdGhpcy5zdGF0ZS5kaXNjaXBsaW5lLmNvbXBldGl0aW9uLmRhdGUpXG4gICAgICAgICAgICAuc2V0VGl0bGUxKF8oXCJhZG1pbi5oZWFkZXJzLmRpc2NpcGxpbmVfcmVzdWx0c1wiKSlcbiAgICAgICAgICAgIC5zZXRUaXRsZTModGhpcy5zdGF0ZS5kaXNjaXBsaW5lLm5hbWUpXG4gICAgICAgICAgICAuc2V0Qm9keSh0aGlzLnJlZnMucHJpbnRhYmxlLmZldGNoUHJpbnRhYmxlRGF0YSgpKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLnRvdXItbmFtZVwiLCBcImJhY2tncm91bmRcIiwgXCIjZGRkXCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuYm9yZGVyZWQtdGFibGUgLnNwb3J0c21lbiB0ZCwgLmJvcmRlcmVkLXRhYmxlIC5zcG9ydHNtZW4gdGhcIiwgXCJib3JkZXJcIiwgXCJub25lXCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuYm9yZGVyZWQtdGFibGUgLnNwb3J0c21lbiB0ZCwgLmJvcmRlcmVkLXRhYmxlIC5zcG9ydHNtZW4gdGhcIiwgXCJwYWRkaW5nXCIsIFwiMFwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLnNwb3J0c21lblwiLCBcIndpZHRoXCIsIFwiMTAwJVwiKVxuICAgICAgICAgICAgLnNhdmUoKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBfIH0gZnJvbSBcImkxMG4vbG9hZGVyXCI7XG5pbXBvcnQgeyBBcGkgfSBmcm9tIFwic2VydmVyL2FwaVwiO1xuaW1wb3J0IHsgc3RvcmFnZSB9IGZyb20gXCJzZXJ2ZXIvc3RvcmFnZVwiO1xuaW1wb3J0IHsgbWVzc2FnZV9kaXNwYXRjaGVyIH0gZnJvbSBcInNlcnZlci9tZXNzYWdlX2Rpc3BhdGNoZXJcIjtcbmltcG9ydCB7IExvYWRlciB9IGZyb20gXCJ1aS9jb21wb25lbnRzXCI7XG5pbXBvcnQgeyBQcmludGFibGUgfSBmcm9tIFwidWkvcHJpbnRhYmxlXCI7XG5pbXBvcnQgeyBEb2N4IH0gZnJvbSBcImNvbW1vbi9kb2N4XCI7XG5cblxuZXhwb3J0IGNsYXNzIEhlYXRzQnV0dG9ucyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc2lnbmFsKG1lc3NhZ2UpIHtcbiAgICAgICAgcmV0dXJuICgoKSA9PiB0aGlzLnByb3BzLm9uU2lnbmFsKG1lc3NhZ2UpKS5iaW5kKHRoaXMpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2PlxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnlcIiBvbkNsaWNrPXsgdGhpcy5zaWduYWwoXCJkb2N4XCIpIH0+XG4gICAgICAgICAgICAgICAgRE9DWFxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIEhlYXRzQm9keSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgdG91cjogbnVsbCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBzdG9yYWdlLmdldERvbWFpbihcImhlYXRzX1wiICsgdGhpcy5wcm9wcy50b3VyX2lkKTtcbiAgICAgICAgdGhpcy5yZWxvYWRfbGlzdGVuZXIgPSBtZXNzYWdlX2Rpc3BhdGNoZXIuYWRkTGlzdGVuZXIoXCJyZWxvYWRfZGF0YVwiLCB0aGlzLmxvYWREYXRhLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmRiX3VwZGF0ZV9saXN0ZW5lciA9IG1lc3NhZ2VfZGlzcGF0Y2hlci5hZGRMaXN0ZW5lcihcImRiX3VwZGF0ZVwiLCB0aGlzLnJlbG9hZEZyb21TdG9yYWdlLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmxvYWREYXRhKCk7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLmF1dG9Eb2N4KSB7XG4gICAgICAgICAgICBsZXQgaW50ZXJ2YWxfaWQgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucmVmcy5wcmludGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbF9pZCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlRG9jeCh0aGlzLnByb3BzLmF1dG9Eb2N4LmZpbGVuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5hdXRvRG9jeC5jYWxsYmFjayh0aGlzLnByb3BzLmF1dG9Eb2N4LmZpbGVuYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCA1MDApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICBtZXNzYWdlX2Rpc3BhdGNoZXIucmVtb3ZlTGlzdGVuZXIodGhpcy5yZWxvYWRfbGlzdGVuZXIpO1xuICAgICAgICBtZXNzYWdlX2Rpc3BhdGNoZXIucmVtb3ZlTGlzdGVuZXIodGhpcy5kYl91cGRhdGVfbGlzdGVuZXIpO1xuICAgICAgICBzdG9yYWdlLmRlbERvbWFpbihcImhlYXRzX1wiICsgdGhpcy5wcm9wcy50b3VyX2lkKTtcbiAgICB9XG4gICAgcmVsb2FkRnJvbVN0b3JhZ2UoKSB7XG4gICAgICAgIGxldCBTQ0hFTUEgPSB7XG4gICAgICAgICAgICBkaXNjaXBsaW5lOiB7XG4gICAgICAgICAgICAgICAgY29tcGV0aXRpb246IHt9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJ1bnM6IHtcbiAgICAgICAgICAgICAgICBwYXJ0aWNpcGFudDoge1xuICAgICAgICAgICAgICAgICAgICBjbHViOiB7fSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9XG4gICAgICAgIGxldCBzZXJpYWxpemVkID0gdGhpcy5zdG9yYWdlLmdldChcIlRvdXJcIilcbiAgICAgICAgICAgIC5ieV9pZCh0aGlzLnByb3BzLnRvdXJfaWQpXG4gICAgICAgICAgICAuc2VyaWFsaXplKFNDSEVNQSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdG91cjogc2VyaWFsaXplZCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGxvYWREYXRhKCkge1xuICAgICAgICBBcGkoXCJ0b3VyLmdldFwiLCB7XG4gICAgICAgICAgICB0b3VyX2lkOiB0aGlzLnByb3BzLnRvdXJfaWQsXG4gICAgICAgICAgICBjaGlsZHJlbjoge1xuICAgICAgICAgICAgICAgIGRpc2NpcGxpbmU6IHtcbiAgICAgICAgICAgICAgICAgICAgY29tcGV0aXRpb246IHt9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcnVuczoge1xuICAgICAgICAgICAgICAgICAgICBwYXJ0aWNpcGFudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2x1Yjoge30sXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuYWRkVG9EQihcIlRvdXJcIiwgdGhpcy5wcm9wcy50b3VyX2lkLCB0aGlzLnN0b3JhZ2UpXG4gICAgICAgIC5vblN1Y2Nlc3ModGhpcy5yZWxvYWRGcm9tU3RvcmFnZS5iaW5kKHRoaXMpKVxuICAgICAgICAuc2VuZCgpO1xuICAgIH1cbiAgICBvblNpZ25hbChtZXNzYWdlKSB7XG4gICAgICAgIHN3aXRjaCAobWVzc2FnZSkge1xuICAgICAgICBjYXNlIFwiZG9jeFwiOlxuICAgICAgICAgICAgdGhpcy5jcmVhdGVEb2N4KCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVW5rbm93biBtZXNzYWdlOlwiLCBtZXNzYWdlKVxuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlckhlYXRIZWFkZXIocHJldl9yb3csIG5leHRfcm93KSB7XG4gICAgICAgIGxldCBuZWVkX3JlbmRlciA9ICh0eXBlb2YgcHJldl9yb3cgPT09IFwidW5kZWZpbmVkXCIpIHx8IChwcmV2X3Jvdy5oZWF0ICE9PSBuZXh0X3Jvdy5oZWF0KVxuICAgICAgICBpZiAoIW5lZWRfcmVuZGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPHRyIGtleT17IFwiSFwiICsgbmV4dF9yb3cuaGVhdCB9Pjx0aCBjbGFzc05hbWU9XCJoZWF0LW51bWJlclwiIGNvbFNwYW49XCIzXCI+XG4gICAgICAgICAgICA8cD57IF8oXCJnbG9iYWwucGhyYXNlcy5oZWF0X25cIiwgbmV4dF9yb3cuaGVhdCkgfTwvcD5cbiAgICAgICAgPC90aD48L3RyPjtcblxuICAgIH1cbiAgICByZW5kZXJIZWF0Um93KHJvdykge1xuICAgICAgICByZXR1cm4gPHRyIGtleT17IFwiUlwiICsgcm93LmlkIH0+XG4gICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwidy04XCI+PHAgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj57IHJvdy5wYXJ0aWNpcGFudC5udW1iZXIgfTwvcD48L3RkPlxuICAgICAgICAgICAgPHRkPjxwPnsgcm93LnBhcnRpY2lwYW50Lm5hbWUgfTwvcD48L3RkPlxuICAgICAgICAgICAgPHRkPjxwPnsgcm93LnBhcnRpY2lwYW50LmNsdWIubmFtZSB9PC9wPjwvdGQ+XG4gICAgICAgIDwvdHI+O1xuICAgIH1cbiAgICByZW5kZXJIZWF0Um93cygpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgICAgICBsZXQgcnVucyA9IHRoaXMuc3RhdGUudG91ci5ydW5zO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJ1bnMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGxldCBoZWFkZXIgPSB0aGlzLnJlbmRlckhlYXRIZWFkZXIocnVuc1tpIC0gMV0sIHJ1bnNbaV0pO1xuICAgICAgICAgICAgaGVhZGVyICYmIHJlc3VsdC5wdXNoKGhlYWRlcik7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh0aGlzLnJlbmRlckhlYXRSb3cocnVuc1tpXSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIHJlbmRlcigpIHsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgcmVhY3Qvc29ydC1jb21wXG4gICAgICAgIGlmICh0aGlzLnN0YXRlLnRvdXIgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiA8TG9hZGVyIC8+XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGJvZHkgPSA8ZGl2IGNsYXNzTmFtZT1cInRvdXItaGVhdHNcIj5cbiAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJib3JkZXJlZC10YWJsZVwiPjx0aGVhZD5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJ3LThcIj48cD57IF8oXCJqdWRnaW5nLmxhYmVscy5udW1iZXJcIikgfTwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICA8dGg+PHA+eyBfKFwianVkZ2luZy5sYWJlbHMucGFydGljaXBhbnRfbmFtZVwiKSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgIDx0aD48cD57IF8oXCJqdWRnaW5nLmxhYmVscy5jbHViXCIpIH08L3A+PC90aD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC90aGVhZD48dGJvZHk+XG4gICAgICAgICAgICAgICAgeyB0aGlzLnJlbmRlckhlYXRSb3dzKCkgfVxuICAgICAgICAgICAgPC90Ym9keT48L3RhYmxlPlxuICAgICAgICA8L2Rpdj47XG4gICAgICAgIHJldHVybiA8UHJpbnRhYmxlXG4gICAgICAgICAgICBoZWFkZXI9eyB0aGlzLnN0YXRlLnRvdXIuZGlzY2lwbGluZS5jb21wZXRpdGlvbi5uYW1lICsgXCIsIFwiICsgdGhpcy5zdGF0ZS50b3VyLmRpc2NpcGxpbmUuY29tcGV0aXRpb24uZGF0ZSB9XG4gICAgICAgICAgICB0aXRsZTE9eyBfKFwiYWRtaW4uaGVhZGVycy50b3VyX2hlYXRzXCIpIH1cbiAgICAgICAgICAgIHRpdGxlMj17IHRoaXMuc3RhdGUudG91ci5kaXNjaXBsaW5lLm5hbWUgfVxuICAgICAgICAgICAgdGl0bGUzPXsgdGhpcy5zdGF0ZS50b3VyLm5hbWUgfVxuICAgICAgICAgICAgYm9keT17IGJvZHkgfVxuICAgICAgICAgICAgcmVmPVwicHJpbnRhYmxlXCIgLz5cbiAgICB9XG4gICAgY3JlYXRlRG9jeChmaWxlbmFtZT1cInRvdXItaGVhdHMuZG9jeFwiKSB7XG4gICAgICAgIERvY3goZmlsZW5hbWUpXG4gICAgICAgICAgICAuc2V0SGVhZGVyKHRoaXMuc3RhdGUudG91ci5kaXNjaXBsaW5lLmNvbXBldGl0aW9uLm5hbWUgKyBcIiwgXCIgKyB0aGlzLnN0YXRlLnRvdXIuZGlzY2lwbGluZS5jb21wZXRpdGlvbi5kYXRlKVxuICAgICAgICAgICAgLnNldFRpdGxlMShfKFwiYWRtaW4uaGVhZGVycy50b3VyX2hlYXRzXCIpKVxuICAgICAgICAgICAgLnNldFRpdGxlMih0aGlzLnN0YXRlLnRvdXIuZGlzY2lwbGluZS5uYW1lKVxuICAgICAgICAgICAgLnNldFRpdGxlMyh0aGlzLnN0YXRlLnRvdXIubmFtZSlcbiAgICAgICAgICAgIC5zZXRCb2R5KHRoaXMucmVmcy5wcmludGFibGUuZmV0Y2hQcmludGFibGVEYXRhKCkpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuaGVhdC1udW1iZXJcIiwgXCJiYWNrZ3JvdW5kXCIsIFwiI2NjY1wiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLmhlYXQtbnVtYmVyXCIsIFwidGV4dC1hbGlnblwiLCBcImxlZnRcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcInRkLCB0aFwiLCBcImZvbnQtc2l6ZVwiLCBcIjEycHRcIilcbiAgICAgICAgICAgIC5zYXZlKCk7XG4gICAgfVxufVxuIiwiaW1wb3J0IHsgXyB9IGZyb20gXCJpMTBuL2xvYWRlclwiO1xuaW1wb3J0IHsgSGVhdHNCb2R5LCBIZWF0c0J1dHRvbnMgfSBmcm9tIFwiLi9oZWF0c1wiO1xuaW1wb3J0IHsgVG91ckFkbWluQm9keSwgVG91ckFkbWluQnV0dG9ucyB9IGZyb20gXCIuL3RvdXJfYWRtaW5cIjtcbmltcG9ydCB7IFRvdXJSZXN1bHRzQm9keSwgVG91clJlc3VsdHNCdXR0b25zIH0gZnJvbSBcIi4vdG91cl9yZXN1bHRzXCI7XG5pbXBvcnQgeyBEaXNjaXBsaW5lUmVzdWx0cywgRGlzY2lwbGluZVJlc3VsdHNCdXR0b25zIH0gZnJvbSBcIi4vZGlzY2lwbGluZV9yZXN1bHRzXCI7XG5cbmV4cG9ydCBjbGFzcyBKdWRnaW5nIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBhY3RpdmVfdG91cl9pZDogdGhpcy5nZXRUb3VySWRGcm9tSGFzaCgpLFxuICAgICAgICAgICAgcGFnZTogdGhpcy5nZXRQYWdlRnJvbUhhc2goKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgc3dpdGNoQWN0aXZlVG91cihuZXdfdG91cl9pZCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGl2ZV90b3VyX2lkOiBuZXdfdG91cl9pZCxcbiAgICAgICAgICAgIHBhZ2U6IHRoaXMuZ2V0QWN0aXZlVG91cihuZXdfdG91cl9pZCkuZmluYWxpemVkID8gXCJyZXN1bHRzLTFcIiA6IFwidG91ci1hZG1pblwiLFxuICAgICAgICB9KTtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBcIiNqdWRnaW5nL1wiICsgbmV3X3RvdXJfaWQ7XG4gICAgfVxuICAgIHN3aXRjaFBhZ2UobmV3X3BhZ2UsIGV2ZW50KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcGFnZTogbmV3X3BhZ2UsXG4gICAgICAgIH0pO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IFwiI2p1ZGdpbmcvXCIgKyB0aGlzLnN0YXRlLmFjdGl2ZV90b3VyX2lkICsgXCIvXCIgKyBuZXdfcGFnZTtcbiAgICB9XG4gICAgZ2V0VG91cklkRnJvbUhhc2goKSB7XG4gICAgICAgIGxldCBjaHVua3MgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHIoMSkuc3BsaXQoXCIvXCIpO1xuICAgICAgICBpZiAoY2h1bmtzWzFdICYmIC9eXFxkKyQvLnRlc3QoY2h1bmtzWzFdKSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KGNodW5rc1sxXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGdldFBhZ2VGcm9tSGFzaCgpIHtcbiAgICAgICAgbGV0IGNodW5rcyA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cigxKS5zcGxpdChcIi9cIik7XG4gICAgICAgIGlmIChjaHVua3NbMl0pIHtcbiAgICAgICAgICAgIHJldHVybiBjaHVua3NbMl07XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGFjdGl2ZV90b3VyID0gdGhpcy5nZXRBY3RpdmVUb3VyKHRoaXMuZ2V0VG91cklkRnJvbUhhc2goKSk7XG4gICAgICAgIHJldHVybiAoYWN0aXZlX3RvdXIgJiYgYWN0aXZlX3RvdXIuZmluYWxpemVkKSA/IFwicmVzdWx0cy0xXCIgOiBcInRvdXItYWRtaW5cIjtcbiAgICB9XG4gICAgZ2V0QWN0aXZlVG91cihhY3RpdmVfdG91cl9pZD10aGlzLnN0YXRlLmFjdGl2ZV90b3VyX2lkKSB7XG4gICAgICAgIGlmIChhY3RpdmVfdG91cl9pZCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHJlc3VsdCA9IG51bGw7XG4gICAgICAgIHRoaXMucHJvcHMuZGlzY2lwbGluZXMuZm9yRWFjaCgoZGlzY2lwbGluZSkgPT4ge1xuICAgICAgICAgICAgZGlzY2lwbGluZS50b3Vycy5mb3JFYWNoKCh0b3VyKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRvdXIuaWQgPT09IGFjdGl2ZV90b3VyX2lkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHRvdXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGdldEFjdGl2ZURpc2NpcGxpbmUoKSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBudWxsO1xuICAgICAgICB0aGlzLnByb3BzLmRpc2NpcGxpbmVzLmZvckVhY2goKGRpc2NpcGxpbmUpID0+IHtcbiAgICAgICAgICAgIGRpc2NpcGxpbmUudG91cnMuZm9yRWFjaCgodG91cikgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0b3VyLmlkID09PSB0aGlzLnN0YXRlLmFjdGl2ZV90b3VyX2lkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IGRpc2NpcGxpbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIHBhc3NTaWduYWwobWVzc2FnZSkge1xuICAgICAgICBpZiAodGhpcy5yZWZzLmFjdGl2ZV9ib2R5KSB7XG4gICAgICAgICAgICB0aGlzLnJlZnMuYWN0aXZlX2JvZHkub25TaWduYWwobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyQnV0dG9ucygpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuYWN0aXZlX3RvdXJfaWQgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGxldCBwcm9wcyA9IHtcbiAgICAgICAgICAgIHRvdXI6IHRoaXMuZ2V0QWN0aXZlVG91cigpLFxuICAgICAgICAgICAgb25TaWduYWw6IHRoaXMucGFzc1NpZ25hbC5iaW5kKHRoaXMpLFxuICAgICAgICAgICAga2V5OiB0aGlzLnN0YXRlLmFjdGl2ZV90b3VyX2lkLFxuICAgICAgICB9O1xuICAgICAgICBzd2l0Y2ggKHRoaXMuc3RhdGUucGFnZSkge1xuICAgICAgICBjYXNlIFwidG91ci1hZG1pblwiOlxuICAgICAgICAgICAgcmV0dXJuIDxUb3VyQWRtaW5CdXR0b25zIHsuLi5wcm9wc30gLz5cbiAgICAgICAgY2FzZSBcImhlYXRzXCI6XG4gICAgICAgICAgICByZXR1cm4gPEhlYXRzQnV0dG9ucyB7Li4ucHJvcHN9IC8+XG4gICAgICAgIGNhc2UgXCJyZXN1bHRzLTFcIjpcbiAgICAgICAgY2FzZSBcInJlc3VsdHMtMlwiOlxuICAgICAgICBjYXNlIFwicmVzdWx0cy0zXCI6XG4gICAgICAgICAgICByZXR1cm4gPFRvdXJSZXN1bHRzQnV0dG9ucyB7Li4ucHJvcHN9IC8+XG4gICAgICAgIGNhc2UgXCJkaXNjaXBsaW5lLXJlc3VsdHNcIjpcbiAgICAgICAgICAgIHJldHVybiA8RGlzY2lwbGluZVJlc3VsdHNCdXR0b25zIHsuLi5wcm9wc30gLz5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVW5rbm93biBwYWdlOlwiLCB0aGlzLnN0YXRlLnBhZ2UpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlckJvZHkoKSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlLmFjdGl2ZV90b3VyX2lkID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcHJvcHMgPSB7XG4gICAgICAgICAgICB0b3VyX2lkOiB0aGlzLnN0YXRlLmFjdGl2ZV90b3VyX2lkLFxuICAgICAgICAgICAgcmVmOiBcImFjdGl2ZV9ib2R5XCIsXG4gICAgICAgICAgICBzd2l0Y2hQYWdlOiBwYWdlID0+IHRoaXMuc2V0U3RhdGUoeyBwYWdlIH0pLFxuICAgICAgICAgICAga2V5OiB0aGlzLnN0YXRlLmFjdGl2ZV90b3VyX2lkLFxuICAgICAgICB9O1xuICAgICAgICBzd2l0Y2ggKHRoaXMuc3RhdGUucGFnZSkge1xuICAgICAgICBjYXNlIFwidG91ci1hZG1pblwiOlxuICAgICAgICAgICAgcmV0dXJuIDxUb3VyQWRtaW5Cb2R5IHsuLi5wcm9wc30gLz5cbiAgICAgICAgY2FzZSBcImhlYXRzXCI6XG4gICAgICAgICAgICByZXR1cm4gPEhlYXRzQm9keSB7Li4ucHJvcHN9IC8+XG4gICAgICAgIGNhc2UgXCJyZXN1bHRzLTFcIjpcbiAgICAgICAgICAgIHJldHVybiA8VG91clJlc3VsdHNCb2R5IHByaW50YWJsZSB2ZXJib3NpdHk9XCIxXCIgey4uLnByb3BzfSAvPlxuICAgICAgICBjYXNlIFwicmVzdWx0cy0yXCI6XG4gICAgICAgICAgICByZXR1cm4gPFRvdXJSZXN1bHRzQm9keSBwcmludGFibGUgdmVyYm9zaXR5PVwiMlwiIHsuLi5wcm9wc30gLz5cbiAgICAgICAgY2FzZSBcInJlc3VsdHMtM1wiOlxuICAgICAgICAgICAgcmV0dXJuIDxUb3VyUmVzdWx0c0JvZHkgcHJpbnRhYmxlIHZlcmJvc2l0eT1cIjNcIiB7Li4ucHJvcHN9IC8+XG4gICAgICAgIGNhc2UgXCJkaXNjaXBsaW5lLXJlc3VsdHNcIjpcbiAgICAgICAgICAgIHJldHVybiA8RGlzY2lwbGluZVJlc3VsdHNcbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2lkPXsgdGhpcy5nZXRBY3RpdmVEaXNjaXBsaW5lKCkuaWQgfVxuICAgICAgICAgICAgICAgIHJlZj1cImFjdGl2ZV9ib2R5XCJcbiAgICAgICAgICAgICAgICByZW5kZXJlcj1cInBhZ2VcIiAvPlxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJVbmtub3duIHBhZ2U6XCIsIHRoaXMuc3RhdGUucGFnZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVySGVhZGVyKCkge1xuICAgICAgICBsZXQgYWN0aXZlX3RvdXIgPSB0aGlzLmdldEFjdGl2ZVRvdXIoKTtcbiAgICAgICAgaWYgKCFhY3RpdmVfdG91cikge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxoZWFkZXIgY2xhc3NOYW1lPVwiYXBwLWhlYWRlciB3aXRoLXRhYnNcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udHJvbHNcIj5cbiAgICAgICAgICAgICAgICB7IHRoaXMucmVuZGVyQnV0dG9ucygpIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGgxPnsgdGhpcy5nZXRBY3RpdmVEaXNjaXBsaW5lKCkubmFtZSB9PC9oMT5cbiAgICAgICAgICAgIDxoMj57IGFjdGl2ZV90b3VyLm5hbWUgfTwvaDI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNsZWFyZml4XCI+PC9kaXY+XG4gICAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwicHVsbC1yaWdodCBuYXYgbmF2LXRhYnNcIj5cbiAgICAgICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXsgdGhpcy5zdGF0ZS5wYWdlID09PSBcInRvdXItYWRtaW5cIiA/IFwiYWN0aXZlXCIgOiBcIlwifT5cbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBvbkNsaWNrPXsgdGhpcy5zd2l0Y2hQYWdlLmJpbmQodGhpcywgXCJ0b3VyLWFkbWluXCIpIH0+eyBfKFwiYWRtaW4uanVkZ2luZy10YWJzLnRvdXItYWRtaW5cIikgfTwvYT5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9eyB0aGlzLnN0YXRlLnBhZ2UgPT09IFwiaGVhdHNcIiA/IFwiYWN0aXZlXCIgOiBcIlwifT5cbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBvbkNsaWNrPXsgdGhpcy5zd2l0Y2hQYWdlLmJpbmQodGhpcywgXCJoZWF0c1wiKSB9PnsgXyhcImFkbWluLmp1ZGdpbmctdGFicy5oZWF0c1wiKSB9PC9hPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT17IHRoaXMuc3RhdGUucGFnZSA9PT0gXCJyZXN1bHRzLTFcIiA/IFwiYWN0aXZlXCIgOiBcIlwifT5cbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBvbkNsaWNrPXsgdGhpcy5zd2l0Y2hQYWdlLmJpbmQodGhpcywgXCJyZXN1bHRzLTFcIikgfT57IF8oXCJhZG1pbi5qdWRnaW5nLXRhYnMucmVzdWx0cy0xXCIpIH08L2E+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8bGkgY2xhc3NOYW1lPXsgdGhpcy5zdGF0ZS5wYWdlID09PSBcInJlc3VsdHMtMlwiID8gXCJhY3RpdmVcIiA6IFwiXCJ9PlxuICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiI1wiIG9uQ2xpY2s9eyB0aGlzLnN3aXRjaFBhZ2UuYmluZCh0aGlzLCBcInJlc3VsdHMtMlwiKSB9PnsgXyhcImFkbWluLmp1ZGdpbmctdGFicy5yZXN1bHRzLTJcIikgfTwvYT5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9eyB0aGlzLnN0YXRlLnBhZ2UgPT09IFwicmVzdWx0cy0zXCIgPyBcImFjdGl2ZVwiIDogXCJcIn0+XG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjXCIgb25DbGljaz17IHRoaXMuc3dpdGNoUGFnZS5iaW5kKHRoaXMsIFwicmVzdWx0cy0zXCIpIH0+eyBfKFwiYWRtaW4uanVkZ2luZy10YWJzLnJlc3VsdHMtM1wiKSB9PC9hPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT17IHRoaXMuc3RhdGUucGFnZSA9PT0gXCJkaXNjaXBsaW5lLXJlc3VsdHNcIiA/IFwiYWN0aXZlXCIgOiBcIlwifT5cbiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBvbkNsaWNrPXsgdGhpcy5zd2l0Y2hQYWdlLmJpbmQodGhpcywgXCJkaXNjaXBsaW5lLXJlc3VsdHNcIikgfT57IF8oXCJhZG1pbi5qdWRnaW5nLXRhYnMuZGlzY2lwbGluZS1yZXN1bHRzXCIpIH08L2E+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNsZWFyZml4XCI+PC9kaXY+XG4gICAgICAgIDwvaGVhZGVyPlxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImFwcFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzaWRlLW1lbnVcIj5cbiAgICAgICAgICAgICAgICA8Q29tcGV0aXRpb25TY2hlbWFcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlVG91cj17IHRoaXMuc3dpdGNoQWN0aXZlVG91ci5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgICAgICAgICAgY3VycmVudF90b3VyX2lkPXsgdGhpcy5zdGF0ZS5hY3RpdmVfdG91cl9pZCB9XG4gICAgICAgICAgICAgICAgICAgIGNvbXBldGl0aW9uX3BsYW49eyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX3BsYW4gfVxuICAgICAgICAgICAgICAgICAgICBkaXNjaXBsaW5lcz17IHRoaXMucHJvcHMuZGlzY2lwbGluZXMgfSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFwcC1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgeyB0aGlzLnJlbmRlckhlYWRlcigpIH1cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFwcC1ib2R5XCI+XG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJCb2R5KCkgfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbn1cblxuY2xhc3MgQ29tcGV0aXRpb25TY2hlbWEgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHNvcnRfYnlfcGxhbjogISFwYXJzZUludChzZXNzaW9uU3RvcmFnZVtcInNvcnRfYnlfcGxhblwiXSksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGFjdGl2YXRlVG91cih0b3VyKSB7XG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRlVG91cih0b3VyLmlkKTtcbiAgICB9XG4gICAgc3dpdGNoVG9QbGFuKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHNvcnRfYnlfcGxhbjogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICAgIHNlc3Npb25TdG9yYWdlW1wic29ydF9ieV9wbGFuXCJdID0gXCIxXCI7XG4gICAgfVxuICAgIHN3aXRjaFRvRGlzY2lwbGluZXMoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgc29ydF9ieV9wbGFuOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgICAgIHNlc3Npb25TdG9yYWdlW1wic29ydF9ieV9wbGFuXCJdID0gXCIwXCI7XG4gICAgfVxuICAgIHJlbmRlclRvdXIodG91ciwgZGlzY2lwbGluZV9uYW1lPW51bGwpIHtcbiAgICAgICAgdmFyIGNsYXNzTmFtZSA9IFwibGV2ZWwtMlwiICtcbiAgICAgICAgICAgICh0b3VyLmZpbmFsaXplZCA/IFwiIGdyZXlcIiA6IFwiXCIpICtcbiAgICAgICAgICAgICh0b3VyLmlkID09PSB0aGlzLnByb3BzLmN1cnJlbnRfdG91cl9pZCA/IFwiIGFjdGl2ZVwiIDogXCJcIik7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT17IGNsYXNzTmFtZSB9IG9uQ2xpY2s9eyB0aGlzLmFjdGl2YXRlVG91ci5iaW5kKHRoaXMsIHRvdXIpIH0ga2V5PXsgdG91ci5pZCB9ID5cbiAgICAgICAgICAgIHsgZGlzY2lwbGluZV9uYW1lID8gPHNtYWxsPjxzdHJvbmc+eyBkaXNjaXBsaW5lX25hbWUgfTwvc3Ryb25nPjxiciAvPjwvc21hbGw+IDogbnVsbH1cbiAgICAgICAgICAgIHsgdG91ci5uYW1lIH1cbiAgICAgICAgPC9kaXY+XG4gICAgfVxuICAgIHJlbmRlckRpc2NpcGxpbmUoaWMpIHtcbiAgICAgICAgcmV0dXJuIDxkZXRhaWxzIGNsYXNzTmFtZT1cImJsb2NrXCIga2V5PXsgaWMuaWQgfSBvcGVuPXsgISFwYXJzZUludChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwiRF9KX1wiICsgaWMuaWQpKSB9PlxuICAgICAgICAgICAgPHN1bW1hcnkgY2xhc3NOYW1lPVwibGV2ZWwtMVwiIG9uQ2xpY2s9eyAoZSkgPT4gc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShcIkRfSl9cIiArIGljLmlkLCBlLnRhcmdldC5wYXJlbnROb2RlLm9wZW4gPyAwIDogMSkgfT5cbiAgICAgICAgICAgICAgICB7IGljLm5hbWUgfVxuICAgICAgICAgICAgPC9zdW1tYXJ5PlxuICAgICAgICAgICAgeyBpYy50b3Vycy5tYXAoKHRvdXIpID0+IHRoaXMucmVuZGVyVG91cih0b3VyKSkgfVxuICAgICAgICA8L2RldGFpbHM+XG4gICAgfVxuICAgIHJlbmRlckJ5RGlzY2lwbGluZSgpIHtcbiAgICAgICAgdmFyIGRhdGEgPSB0aGlzLnByb3BzLmRpc2NpcGxpbmVzLm1hcChmdW5jdGlvbihpYykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyRGlzY2lwbGluZShpYyk7XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cIm5vc2VsZWN0XCI+eyBkYXRhIH08L2Rpdj47XG4gICAgfVxuICAgIHJlbmRlckJ5UGxhbigpIHtcbiAgICAgICAgbGV0IHRvdXJzID0ge307XG4gICAgICAgIHRoaXMucHJvcHMuZGlzY2lwbGluZXMuZm9yRWFjaCgoZGlzY2lwbGluZSkgPT5cbiAgICAgICAgICAgIGRpc2NpcGxpbmUudG91cnMuZm9yRWFjaCgodG91cikgPT4gdG91cnNbdG91ci5pZF0gPSB7XG4gICAgICAgICAgICAgICAgdG91cjogdG91cixcbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX25hbWU6IGRpc2NpcGxpbmUubmFtZSxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIClcbiAgICAgICAgbGV0IHJlc3VsdCA9IHRoaXMucHJvcHMuY29tcGV0aXRpb25fcGxhbi5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0udG91cl9pZCAhPT0gbnVsbCkubWFwKChpdGVtKSA9PlxuICAgICAgICAgICAgdGhpcy5yZW5kZXJUb3VyKHRvdXJzW2l0ZW0udG91cl9pZF0udG91ciwgdG91cnNbaXRlbS50b3VyX2lkXS5kaXNjaXBsaW5lX25hbWUpXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiA8ZGl2PnsgcmVzdWx0IH08L2Rpdj47XG4gICAgfVxuICAgIHJlbmRlckxpc3QoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2PlxuICAgICAgICAgICAgeyB0aGlzLnN0YXRlLnNvcnRfYnlfcGxhbiA/IHRoaXMucmVuZGVyQnlQbGFuKCkgOiB0aGlzLnJlbmRlckJ5RGlzY2lwbGluZSgpIH1cbiAgICAgICAgPC9kaXY+XG4gICAgfVxuICAgIHJlbmRlckJ1dHRvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuc29ydF9ieV9wbGFuXG4gICAgICAgICAgICA/IDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbSBmdWxsLXdpZHRoXCIgb25DbGljaz17IHRoaXMuc3dpdGNoVG9EaXNjaXBsaW5lcy5iaW5kKHRoaXMpIH0+XG4gICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4uYnV0dG9ucy5zd2l0Y2hfdG9fZGlzY2lwbGluZXNcIikgfVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA6IDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbSBmdWxsLXdpZHRoXCIgb25DbGljaz17IHRoaXMuc3dpdGNoVG9QbGFuLmJpbmQodGhpcykgfT5cbiAgICAgICAgICAgICAgICB7IF8oXCJhZG1pbi5idXR0b25zLnN3aXRjaF90b19wbGFuXCIpIH1cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImNvbXBldGl0aW9uLXNjaGVtYVwiPlxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlckxpc3QoKSB9XG4gICAgICAgICAgICB7IHRoaXMucmVuZGVyQnV0dG9uKCkgfVxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG4iLCJpbXBvcnQgeyBfIH0gZnJvbSBcImkxMG4vbG9hZGVyXCI7XG5pbXBvcnQgeyBvblRvdWNoRW5kT3JDbGljayB9IGZyb20gXCJ1aS90YWJsZXRfY29tcG9uZW50c1wiO1xuXG5cbmZ1bmN0aW9uIF9fKCkge1xuICAgIGxldCBhcmdzID0gW107XG4gICAgZm9yIChsZXQgaWR4ID0gMTsgaWR4IDwgYXJndW1lbnRzLmxlbmd0aDsgKytpZHgpIHtcbiAgICAgICAgYXJncy5wdXNoKGFyZ3VtZW50c1tpZHhdKTtcbiAgICB9XG4gICAgcmV0dXJuIF8oXCJzY29yaW5nX3N5c3RlbXMucm9zZmFyci5cIiArIGFyZ3VtZW50c1swXSwgLi4uYXJncyk7XG59XG5cbmV4cG9ydCBjbGFzcyBEaXNjaXBsaW5lUmVzdWx0c1RhYmxlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXJSb3dIZWFkZXIocHJldl9yb3csIG5leHRfcm93KSB7XG4gICAgICAgIGxldCBuZWVkX3JlbmRlciA9ICh0eXBlb2YgcHJldl9yb3cgPT09IFwidW5kZWZpbmVkXCIpIHx8IChwcmV2X3Jvdy5ydW4udG91ci5pZCAhPT0gbmV4dF9yb3cucnVuLnRvdXIuaWQpXG4gICAgICAgIGlmICghbmVlZF9yZW5kZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiA8dHIga2V5PXsgXCJIXCIgKyBuZXh0X3Jvdy5ydW4uaWQgfT48dGggY2xhc3NOYW1lPVwidG91ci1uYW1lXCIgY29sU3Bhbj1cIjZcIj5cbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+eyBuZXh0X3Jvdy5ydW4udG91ci5uYW1lIH08L3A+XG4gICAgICAgIDwvdGg+PC90cj47XG4gICAgfVxuICAgIHJlbmRlclJvdyhyb3cpIHtcbiAgICAgICAgbGV0IHAgPSByb3cucnVuLnBhcnRpY2lwYW50O1xuICAgICAgICByZXR1cm4gPHRyIGtleT17IFwiUlwiICsgcm93LnJ1bi5pZCB9PlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctOCBwbGFjZVwiPjxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+eyByb3cucGxhY2UgPT09IG51bGwgPyBcIlwiIDogcm93LnBsYWNlIH08L3A+PC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJ3LTggbnVtYmVyXCI+PHAgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj57IHAubnVtYmVyIH08L3A+PC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJ3LTM2XCIgY29sU3Bhbj1cIjJcIj5cbiAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwic3BvcnRzbWVuXCI+PHRib2R5PlxuICAgICAgICAgICAgICAgICAgICB7IHAuZm9ybWF0aW9uX25hbWUgPyA8dHI+PHRoIGNvbFNwYW49XCIyXCI+PHAgY2xhc3NOYW1lPVwidGV4dC1sZWZ0XCI+eyBwLmZvcm1hdGlvbl9uYW1lIH08L3A+PC90aD48L3RyPiA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICB7IHAuc3BvcnRzbWVuLm1hcCgocywgaWR4KSA9PiA8dHIga2V5PXsgaWR4IH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwidy03NVwiPjxwPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgcy5sYXN0X25hbWUgKyBcIiBcIiArIHMuZmlyc3RfbmFtZSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzLnN1YnN0aXR1dGUgPyA8aT4gKHsgXyhcImFkbWluLmxhYmVscy5zdWJcIikgfS4pPC9pPiA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9wPjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwidy0yNVwiPjxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+eyBzLnllYXJfb2ZfYmlydGggfTwvcD48L3RkPlxuICAgICAgICAgICAgICAgICAgICA8L3RyPiApIH1cbiAgICAgICAgICAgICAgICA8L3Rib2R5PjwvdGFibGU+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctMjQgY2x1YlwiPjxwPnsgcC5jbHViLm5hbWUgfTwvcD48L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctMjQgY29hY2hlc1wiPjxwPnsgcC5jb2FjaGVzLnNwbGl0KFwiLFwiKS5tYXAoKGMpID0+IFtjLnRyaW0oKSwgPGJyIGtleT1cIlhcIiAvPl0pIH08L3A+PC90ZD5cbiAgICAgICAgPC90cj47XG4gICAgfVxuICAgIHJlbmRlclJvd3MoKSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgbGV0IHRhYmxlID0gdGhpcy5wcm9wcy50YWJsZTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0YWJsZS5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgbGV0IGhlYWRlciA9IHRoaXMucmVuZGVyUm93SGVhZGVyKHRhYmxlW2kgLSAxXSwgdGFibGVbaV0pO1xuICAgICAgICAgICAgaGVhZGVyICYmIHJlc3VsdC5wdXNoKGhlYWRlcik7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh0aGlzLnJlbmRlclJvdyh0YWJsZVtpXSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiZGlzY2lwbGluZS1yZXN1bHRzXCI+XG4gICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwiYm9yZGVyZWQtdGFibGVcIj5cbiAgICAgICAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJ3LThcIj48cD57IF9fKFwicmVzdWx0cy5sYWJlbHMucGxhY2VcIikgfTwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInctOFwiPjxwPnsgX18oXCJyZXN1bHRzLmxhYmVscy5udW1iZXJcIikgfTwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInctMjdcIj48cD57IF9fKFwicmVzdWx0cy5sYWJlbHMuc3BvcnRzbWVuXCIpIH08L3A+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJ3LTlcIj48cD57IF9fKFwicmVzdWx0cy5sYWJlbHMuc3BvcnRzbWVuX3llYXJfb2ZfYmlydGhcIikgfTwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInctMjRcIj48cD57IF9fKFwicmVzdWx0cy5sYWJlbHMucGFydGljaXBhbnRfY2x1YlwiKSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwidy0yNFwiPjxwPnsgX18oXCJyZXN1bHRzLmxhYmVscy5wYXJ0aWNpcGFudF9jb2FjaGVzXCIpIH08L3A+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICA8L3RoZWFkPlxuICAgICAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnJlbmRlclJvd3MoKSB9XG4gICAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgIDwvZGl2PjtcbiAgICB9XG59XG5cbmNsYXNzIERpc2NpcGxpbmVSZXN1bHRzUHJlc2VudGVyVGFibGVSb3cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGFjdGl2ZTogZmFsc2UsXG4gICAgICAgIH1cbiAgICB9XG4gICAgdG9nZ2xlQWN0aXZlKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGl2ZTogIXRoaXMuc3RhdGUuYWN0aXZlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgcCA9IHRoaXMucHJvcHMucGFydGljaXBhbnQ7XG4gICAgICAgIHJldHVybiA8dGFibGUgY2xhc3NOYW1lPXsgXCJyb3dcIiArICggdGhpcy5zdGF0ZS5hY3RpdmUgPyBcIiBhY3RpdmVcIiA6IFwiXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICB7Li4ub25Ub3VjaEVuZE9yQ2xpY2sodGhpcy50b2dnbGVBY3RpdmUuYmluZCh0aGlzKSl9Pjx0Ym9keT5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicGxhY2VcIiByb3dTcGFuPVwiM1wiPlxuICAgICAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMucGxhY2UgPT09IG51bGwgPyBcIlwiIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+eyB0aGlzLnByb3BzLnBsYWNlIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBsYWNlLWxhYmVsXCI+eyBfKFwicHJlc2VudGVyLmxhYmVscy5wbGFjZVwiKSB9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gfVxuICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cIm51bWJlclwiPnsgcC5udW1iZXIgfTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cIm5hbWVcIj57IHAubmFtZSB9PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImNsdWJcIiBjb2xTcGFuPVwiMlwiPnsgcC5jbHViLm5hbWUgfTwvdGQ+XG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJjb2FjaGVzXCIgY29sU3Bhbj1cIjJcIj57IHAuY29hY2hlcyB9PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgIDwvdGJvZHk+PC90YWJsZT5cbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBEaXNjaXBsaW5lUmVzdWx0c1ByZXNlbnRlclRhYmxlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXJSb3dIZWFkZXIocHJldl9yb3csIG5leHRfcm93KSB7XG4gICAgICAgIGxldCBuZWVkX3JlbmRlciA9ICh0eXBlb2YgcHJldl9yb3cgPT09IFwidW5kZWZpbmVkXCIpIHx8IChwcmV2X3Jvdy5ydW4udG91ci5pZCAhPT0gbmV4dF9yb3cucnVuLnRvdXIuaWQpXG4gICAgICAgIGlmICghbmVlZF9yZW5kZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cInRvdXItbmFtZVwiIGtleT17IFwiSFwiICsgbmV4dF9yb3cucnVuLmlkIH0+XG4gICAgICAgICAgICB7IG5leHRfcm93LnJ1bi50b3VyLm5hbWUgfVxuICAgICAgICA8L2Rpdj5cbiAgICB9XG4gICAgcmVuZGVyUm93KHJvdykge1xuICAgICAgICByZXR1cm4gPERpc2NpcGxpbmVSZXN1bHRzUHJlc2VudGVyVGFibGVSb3cga2V5PXsgXCJSXCIgKyByb3cucnVuLmlkIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRpY2lwYW50PXsgcm93LnJ1bi5wYXJ0aWNpcGFudCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZT17IHJvdy5wbGFjZSB9IC8+XG4gICAgfVxuICAgIHJlbmRlclJvd3MoKSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgbGV0IHRhYmxlID0gdGhpcy5wcm9wcy50YWJsZTtcbiAgICAgICAgZm9yIChsZXQgaSA9IHRhYmxlLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgICAgICBsZXQgaGVhZGVyID0gdGhpcy5yZW5kZXJSb3dIZWFkZXIodGFibGVbaSArIDFdLCB0YWJsZVtpXSk7XG4gICAgICAgICAgICBoZWFkZXIgJiYgcmVzdWx0LnB1c2goaGVhZGVyKTtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRoaXMucmVuZGVyUm93KHRhYmxlW2ldKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGRpdj5cbiAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJSb3dzKCkgfVxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG5cbmNsYXNzIERpc2NpcGxpbmVSZXN1bHRzU2NyZWVuT3BlcmF0b3JUYWJsZVJvdyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgcCA9IHRoaXMucHJvcHMucGFydGljaXBhbnQ7XG4gICAgICAgIHJldHVybiA8dGFibGUgY2xhc3NOYW1lPXsgXCJyb3dcIiArICggdGhpcy5wcm9wcy5zZWxlY3RlZCA/IFwiIHNlbGVjdGVkXCIgOiBcIlwiKSB9XG4gICAgICAgICAgICAgICAgICAgICAgey4uLm9uVG91Y2hFbmRPckNsaWNrKHRoaXMucHJvcHMub25DbGljayl9Pjx0Ym9keT5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicGxhY2VcIiByb3dTcGFuPVwiMlwiPlxuICAgICAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMucGxhY2UgPT09IG51bGwgPyBcIlwiIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+eyB0aGlzLnByb3BzLnBsYWNlIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBsYWNlLWxhYmVsXCI+eyBfKFwicHJlc2VudGVyLmxhYmVscy5wbGFjZVwiKSB9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gfVxuICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cIm51bWJlclwiPnsgcC5udW1iZXIgfTwvdGQ+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cIm5hbWVcIj57IHAubmFtZSB9PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImNsdWJcIiBjb2xTcGFuPVwiMlwiPnsgcC5jbHViLm5hbWUgfTwvdGQ+XG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICA8L3Rib2R5PjwvdGFibGU+XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgRGlzY2lwbGluZVJlc3VsdHNTY3JlZW5PcGVyYXRvclRhYmxlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXJSb3dIZWFkZXIocHJldl9yb3csIG5leHRfcm93KSB7XG4gICAgICAgIGxldCBuZWVkX3JlbmRlciA9ICh0eXBlb2YgcHJldl9yb3cgPT09IFwidW5kZWZpbmVkXCIpIHx8IChwcmV2X3Jvdy5ydW4udG91ci5pZCAhPT0gbmV4dF9yb3cucnVuLnRvdXIuaWQpXG4gICAgICAgIGlmICghbmVlZF9yZW5kZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cInRvdXItbmFtZVwiIGtleT17IFwiSFwiICsgbmV4dF9yb3cucnVuLmlkIH0+XG4gICAgICAgICAgICB7IG5leHRfcm93LnJ1bi50b3VyLm5hbWUgfVxuICAgICAgICA8L2Rpdj5cbiAgICB9XG4gICAgcmVuZGVyUm93KHJvdywgcGxhY2UpIHtcbiAgICAgICAgcmV0dXJuIDxEaXNjaXBsaW5lUmVzdWx0c1NjcmVlbk9wZXJhdG9yVGFibGVSb3dcbiAgICAgICAgICAgIGtleT17IFwiUlwiICsgcm93LnJ1bi5pZCB9XG4gICAgICAgICAgICBwYXJ0aWNpcGFudD17IHJvdy5ydW4ucGFydGljaXBhbnQgfVxuICAgICAgICAgICAgcGxhY2U9eyByb3cucGxhY2UgfVxuICAgICAgICAgICAgb25DbGljaz17ICgpID0+IHRoaXMucHJvcHMub25QbGFjZVNlbGVjdChwbGFjZSkgfVxuICAgICAgICAgICAgc2VsZWN0ZWQ9eyB0aGlzLnByb3BzLnNlbGVjdGVkUGxhY2UgIT09IG51bGwgJiYgcGxhY2UgPj0gdGhpcy5wcm9wcy5zZWxlY3RlZFBsYWNlIH0gLz5cbiAgICB9XG4gICAgcmVuZGVyUm93cygpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgICAgICBsZXQgdGFibGUgPSB0aGlzLnByb3BzLnRhYmxlO1xuICAgICAgICBmb3IgKGxldCBpID0gdGFibGUubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgICAgIGxldCBoZWFkZXIgPSB0aGlzLnJlbmRlclJvd0hlYWRlcih0YWJsZVtpICsgMV0sIHRhYmxlW2ldKTtcbiAgICAgICAgICAgIGhlYWRlciAmJiByZXN1bHQucHVzaChoZWFkZXIpO1xuICAgICAgICAgICAgcmVzdWx0LnB1c2godGhpcy5yZW5kZXJSb3codGFibGVbaV0sIGkgKyAxKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGRpdj5cbiAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJSb3dzKCkgfVxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG4iLCJpbXBvcnQgeyBfIH0gZnJvbSBcImkxMG4vbG9hZGVyXCI7XG5cblxuY2xhc3MgQmFzZVNjb3JlSW5wdXQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBSZWFjdERPTS5maW5kRE9NTm9kZSh0aGlzKS5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRcIilbMF0uc2VsZWN0KCk7XG4gICAgICAgIHRoaXMub25Nb3VudCguLi5hcmd1bWVudHMpO1xuICAgIH1cbiAgICBvbk1vdW50KCkge31cbiAgICBvbkNoYW5nZShrZXksIGV2ZW50KSB7XG4gICAgICAgIGlmICh0eXBlb2Yoa2V5KSAhPT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAga2V5ID0gW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHNjb3JlID0gdGhpcy5zZXJpYWxpemUoKTtcbiAgICAgICAgbGV0IHNjb3JlX2lubmVyID0gc2NvcmU7XG4gICAgICAgIGZvciAobGV0IGlkeCA9IDA7IGlkeCA8IGtleS5sZW5ndGggLSAxOyArK2lkeCkge1xuICAgICAgICAgICAgc2NvcmVfaW5uZXIgPSBzY29yZV9pbm5lcltrZXlbaWR4XV07XG4gICAgICAgIH1cbiAgICAgICAgc2NvcmVfaW5uZXJba2V5W2tleS5sZW5ndGggLSAxXV0gPSBldmVudC50YXJnZXQudHlwZSA9PT0gXCJjaGVja2JveFwiXG4gICAgICAgICAgICA/IChldmVudC50YXJnZXQuaW5kZXRlcm1pbmF0ZSA/IG51bGwgOiBldmVudC50YXJnZXQuY2hlY2tlZClcbiAgICAgICAgICAgIDogZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgICAgICB0aGlzLnByb3BzLnVwZGF0ZVZhbHVlKHNjb3JlKTtcbiAgICB9XG4gICAgb25LZXlVcChldmVudCkge1xuICAgICAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gMjcpIHsgLy8gRXNjXG4gICAgICAgICAgICB0aGlzLnByb3BzLnN0b3BFZGl0aW5nKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaXNFbXB0eSh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdmFsdWUgPT09IFwiXCIgfHwgdmFsdWUgPT09IG51bGw7XG4gICAgfVxuICAgIG9uU3VibWl0KGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLnByb3BzLnN1Ym1pdFZhbHVlKHRoaXMuc2VyaWFsaXplKCkpO1xuICAgIH1cbiAgICByZW5kZXJCdXR0b25zKCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5yZWFkT25seSkge1xuICAgICAgICAgICAgcmV0dXJuIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5XCIgdHlwZT1cImJ1dHRvblwiIG9uQ2xpY2s9eyB0aGlzLnByb3BzLnN0b3BFZGl0aW5nIH0+XG4gICAgICAgICAgICAgICAgeyBfKFwiZ2xvYmFsLmJ1dHRvbnMuY2xvc2VcIikgfVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxkaXY+XG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiIHR5cGU9XCJzdWJtaXRcIj57IF8oXCJnbG9iYWwuYnV0dG9ucy5zdWJtaXRcIikgfTwvYnV0dG9uPiZuYnNwO1xuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnlcIiB0eXBlPVwiYnV0dG9uXCIgb25DbGljaz17IHRoaXMucHJvcHMuc3RvcEVkaXRpbmcgfT57IF8oXCJnbG9iYWwuYnV0dG9ucy5kaXNjYXJkXCIpIH08L2J1dHRvbj5cbiAgICAgICAgICAgIDxDb25maXJtYXRpb25CdXR0b25cbiAgICAgICAgICAgICAgICBqdWRnZV9yb2xlPXsgdGhpcy5wcm9wcy5kaXNjaXBsaW5lX2p1ZGdlLnJvbGUgfVxuICAgICAgICAgICAgICAgIGNvbmZpcm1lZD17IHRoaXMucHJvcHMuY29uZmlybWVkIH1cbiAgICAgICAgICAgICAgICB0b2dnbGVDb25maXJtYXRpb249eyB0aGlzLnByb3BzLnRvZ2dsZUNvbmZpcm1hdGlvbiB9XG4gICAgICAgICAgICAgICAgb25LZXlVcD17IHRoaXMub25LZXlVcC5iaW5kKHRoaXMpIH0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIDxmb3JtIG9uU3VibWl0PXsgdGhpcy5vblN1Ym1pdC5iaW5kKHRoaXMpIH0gY2xhc3NOYW1lPVwiZm9ybS1zY29yZS1pbnB1dFwiPlxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlclRhYmxlKCkgfVxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlckJ1dHRvbnMoKSB9XG4gICAgICAgIDwvZm9ybT5cbiAgICB9XG59XG5cbmNsYXNzIERhbmNlU2NvcmVJbnB1dCBleHRlbmRzIEJhc2VTY29yZUlucHV0IHtcbiAgICByZW5kZXJUYWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIDx0YWJsZT48dGJvZHk+XG4gICAgICAgICAgICA8dHI+PHRoPkZXOjwvdGg+PHRkPlxuICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXsgdGhpcy5wcm9wcy5zY29yZS5md193b21hbiB9XG4gICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMsIFwiZndfd29tYW5cIikgfVxuICAgICAgICAgICAgICAgICAgICBvbktleVVwPXsgdGhpcy5vbktleVVwLmJpbmQodGhpcykgfSAvPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDx0aD5GTTo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc2NvcmUuZndfbWFuIH1cbiAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcywgXCJmd19tYW5cIikgfVxuICAgICAgICAgICAgICAgICAgICBvbktleVVwPXsgdGhpcy5vbktleVVwLmJpbmQodGhpcykgfSAvPlxuICAgICAgICAgICAgPC90ZD48L3RyPlxuICAgICAgICAgICAgPHRyPjx0aD5ERjo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc2NvcmUuZGFuY2VfZmlncyB9XG4gICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMsIFwiZGFuY2VfZmlnc1wiKSB9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5VXA9eyB0aGlzLm9uS2V5VXAuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRoPkM6PC90aD48dGQ+XG4gICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9eyB0aGlzLnByb3BzLnNjb3JlLmNvbXBvc2l0aW9uIH1cbiAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcywgXCJjb21wb3NpdGlvblwiKSB9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5VXA9eyB0aGlzLm9uS2V5VXAuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICA8L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPlNNOjwvdGg+PHRkPlxuICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXsgdGhpcy5wcm9wcy5zY29yZS5zbWFsbF9taXN0YWtlcyB9XG4gICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMsIFwic21hbGxfbWlzdGFrZXNcIikgfVxuICAgICAgICAgICAgICAgICAgICBvbktleVVwPXsgdGhpcy5vbktleVVwLmJpbmQodGhpcykgfSAvPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDx0aD5CTTo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc2NvcmUuYmlnX21pc3Rha2VzIH1cbiAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcywgXCJiaWdfbWlzdGFrZXNcIikgfVxuICAgICAgICAgICAgICAgICAgICBvbktleVVwPXsgdGhpcy5vbktleVVwLmJpbmQodGhpcykgfSAvPlxuICAgICAgICAgICAgPC90ZD48L3RyPlxuICAgICAgICA8L3Rib2R5PjwvdGFibGU+XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGZ3X21hbjogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmZ3X21hbikgPyBwYXJzZUludCh0aGlzLnByb3BzLnNjb3JlLmZ3X21hbikgfHwgMCA6IG51bGwsXG4gICAgICAgICAgICBmd193b21hbjogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmZ3X3dvbWFuKSA/IHBhcnNlSW50KHRoaXMucHJvcHMuc2NvcmUuZndfd29tYW4pIHx8IDAgOiBudWxsLFxuICAgICAgICAgICAgZGFuY2VfZmlnczogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmRhbmNlX2ZpZ3MpID8gcGFyc2VGbG9hdCh0aGlzLnByb3BzLnNjb3JlLmRhbmNlX2ZpZ3MpIHx8IDAgOiBudWxsLFxuICAgICAgICAgICAgY29tcG9zaXRpb246ICF0aGlzLmlzRW1wdHkodGhpcy5wcm9wcy5zY29yZS5jb21wb3NpdGlvbikgPyBwYXJzZUZsb2F0KHRoaXMucHJvcHMuc2NvcmUuY29tcG9zaXRpb24pIHx8IDAgOiBudWxsLFxuICAgICAgICAgICAgc21hbGxfbWlzdGFrZXM6ICF0aGlzLmlzRW1wdHkodGhpcy5wcm9wcy5zY29yZS5zbWFsbF9taXN0YWtlcykgPyBwYXJzZUludCh0aGlzLnByb3BzLnNjb3JlLnNtYWxsX21pc3Rha2VzKSB8fCAwIDogbnVsbCxcbiAgICAgICAgICAgIGJpZ19taXN0YWtlczogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmJpZ19taXN0YWtlcykgPyBwYXJzZUludCh0aGlzLnByb3BzLnNjb3JlLmJpZ19taXN0YWtlcykgfHwgMCA6IG51bGwsXG4gICAgICAgIH07XG4gICAgfVxufVxuXG5jbGFzcyBBY3JvU2NvcmVJbnB1dCBleHRlbmRzIEJhc2VTY29yZUlucHV0IHtcbiAgICByZW5kZXJUYWJsZSgpIHtcbiAgICAgICAgdmFyIGZpZWxkcyA9IHRoaXMucHJvcHMuc2NvcmUucmVkdWN0aW9ucy5tYXAoZnVuY3Rpb24odmFsdWUsIGlkeCkge1xuICAgICAgICAgICAgcmV0dXJuIFs8dGgga2V5PXsgXCJIXCIgKyBpZHggfT5Be2lkeCArIDF9OjwvdGg+LCA8dGQga2V5PXsgXCJWXCIgKyBpZHggfT5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc2NvcmUucmVkdWN0aW9uc1tpZHhdIH1cbiAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcywgW1wicmVkdWN0aW9uc1wiLCBpZHhdKSB9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5VXA9eyB0aGlzLm9uS2V5VXAuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICA8L3RkPl1cbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgZmllbGRzLnB1c2goWzx0aCBrZXk9XCJIRkRcIj5GRDo8L3RoPiwgPHRkIGtleT1cIlZGRFwiPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXsgdGhpcy5wcm9wcy5zY29yZS5taXN0YWtlcyB9XG4gICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzLCBcIm1pc3Rha2VzXCIpIH1cbiAgICAgICAgICAgICAgICBvbktleVVwPXsgdGhpcy5vbktleVVwLmJpbmQodGhpcykgfSAvPlxuICAgICAgICA8L3RkPl0pXG4gICAgICAgIHZhciByb3dzID0gW11cbiAgICAgICAgZm9yICh2YXIgaWR4ID0gMDsgaWR4IDwgZmllbGRzLmxlbmd0aDsgaWR4ICs9IDIpIHtcbiAgICAgICAgICAgIHJvd3MucHVzaCg8dHIga2V5PXsgXCJSXCIgKyBpZHggfT57IGZpZWxkcy5zbGljZShpZHgsIGlkeCArIDIpIH08L3RyPik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDx0YWJsZT48dGJvZHk+XG4gICAgICAgICAgICB7IHJvd3MgfVxuICAgICAgICA8L3Rib2R5PjwvdGFibGU+XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlZHVjdGlvbnM6IHRoaXMucHJvcHMuc2NvcmUucmVkdWN0aW9ucy5tYXAoZnVuY3Rpb24ocmVkdWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICF0aGlzLmlzRW1wdHkocmVkdWN0aW9uKSA/IHBhcnNlSW50KHJlZHVjdGlvbikgfHwgMCA6IG51bGw7XG4gICAgICAgICAgICB9LmJpbmQodGhpcykpLFxuICAgICAgICAgICAgbWlzdGFrZXM6IHBhcnNlSW50KHRoaXMucHJvcHMuc2NvcmUubWlzdGFrZXMpIHx8IDAsXG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNsYXNzIEZvcm1hdGlvblNjb3JlSW5wdXQgZXh0ZW5kcyBCYXNlU2NvcmVJbnB1dCB7XG4gICAgcmVuZGVyVGFibGUoKSB7XG4gICAgICAgIHJldHVybiA8dGFibGU+PHRib2R5PlxuICAgICAgICAgICAgPHRyPjx0aD5EVDo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc2NvcmUuZGFuY2VfdGVjaCB9XG4gICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMsIFwiZGFuY2VfdGVjaFwiKSB9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5VXA9eyB0aGlzLm9uS2V5VXAuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRoPkRGOjwvdGg+PHRkPlxuICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXsgdGhpcy5wcm9wcy5zY29yZS5kYW5jZV9maWdzIH1cbiAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcywgXCJkYW5jZV9maWdzXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgb25LZXlVcD17IHRoaXMub25LZXlVcC5iaW5kKHRoaXMpIH0gLz5cbiAgICAgICAgICAgIDwvdGQ+PC90cj5cbiAgICAgICAgICAgIDx0cj48dGg+STo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc2NvcmUuaW1wcmVzc2lvbiB9XG4gICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMsIFwiaW1wcmVzc2lvblwiKSB9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5VXA9eyB0aGlzLm9uS2V5VXAuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRoPk06PC90aD48dGQ+XG4gICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9eyB0aGlzLnByb3BzLnNjb3JlLnNtYWxsX21pc3Rha2VzIH1cbiAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcywgXCJzbWFsbF9taXN0YWtlc1wiKSB9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5VXA9eyB0aGlzLm9uS2V5VXAuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICA8L3RkPjwvdHI+XG4gICAgICAgIDwvdGJvZHk+PC90YWJsZT5cbiAgICB9XG4gICAgc2VyaWFsaXplKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGFuY2VfdGVjaDogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmRhbmNlX3RlY2gpID8gcGFyc2VGbG9hdCh0aGlzLnByb3BzLnNjb3JlLmRhbmNlX3RlY2gpIHx8IDAgOiBudWxsLFxuICAgICAgICAgICAgZGFuY2VfZmlnczogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmRhbmNlX2ZpZ3MpID8gcGFyc2VGbG9hdCh0aGlzLnByb3BzLnNjb3JlLmRhbmNlX2ZpZ3MpIHx8IDAgOiBudWxsLFxuICAgICAgICAgICAgaW1wcmVzc2lvbjogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmltcHJlc3Npb24pID8gcGFyc2VGbG9hdCh0aGlzLnByb3BzLnNjb3JlLmltcHJlc3Npb24pIHx8IDAgOiBudWxsLFxuICAgICAgICAgICAgbWlzdGFrZXM6ICF0aGlzLmlzRW1wdHkodGhpcy5wcm9wcy5zY29yZS5taXN0YWtlcykgPyBwYXJzZUludCh0aGlzLnByb3BzLnNjb3JlLm1pc3Rha2VzKSB8fCAwIDogbnVsbCxcbiAgICAgICAgfVxuICAgIH1cbn1cblxuY2xhc3MgRm9ybWF0aW9uQWNyb1Njb3JlSW5wdXQgZXh0ZW5kcyBCYXNlU2NvcmVJbnB1dCB7XG4gICAgcmVuZGVyVGFibGUoKSB7XG4gICAgICAgIHJldHVybiA8dGFibGU+PHRib2R5PlxuICAgICAgICAgICAgPHRyPjx0aD5BOjwvdGg+PHRkPlxuICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXsgdGhpcy5wcm9wcy5zY29yZS5hY3JvYmF0aWNzIH1cbiAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcywgXCJhY3JvYmF0aWNzXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgb25LZXlVcD17IHRoaXMub25LZXlVcC5iaW5kKHRoaXMpIH0gLz5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8dGg+RFQ6PC90aD48dGQ+XG4gICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9eyB0aGlzLnByb3BzLnNjb3JlLmRhbmNlX3RlY2ggfVxuICAgICAgICAgICAgICAgICAgICByZWFkT25seT17IHRoaXMucHJvcHMucmVhZE9ubHkgfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzLCBcImRhbmNlX3RlY2hcIikgfVxuICAgICAgICAgICAgICAgICAgICBvbktleVVwPXsgdGhpcy5vbktleVVwLmJpbmQodGhpcykgfSAvPlxuICAgICAgICAgICAgPC90ZD48L3RyPlxuICAgICAgICAgICAgPHRyPjx0aD5ERjo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc2NvcmUuZGFuY2VfZmlncyB9XG4gICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMsIFwiZGFuY2VfZmlnc1wiKSB9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5VXA9eyB0aGlzLm9uS2V5VXAuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRoPkk6PC90aD48dGQ+XG4gICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9eyB0aGlzLnByb3BzLnNjb3JlLmltcHJlc3Npb24gfVxuICAgICAgICAgICAgICAgICAgICByZWFkT25seT17IHRoaXMucHJvcHMucmVhZE9ubHkgfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzLCBcImltcHJlc3Npb25cIikgfVxuICAgICAgICAgICAgICAgICAgICBvbktleVVwPXsgdGhpcy5vbktleVVwLmJpbmQodGhpcykgfSAvPlxuICAgICAgICAgICAgPC90ZD48L3RyPlxuICAgICAgICAgICAgPHRyPjx0aD5TTTo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc2NvcmUuc21hbGxfbWlzdGFrZXMgfVxuICAgICAgICAgICAgICAgICAgICByZWFkT25seT17IHRoaXMucHJvcHMucmVhZE9ubHkgfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzLCBcInNtYWxsX21pc3Rha2VzXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgb25LZXlVcD17IHRoaXMub25LZXlVcC5iaW5kKHRoaXMpIH0gLz5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8dGg+Qk06PC90aD48dGQ+XG4gICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9eyB0aGlzLnByb3BzLnNjb3JlLnNtYWxsX21pc3Rha2VzIH1cbiAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcywgXCJzbWFsbF9taXN0YWtlc1wiKSB9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5VXA9eyB0aGlzLm9uS2V5VXAuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICA8L3RkPjwvdHI+XG4gICAgICAgIDwvdGJvZHk+PC90YWJsZT5cbiAgICB9XG4gICAgc2VyaWFsaXplKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYWNyb2JhdGljczogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmFjcm9iYXRpY3MpID8gcGFyc2VGbG9hdCh0aGlzLnByb3BzLnNjb3JlLmFjcm9iYXRpY3MpIHx8IDAgOiBudWxsLFxuICAgICAgICAgICAgZGFuY2VfdGVjaDogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmRhbmNlX3RlY2gpID8gcGFyc2VGbG9hdCh0aGlzLnByb3BzLnNjb3JlLmRhbmNlX3RlY2gpIHx8IDAgOiBudWxsLFxuICAgICAgICAgICAgZGFuY2VfZmlnczogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmRhbmNlX2ZpZ3MpID8gcGFyc2VGbG9hdCh0aGlzLnByb3BzLnNjb3JlLmRhbmNlX2ZpZ3MpIHx8IDAgOiBudWxsLFxuICAgICAgICAgICAgaW1wcmVzc2lvbjogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmltcHJlc3Npb24pID8gcGFyc2VGbG9hdCh0aGlzLnByb3BzLnNjb3JlLmltcHJlc3Npb24pIHx8IDAgOiBudWxsLFxuICAgICAgICAgICAgc21hbGxfbWlzdGFrZXM6ICF0aGlzLmlzRW1wdHkodGhpcy5wcm9wcy5zY29yZS5zbWFsbF9taXN0YWtlcykgPyBwYXJzZUludCh0aGlzLnByb3BzLnNjb3JlLnNtYWxsX21pc3Rha2VzKSB8fCAwIDogbnVsbCxcbiAgICAgICAgICAgIGJpZ19taXN0YWtlczogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLmJpZ19taXN0YWtlcykgPyBwYXJzZUludCh0aGlzLnByb3BzLnNjb3JlLmJpZ19taXN0YWtlcykgfHwgMCA6IG51bGwsXG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNsYXNzIFNpbXBsaWZpZWRTY29yZUlucHV0IGV4dGVuZHMgQmFzZVNjb3JlSW5wdXQge1xuICAgIHJlbmRlclRhYmxlKCkge1xuICAgICAgICByZXR1cm4gPHRhYmxlPjx0Ym9keT5cbiAgICAgICAgICAgIDx0cj48dGg+Uzo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc2NvcmUucG9pbnRzIH1cbiAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcywgXCJwb2ludHNcIikgfVxuICAgICAgICAgICAgICAgICAgICBvbktleVVwPXsgdGhpcy5vbktleVVwLmJpbmQodGhpcykgfSAvPlxuICAgICAgICAgICAgPC90ZD48L3RyPlxuICAgICAgICA8L3Rib2R5PjwvdGFibGU+XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBvaW50czogIXRoaXMuaXNFbXB0eSh0aGlzLnByb3BzLnNjb3JlLnBvaW50cykgPyBwYXJzZUludCh0aGlzLnByb3BzLnNjb3JlLnBvaW50cykgfHwgMCA6IG51bGwsXG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNsYXNzIEhlYWRTY29yZUlucHV0IGV4dGVuZHMgQmFzZVNjb3JlSW5wdXQge1xuICAgIHJlbmRlclRhYmxlKCkge1xuICAgICAgICByZXR1cm4gPHRhYmxlPjx0Ym9keT5cbiAgICAgICAgICAgIDx0cj48dGg+UDo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc2NvcmUucGVuYWx0eSB9XG4gICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMsIFwicGVuYWx0eVwiKSB9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5VXA9eyB0aGlzLm9uS2V5VXAuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICA8L3RkPjx0aD5OVDo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17IHRoaXMucHJvcHMuc2NvcmUubmV4dHRvdXIgfVxuICAgICAgICAgICAgICAgICAgICByZWFkT25seT17IHRoaXMucHJvcHMucmVhZE9ubHkgfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzLCBcIm5leHR0b3VyXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgb25LZXlVcD17IHRoaXMub25LZXlVcC5iaW5kKHRoaXMpIH0gLz5cbiAgICAgICAgICAgIDwvdGQ+PC90cj5cbiAgICAgICAgPC90Ym9keT48L3RhYmxlPlxuICAgIH1cbiAgICBzZXJpYWxpemUoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwZW5hbHR5OiBwYXJzZUludCh0aGlzLnByb3BzLnNjb3JlLnBlbmFsdHkpIHx8IDAsXG4gICAgICAgICAgICBuZXh0dG91cjogdGhpcy5wcm9wcy5zY29yZS5uZXh0dG91cixcbiAgICAgICAgfVxuICAgIH1cbn1cblxuY2xhc3MgVGVjaFNjb3JlSW5wdXQgZXh0ZW5kcyBCYXNlU2NvcmVJbnB1dCB7XG4gICAgcmVuZGVyVGFibGUoKSB7XG4gICAgICAgIHJldHVybiA8dGFibGU+PHRib2R5PlxuICAgICAgICAgICAgPHRyPjx0aD5KUzo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc2NvcmUuanVtcF9zdGVwcyB9XG4gICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMsIFwianVtcF9zdGVwc1wiKSB9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5VXA9eyB0aGlzLm9uS2V5VXAuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICA8L3RkPjx0aD5UVjo8L3RoPjx0ZD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgcmVmPVwiY2JcIlxuICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXsgISF0aGlzLnByb3BzLnNjb3JlLnRpbWluZ192aW9sYXRpb24gfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IGV2ZW50ID0+IHt9IH1cbiAgICAgICAgICAgICAgICAgICAgb25LZXlVcD17IHRoaXMub25LZXlVcC5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17IGV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnByb3BzLnJlYWRPbmx5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgY2IgPSBldmVudC50YXJnZXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2IucmVhZE9ubHkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYi5jaGVja2VkID0gY2IucmVhZE9ubHkgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIWNiLmNoZWNrZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYi5yZWFkT25seSA9IGNiLmluZGV0ZXJtaW5hdGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkNoYW5nZShcInRpbWluZ192aW9sYXRpb25cIiwgZXZlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9fSAvPlxuICAgICAgICAgICAgPC90ZD48L3RyPlxuICAgICAgICA8L3Rib2R5PjwvdGFibGU+XG4gICAgfVxuICAgIG9uTW91bnQoKSB7XG4gICAgICAgIGxldCBub2RlID0gdGhpcy5yZWZzLmNiO1xuICAgICAgICBub2RlLnJlYWRPbmx5ID0gdGhpcy5wcm9wcy5zY29yZS50aW1pbmdfdmlvbGF0aW9uID09PSBudWxsO1xuICAgICAgICBub2RlLmluZGV0ZXJtaW5hdGUgPSB0aGlzLnByb3BzLnNjb3JlLnRpbWluZ192aW9sYXRpb24gPT09IG51bGw7XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGp1bXBfc3RlcHM6IHBhcnNlSW50KHRoaXMucHJvcHMuc2NvcmUuanVtcF9zdGVwcykgfHwgMCxcbiAgICAgICAgICAgIHRpbWluZ192aW9sYXRpb246IHRoaXMucHJvcHMuc2NvcmUudGltaW5nX3Zpb2xhdGlvbixcbiAgICAgICAgfVxuICAgIH1cbn1cblxuY2xhc3MgQ29uZmlybWF0aW9uQnV0dG9uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLmp1ZGdlX3JvbGUgPT09IFwiaGVhZF9qdWRnZVwiKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPGJ1dHRvblxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17IFwiYnRuIGJ0bi1zbSBidG4tY29uZmlybWF0aW9uXCIgKyAodGhpcy5wcm9wcy5jb25maXJtZWQgPyBcIiBidG4tZGFuZ2VyXCIgOiBcIiBidG4tc3VjY2Vzc1wiKSB9XG4gICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17IHRoaXMucHJvcHMudG9nZ2xlQ29uZmlybWF0aW9uIH1cbiAgICAgICAgICAgICAgICBvbktleVVwPXsgdGhpcy5wcm9wcy5vbktleVVwIH0gPlxuICAgICAgICAgICAgeyB0aGlzLnByb3BzLmNvbmZpcm1lZCA/IF8oXCJhZG1pbi5idXR0b25zLnVuY29uZmlybV9zY29yZVwiKSA6IF8oXCJhZG1pbi5idXR0b25zLmNvbmZpcm1fc2NvcmVcIikgfVxuICAgICAgICA8L2J1dHRvbj5cbiAgICB9XG59XG5cbmNsYXNzIFRvdXJBZG1pblNjb3JlSW5wdXQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgc3dpdGNoICh0aGlzLnByb3BzLmRpc2NpcGxpbmVfanVkZ2Uucm9sZSkge1xuICAgICAgICBjYXNlIFwiYWNyb19qdWRnZVwiOlxuICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMuc2NvcmluZ19zeXN0ZW1fbmFtZSA9PT0gXCJyb3NmYXJyLmFtX2ZpbmFsX2Z3XCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gPERhbmNlU2NvcmVJbnB1dCB7Li4udGhpcy5wcm9wc30gLz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiA8QWNyb1Njb3JlSW5wdXQgey4uLnRoaXMucHJvcHN9IC8+XG4gICAgICAgIGNhc2UgXCJkYW5jZV9qdWRnZVwiOlxuICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMuc2NvcmluZ19zeXN0ZW1fbmFtZSA9PT0gXCJyb3NmYXJyLmZvcm1hdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDxGb3JtYXRpb25TY29yZUlucHV0IHsuLi50aGlzLnByb3BzfSAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMuc2NvcmluZ19zeXN0ZW1fbmFtZSA9PT0gXCJyb3NmYXJyLmZvcm1hdGlvbl9hY3JvXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gPEZvcm1hdGlvbkFjcm9TY29yZUlucHV0IHsuLi50aGlzLnByb3BzfSAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMuc2NvcmluZ19zeXN0ZW1fbmFtZSA9PT0gXCJyb3NmYXJyLnNpbXBsaWZpZWRcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiA8U2ltcGxpZmllZFNjb3JlSW5wdXQgey4uLnRoaXMucHJvcHN9IC8+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gPERhbmNlU2NvcmVJbnB1dCB7Li4udGhpcy5wcm9wc30gLz5cbiAgICAgICAgY2FzZSBcImhlYWRfanVkZ2VcIjpcbiAgICAgICAgICAgIHJldHVybiA8SGVhZFNjb3JlSW5wdXQgey4uLnRoaXMucHJvcHN9IC8+XG4gICAgICAgIGNhc2UgXCJ0ZWNoX2p1ZGdlXCI6XG4gICAgICAgICAgICByZXR1cm4gPFRlY2hTY29yZUlucHV0IHsuLi50aGlzLnByb3BzfSAvPlxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJVbmtub3duIGp1ZGdlIHJvbGVcIiwgdGhpcy5wcm9wcy5kaXNjaXBsaW5lX2p1ZGdlLnJvbGUpO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBUb3VyQWRtaW5TY29yZUNlbGwgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLmVkaXRpbmcpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByb3BzLmRpc2NpcGxpbmVfanVkZ2Uucm9sZSA9PT0gXCJoZWFkX2p1ZGdlXCIgJiYgdGhpcy5wcm9wcy52YWx1ZS5yYXdfZGF0YS5uZXh0dG91cikge1xuICAgICAgICAgICAgICAgIHJldHVybiA8ZGl2IG9uQ2xpY2s9eyB0aGlzLnByb3BzLnN0YXJ0RWRpdGluZyB9Plt7IHRoaXMucHJvcHMudmFsdWUudG90YWxfc2NvcmUudG9GaXhlZCgyKSB9XTwvZGl2PlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMuZGlzY2lwbGluZV9qdWRnZS5yb2xlID09PSBcInRlY2hfanVkZ2VcIikge1xuICAgICAgICAgICAgICAgIGxldCB0dl9zdHIgPSB0aGlzLnByb3BzLnZhbHVlLnJhd19kYXRhLnRpbWluZ192aW9sYXRpb24gPT09IG51bGwgPyBcIiA/XCIgOiAoXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMudmFsdWUucmF3X2RhdGEudGltaW5nX3Zpb2xhdGlvbiA/IFwiIOKcl1wiIDogXCIg4pyTXCJcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgcmV0dXJuIDxkaXYgb25DbGljaz17IHRoaXMucHJvcHMuc3RhcnRFZGl0aW5nIH0+eyB0aGlzLnByb3BzLnZhbHVlLnJhd19kYXRhLmp1bXBfc3RlcHMgKyB0dl9zdHIgfTwvZGl2PlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIDxkaXYgb25DbGljaz17IHRoaXMucHJvcHMuc3RhcnRFZGl0aW5nIH0+eyB0aGlzLnByb3BzLnZhbHVlLnRvdGFsX3Njb3JlLnRvRml4ZWQoMikgfTwvZGl2PlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIDxUb3VyQWRtaW5TY29yZUlucHV0XG4gICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICBzY29yZT17IHRoaXMucHJvcHMudmFsdWUucmF3X2RhdGEgfVxuICAgICAgICAgICAgICAgIGNvbmZpcm1lZD17IHRoaXMucHJvcHMuY29uZmlybWVkIH1cbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2p1ZGdlPXsgdGhpcy5wcm9wcy5kaXNjaXBsaW5lX2p1ZGdlIH1cbiAgICAgICAgICAgICAgICBzY29yaW5nX3N5c3RlbV9uYW1lPXsgdGhpcy5wcm9wcy5zY29yaW5nX3N5c3RlbV9uYW1lIH1cbiAgICAgICAgICAgICAgICBzdG9wRWRpdGluZz17IHRoaXMucHJvcHMuc3RvcEVkaXRpbmcgfVxuICAgICAgICAgICAgICAgIHVwZGF0ZVZhbHVlPXsgdGhpcy5wcm9wcy51cGRhdGVWYWx1ZSB9XG4gICAgICAgICAgICAgICAgc3VibWl0VmFsdWU9eyB0aGlzLnByb3BzLnN1Ym1pdFZhbHVlIH1cbiAgICAgICAgICAgICAgICB0b2dnbGVDb25maXJtYXRpb249eyB0aGlzLnByb3BzLnRvZ2dsZUNvbmZpcm1hdGlvbiB9IC8+XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJpbXBvcnQgeyBfIH0gZnJvbSBcImkxMG4vbG9hZGVyXCI7XG5pbXBvcnQgeyBUb3VyU2NvcmVzV3JhcHBlciwgZ2V0UGFydGljaXBhbnREaXNwbGF5LCBnZXRTY29yaW5nVHlwZSB9IGZyb20gXCJjb21tb24vcm9zZmFyci9iYXNlXCI7XG5cblxuZnVuY3Rpb24gX18oKSB7XG4gICAgbGV0IGFyZ3MgPSBbXTtcbiAgICBmb3IgKGxldCBpZHggPSAxOyBpZHggPCBhcmd1bWVudHMubGVuZ3RoOyArK2lkeCkge1xuICAgICAgICBhcmdzLnB1c2goYXJndW1lbnRzW2lkeF0pO1xuICAgIH1cbiAgICByZXR1cm4gXyhcInNjb3Jpbmdfc3lzdGVtcy5yb3NmYXJyLlwiICsgYXJndW1lbnRzWzBdLCAuLi5hcmdzKTtcbn1cblxuY2xhc3MgVG91clJlc3VsdHNWZXJib3NlVGFibGVDb2x1bW5XaWR0aHMge1xuICAgIGNvbnN0cnVjdG9yKG5fanVkZ2VzKSB7XG4gICAgICAgIHRoaXMuanVkZ2Vfd2lkdGggPSBNYXRoLnJvdW5kKDcwIC8gbl9qdWRnZXMpO1xuICAgICAgICB0aGlzLnBsYWNlX3dpZHRoID0gN1xuICAgICAgICB0aGlzLmluZm9fd2lkdGggPSAxMDAgLSB0aGlzLmp1ZGdlX3dpZHRoICogbl9qdWRnZXMgLSB0aGlzLnBsYWNlX3dpZHRoO1xuICAgIH1cbiAgICBnZW5QbGFjZVN0eWxlKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2lkdGg6IGAke3RoaXMucGxhY2Vfd2lkdGh9JWAsXG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2VuSW5mb1N0eWxlKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2lkdGg6IGAke3RoaXMuaW5mb193aWR0aH0lYCxcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZW5KdWRnZVN0eWxlKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2lkdGg6IGAke3RoaXMuanVkZ2Vfd2lkdGh9JWAsXG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNsYXNzIFRvdXJSZXN1bHRzVmVyYm9zZVRhYmxlUm93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBmb3JtYXRTY29yZShzY29yZSwgdGVtcGxhdGUpIHtcbiAgICAgICAgaWYgKCF0ZW1wbGF0ZSkge1xuICAgICAgICAgICAgdGVtcGxhdGUgPSBcIiRcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2NvcmUgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiA8c3Bhbj4mbWRhc2g7PC9zcGFuPlxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0ZW1wbGF0ZS5yZXBsYWNlKFwiJFwiLCBzY29yZSkucmVwbGFjZShcIkBcIiwgc2NvcmUudG9GaXhlZCgxKSk7XG4gICAgfVxuICAgIHJlbmRlckZvcm1hdGlvblNjb3JlKHNjb3JlLCBhZGRpdGlvbGFsX2RhdGEpIHtcbiAgICAgICAgcmV0dXJuIDx0YWJsZSBjbGFzc05hbWU9XCJzY29yZS1icmVha2Rvd25cIj48dGJvZHk+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi5kdFwiKSB9OjwvcD48L3RoPjx0ZD48cD57IHRoaXMuZm9ybWF0U2NvcmUoc2NvcmUuZGF0YS5yYXdfZGF0YS5kYW5jZV90ZWNoLCBcIkBcIikgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi5kZlwiKSB9OjwvcD48L3RoPjx0ZD48cD57IHRoaXMuZm9ybWF0U2NvcmUoc2NvcmUuZGF0YS5yYXdfZGF0YS5kYW5jZV9maWdzLCBcIkBcIikgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi5pXCIpICB9OjwvcD48L3RoPjx0ZD48cD57IHRoaXMuZm9ybWF0U2NvcmUoc2NvcmUuZGF0YS5yYXdfZGF0YS5pbXByZXNzaW9uLCBcIkBcIikgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi5tXCIpIH06PC9wPjwvdGg+PHRkPjxwPnsgdGhpcy5mb3JtYXRTY29yZShzY29yZS5kYXRhLnJhd19kYXRhLm1pc3Rha2VzKSB9PC9wPjwvdGQ+PC90cj5cbiAgICAgICAgICAgIDx0cj48dGg+PHA+eyBfXyhcInJlc3VsdHMuYnJlYWtkb3duLnRcIikgIH06PC9wPjwvdGg+PHRkIGNsYXNzTmFtZT1cInRvdGFsLXNjb3JlXCI+PHA+eyBzY29yZS5kYXRhLnRvdGFsX3Njb3JlIH08L3A+PC90ZD48L3RyPlxuICAgICAgICAgICAgPHRyPjx0aD48cD57IF9fKFwicmVzdWx0cy5icmVha2Rvd24ucFwiKSAgfTo8L3A+PC90aD48dGQgY2xhc3NOYW1lPVwidG90YWwtc2NvcmVcIj48cD57IGFkZGl0aW9sYWxfZGF0YS5wbGFjZXNbc2NvcmUuaWRdIH08L3A+PC90ZD48L3RyPlxuICAgICAgICA8L3Rib2R5PjwvdGFibGU+XG4gICAgfVxuICAgIHJlbmRlckZvcm1hdGlvbkFjcm9TY29yZShzY29yZSwgYWRkaXRpb2xhbF9kYXRhKSB7XG4gICAgICAgIHJldHVybiA8dGFibGUgY2xhc3NOYW1lPVwic2NvcmUtYnJlYWtkb3duXCI+PHRib2R5PlxuICAgICAgICAgICAgPHRyPjx0aD48cD57IF9fKFwicmVzdWx0cy5icmVha2Rvd24uYVwiKSB9OjwvcD48L3RoPjx0ZD48cD57IHRoaXMuZm9ybWF0U2NvcmUoc2NvcmUuZGF0YS5yYXdfZGF0YS5hY3JvYmF0aWNzLCBcIkBcIikgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi5kdFwiKSB9OjwvcD48L3RoPjx0ZD48cD57IHRoaXMuZm9ybWF0U2NvcmUoc2NvcmUuZGF0YS5yYXdfZGF0YS5kYW5jZV90ZWNoLCBcIkBcIikgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi5kZlwiKSB9OjwvcD48L3RoPjx0ZD48cD57IHRoaXMuZm9ybWF0U2NvcmUoc2NvcmUuZGF0YS5yYXdfZGF0YS5kYW5jZV9maWdzLCBcIkBcIikgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi5pXCIpICB9OjwvcD48L3RoPjx0ZD48cD57IHRoaXMuZm9ybWF0U2NvcmUoc2NvcmUuZGF0YS5yYXdfZGF0YS5pbXByZXNzaW9uLCBcIkBcIikgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi5zbVwiKSB9OjwvcD48L3RoPjx0ZD48cD57IHRoaXMuZm9ybWF0U2NvcmUoc2NvcmUuZGF0YS5yYXdfZGF0YS5zbWFsbF9taXN0YWtlcykgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi5ibVwiKSB9OjwvcD48L3RoPjx0ZD48cD57IHRoaXMuZm9ybWF0U2NvcmUoc2NvcmUuZGF0YS5yYXdfZGF0YS5iaWdfbWlzdGFrZXMpIH08L3A+PC90ZD48L3RyPlxuICAgICAgICAgICAgPHRyPjx0aD48cD57IF9fKFwicmVzdWx0cy5icmVha2Rvd24udFwiKSAgfTo8L3A+PC90aD48dGQgY2xhc3NOYW1lPVwidG90YWwtc2NvcmVcIj48cD57IHNjb3JlLmRhdGEudG90YWxfc2NvcmUgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi5wXCIpICB9OjwvcD48L3RoPjx0ZCBjbGFzc05hbWU9XCJ0b3RhbC1zY29yZVwiPjxwPnsgYWRkaXRpb2xhbF9kYXRhLnBsYWNlc1tzY29yZS5pZF0gfTwvcD48L3RkPjwvdHI+XG4gICAgICAgIDwvdGJvZHk+PC90YWJsZT5cbiAgICB9XG4gICAgcmVuZGVyRGFuY2VTY29yZShzY29yZSkge1xuICAgICAgICByZXR1cm4gPHRhYmxlIGNsYXNzTmFtZT1cInNjb3JlLWJyZWFrZG93blwiPjx0Ym9keT5cbiAgICAgICAgICAgIDx0cj48dGg+PHA+eyBfXyhcInJlc3VsdHMuYnJlYWtkb3duLmZ3XCIpIH06PC9wPjwvdGg+PHRkPjxwPnsgdGhpcy5mb3JtYXRTY29yZShzY29yZS5kYXRhLnJhd19kYXRhLmZ3X3dvbWFuLCBcIi0kJVwiKSB9PC9wPjwvdGQ+PC90cj5cbiAgICAgICAgICAgIDx0cj48dGg+PHA+eyBfXyhcInJlc3VsdHMuYnJlYWtkb3duLmZtXCIpIH06PC9wPjwvdGg+PHRkPjxwPnsgdGhpcy5mb3JtYXRTY29yZShzY29yZS5kYXRhLnJhd19kYXRhLmZ3X21hbiwgXCItJCVcIikgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi5kZlwiKSB9OjwvcD48L3RoPjx0ZD48cD57IHRoaXMuZm9ybWF0U2NvcmUoc2NvcmUuZGF0YS5yYXdfZGF0YS5kYW5jZV9maWdzKSB9PC9wPjwvdGQ+PC90cj5cbiAgICAgICAgICAgIDx0cj48dGg+PHA+eyBfXyhcInJlc3VsdHMuYnJlYWtkb3duLmNcIikgIH06PC9wPjwvdGg+PHRkPjxwPnsgdGhpcy5mb3JtYXRTY29yZShzY29yZS5kYXRhLnJhd19kYXRhLmNvbXBvc2l0aW9uKSB9PC9wPjwvdGQ+PC90cj5cbiAgICAgICAgICAgIDx0cj48dGg+PHA+eyBfXyhcInJlc3VsdHMuYnJlYWtkb3duLnNtXCIpIH06PC9wPjwvdGg+PHRkPjxwPnsgdGhpcy5mb3JtYXRTY29yZShzY29yZS5kYXRhLnJhd19kYXRhLnNtYWxsX21pc3Rha2VzKSB9PC9wPjwvdGQ+PC90cj5cbiAgICAgICAgICAgIDx0cj48dGg+PHA+eyBfXyhcInJlc3VsdHMuYnJlYWtkb3duLmJtXCIpIH06PC9wPjwvdGg+PHRkPjxwPnsgdGhpcy5mb3JtYXRTY29yZShzY29yZS5kYXRhLnJhd19kYXRhLmJpZ19taXN0YWtlcykgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi50XCIpICB9OjwvcD48L3RoPjx0ZCBjbGFzc05hbWU9XCJ0b3RhbC1zY29yZVwiPjxwPnsgc2NvcmUuZGF0YS50b3RhbF9zY29yZSB9PC9wPjwvdGQ+PC90cj5cbiAgICAgICAgPC90Ym9keT48L3RhYmxlPlxuICAgIH1cbiAgICByZW5kZXJBY3JvU2NvcmUoc2NvcmUpIHtcbiAgICAgICAgbGV0IGFjcm9fc2NvcmVzID0gc2NvcmUuZGF0YS5yYXdfZGF0YS5yZWR1Y3Rpb25zLm1hcChmdW5jdGlvbihzY29yZSwgaWR4KSB7XG4gICAgICAgICAgICByZXR1cm4gPHRyIGtleT17IGlkeCB9PlxuICAgICAgICAgICAgICAgIDx0aD48cD57IF9fKFwicmVzdWx0cy5icmVha2Rvd24uYWNyb19uXCIsIGlkeCArIDEpIH06PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgPHRkPjxwPnsgdGhpcy5mb3JtYXRTY29yZShzY29yZSwgXCItJCVcIikgfTwvcD48L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgcmV0dXJuIDx0YWJsZSBjbGFzc05hbWU9XCJzY29yZS1icmVha2Rvd25cIj48dGJvZHk+XG4gICAgICAgICAgICB7IGFjcm9fc2NvcmVzIH1cbiAgICAgICAgICAgIDx0cj48dGg+PHA+eyBfXyhcInJlc3VsdHMuYnJlYWtkb3duLmZkXCIpICB9OjwvcD48L3RoPjx0ZD48cD57IHRoaXMuZm9ybWF0U2NvcmUoc2NvcmUuZGF0YS5yYXdfZGF0YS5taXN0YWtlcykgfTwvcD48L3RkPjwvdHI+XG4gICAgICAgICAgICA8dHI+PHRoPjxwPnsgX18oXCJyZXN1bHRzLmJyZWFrZG93bi50XCIpICB9OjwvcD48L3RoPjx0ZCBjbGFzc05hbWU9XCJ0b3RhbC1zY29yZVwiPjxwPnsgc2NvcmUuZGF0YS50b3RhbF9zY29yZSB9PC9wPjwvdGQ+PC90cj5cbiAgICAgICAgPC90Ym9keT48L3RhYmxlPlxuICAgIH1cbiAgICByZW5kZXJTY29yZShqdWRnZSwgc2NvcmUsIGFkZGl0aW9sYWxfZGF0YSkge1xuICAgICAgICBzd2l0Y2ggKGdldFNjb3JpbmdUeXBlKGp1ZGdlLCB0aGlzLnByb3BzLnRvdXIuc2NvcmluZ19zeXN0ZW1fbmFtZSkpIHtcbiAgICAgICAgY2FzZSBcImRhbmNlXCI6XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJEYW5jZVNjb3JlKHNjb3JlLCBhZGRpdGlvbGFsX2RhdGEpO1xuICAgICAgICBjYXNlIFwiYWNyb1wiOlxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyQWNyb1Njb3JlKHNjb3JlLCBhZGRpdGlvbGFsX2RhdGEpO1xuICAgICAgICBjYXNlIFwiZm9ybWF0aW9uXCI6XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJGb3JtYXRpb25TY29yZShzY29yZSwgYWRkaXRpb2xhbF9kYXRhKTtcbiAgICAgICAgY2FzZSBcImZvcm1hdGlvbl9hY3JvXCI6XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJGb3JtYXRpb25BY3JvU2NvcmUoc2NvcmUsIGFkZGl0aW9sYWxfZGF0YSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gPHAgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj57IHNjb3JlLmRhdGEudG90YWxfc2NvcmUudG9GaXhlZCgyKSB9PC9wPjtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXJQYXJ0aWNpcGFudEluZm8oKSB7XG4gICAgICAgIHJldHVybiA8ZGl2PlxuICAgICAgICAgICAgPHA+PHN0cm9uZz57IF8oXCJnbG9iYWwucGhyYXNlcy5wYXJ0aWNpcGFudF9uXCIsXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5ydW4ucGFydGljaXBhbnQubnVtYmVyLFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5ydW4ucGFydGljaXBhbnQuc3BvcnRzbWVuLmxlbmd0aFxuICAgICAgICAgICAgKX08L3N0cm9uZz48L3A+XG4gICAgICAgICAgICB7IGdldFBhcnRpY2lwYW50RGlzcGxheSh0aGlzLnByb3BzLnJ1bi5wYXJ0aWNpcGFudCkgfVxuICAgICAgICA8L2Rpdj5cbiAgICB9XG4gICAgcmVuZGVySGVhZEp1ZGdlUGVuYWx0eSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLnJ1bi5wZXJmb3JtZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiA8cD48c3Ryb25nPnsgX18oXCJyZXN1bHRzLmxhYmVscy5wZW5hbHR5XCIpIH06IDwvc3Ryb25nPlxuICAgICAgICAgICAgeyB0aGlzLnByb3BzLmhlYWRfanVkZ2Vfc2NvcmUgPyB0aGlzLnByb3BzLmhlYWRfanVkZ2Vfc2NvcmUuZGF0YS50b3RhbF9zY29yZSA6IDxzcGFuPiZtZGFzaDs8L3NwYW4+IH08L3A+XG4gICAgfVxuICAgIHJlbmRlckFjcm9UYWJsZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLnJ1bi5wZXJmb3JtZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGxldCBoYXNfYWNyb19vdmVycmlkZXMgPSBmYWxzZTtcbiAgICAgICAgbGV0IHJlbmRlcl9hY3JvX3RhYmxlID0gdGhpcy5wcm9wcy50b3VyLnNjb3Jpbmdfc3lzdGVtX25hbWUgPT09IFwicm9zZmFyci5hY3JvXCIgfHxcbiAgICAgICAgICAgIHRoaXMucHJvcHMudG91ci5zY29yaW5nX3N5c3RlbV9uYW1lID09PSBcInJvc2ZhcnIuYW1fZmluYWxfYWNyb1wiO1xuICAgICAgICBpZiAoIXJlbmRlcl9hY3JvX3RhYmxlKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnByb3BzLnJ1bi5hY3JvYmF0aWNzLmZvckVhY2goZnVuY3Rpb24oYWNybykge1xuICAgICAgICAgICAgaWYgKGFjcm8uc2NvcmUgIT09IGFjcm8ub3JpZ2luYWxfc2NvcmUpIHtcbiAgICAgICAgICAgICAgICBoYXNfYWNyb19vdmVycmlkZXMgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMucnVuLmFjcm9iYXRpY3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgYWNyb19jZWxsX3dpZHRoID0gKDEwMCAvIHRoaXMucHJvcHMucnVuLmFjcm9iYXRpY3MubGVuZ3RoKSArIFwiJVwiO1xuICAgICAgICByZXR1cm4gPGRpdj5cbiAgICAgICAgICAgIDxwPjxzdHJvbmc+eyBoYXNfYWNyb19vdmVycmlkZXMgPyBfXyhcInJlc3VsdHMubGFiZWxzLmFjcm9iYXRpY3NfdmVyYm9zZVwiKSA6IF9fKFwicmVzdWx0cy5sYWJlbHMuYWNyb2JhdGljc1wiKSB9Ojwvc3Ryb25nPjwvcD5cbiAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJhY3JvLXRhYmxlXCI+PHRib2R5PlxuICAgICAgICAgICAgICAgIDx0cj57XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMucnVuLmFjcm9iYXRpY3MubWFwKChhY3JvLCBpZHgpID0+IDx0ZCBrZXk9eyBpZHggfSBzdHlsZT17eyB3aWR0aDogYWNyb19jZWxsX3dpZHRoIH19PjxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7IGFjcm8ub3JpZ2luYWxfc2NvcmUudG9GaXhlZCgxKSB9XG4gICAgICAgICAgICAgICAgICAgIDwvcD48L3RkPilcbiAgICAgICAgICAgICAgICB9PC90cj5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGhhc19hY3JvX292ZXJyaWRlcyA/IDx0cj57XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLnJ1bi5hY3JvYmF0aWNzLm1hcCgoYWNybywgaWR4KSA9PiA8dGQga2V5PXsgaWR4IH0gc3R5bGU9e3sgd2lkdGg6IGFjcm9fY2VsbF93aWR0aCB9fT48cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYWNyby5zY29yZS50b0ZpeGVkKDEpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD48L3RkPilcbiAgICAgICAgICAgICAgICAgICAgfTwvdHI+IDogbnVsbFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvdGJvZHk+PC90YWJsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgfVxuICAgIHJlbmRlckFtQ2xhc3NGd1Njb3JlKCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy50b3VyLnNjb3Jpbmdfc3lzdGVtX25hbWUgIT09IFwicm9zZmFyci5hbV9maW5hbF9hY3JvXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiA8cD48c3Ryb25nPnsgX18oXCJyZXN1bHRzLmxhYmVscy5md19zY29yZVwiKSB9PC9zdHJvbmc+OiB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLnJ1bi52ZXJib3NlX3RvdGFsX3Njb3JlLnByZXZpb3VzX3RvdXIucHJpbWFyeV9zY29yZS50b0ZpeGVkKDIpICsgXCIgLyBcIiArXG4gICAgICAgICAgICB0aGlzLnByb3BzLnJ1bi52ZXJib3NlX3RvdGFsX3Njb3JlLnByZXZpb3VzX3RvdXIuc2Vjb25kYXJ5X3Njb3JlLnRvRml4ZWQoMilcbiAgICAgICAgfSA8L3A+XG4gICAgfVxuICAgIHJlbmRlckFtQ2xhc3NBY3JvU2NvcmUoKSB7XG4gICAgICAgIGlmICghdGhpcy5wcm9wcy5ydW4ucGVyZm9ybWVkKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wcm9wcy50b3VyLnNjb3Jpbmdfc3lzdGVtX25hbWUgIT09IFwicm9zZmFyci5hbV9maW5hbF9hY3JvXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiA8cD48c3Ryb25nPnsgX18oXCJyZXN1bHRzLmxhYmVscy5hY3JvX3Njb3JlXCIpIH08L3N0cm9uZz46IHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMucnVuLnZlcmJvc2VfdG90YWxfc2NvcmUuY3VycmVudF90b3VyLnByaW1hcnlfc2NvcmUudG9GaXhlZCgyKSArIFwiIC8gXCIgK1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5ydW4udmVyYm9zZV90b3RhbF9zY29yZS5jdXJyZW50X3RvdXIuc2Vjb25kYXJ5X3Njb3JlLnRvRml4ZWQoMilcbiAgICAgICAgfSA8L3A+XG4gICAgfVxuICAgIHJlbmRlclRvdGFsU2NvcmUoKSB7XG4gICAgICAgIGlmICghdGhpcy5wcm9wcy5ydW4ucGVyZm9ybWVkKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wcm9wcy50b3VyLnNjb3Jpbmdfc3lzdGVtX25hbWUgPT09IFwicm9zZmFyci5mb3JtYXRpb25cIikge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucHJvcHMudG91ci5zY29yaW5nX3N5c3RlbV9uYW1lID09PSBcInJvc2ZhcnIuZm9ybWF0aW9uX2Fjcm9cIikge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxwPjxzdHJvbmc+eyBfXyhcInJlc3VsdHMubGFiZWxzLnRvdGFsX3Njb3JlXCIpIH06IHsgdGhpcy5wcm9wcy5ydW4udG90YWxfc2NvcmUgfTwvc3Ryb25nPjwvcD47XG4gICAgfVxuICAgIHJlbmRlck5vdFBlcmZvcm1lZExhYmVsKCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5ydW4ucGVyZm9ybWVkKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPHA+PGVtPlxuICAgICAgICAgICAgeyBfXyhcInJlc3VsdHMubGFiZWxzLm5vdF9wZXJmb3JtZWRcIikgfVxuICAgICAgICA8L2VtPjwvcD5cbiAgICB9XG4gICAgcmVuZGVyTmV4dFRvdXJMYWJlbCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLmhhc19uZXh0X3RvdXIpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIDxwPjxzdHJvbmc+eyBfXyhcInJlc3VsdHMubGFiZWxzLm5leHRfdG91clwiKSB9OiA8L3N0cm9uZz57XG4gICAgICAgICAgICB0aGlzLnByb3BzLnJlc3VsdHNfaW5mby5hZHZhbmNlcyA/IF8oXCJnbG9iYWwubGFiZWxzLnllc1wiKSA6IF8oXCJnbG9iYWwubGFiZWxzLm5vXCIpXG4gICAgICAgIH08L3A+XG4gICAgfVxuICAgIHJlbmRlckluZm9CbG9jaygpIHtcbiAgICAgICAgcmV0dXJuIDx0ZCBjbGFzc05hbWU9XCJpbmZvLWJsb2NrXCIgc3R5bGU9eyB0aGlzLnByb3BzLndpZHRocy5nZW5JbmZvU3R5bGUoKSB9PlxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlclBhcnRpY2lwYW50SW5mbygpIH1cbiAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJIZWFkSnVkZ2VQZW5hbHR5KCkgfVxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlckFjcm9UYWJsZSgpIH1cbiAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJBbUNsYXNzRndTY29yZSgpIH1cbiAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJBbUNsYXNzQWNyb1Njb3JlKCkgfVxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlclRvdGFsU2NvcmUoKSB9XG4gICAgICAgICAgICB7IHRoaXMucmVuZGVyTm90UGVyZm9ybWVkTGFiZWwoKSB9XG4gICAgICAgICAgICB7IHRoaXMucmVuZGVyTmV4dFRvdXJMYWJlbCgpIH1cbiAgICAgICAgPC90ZD5cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQganVkZ2VzX3Njb3JlcyA9IHRoaXMucHJvcHMuc2NvcmVzLm1hcCgoc2NvcmUsIGlkeCkgPT5cbiAgICAgICAgICAgIDx0ZCBrZXk9eyBpZHggfSBzdHlsZT17IHRoaXMucHJvcHMud2lkdGhzLmdlbkp1ZGdlU3R5bGUoKSB9PlxuICAgICAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJTY29yZSh0aGlzLnByb3BzLmRpc2NpcGxpbmVfanVkZ2VzW2lkeF0sIHNjb3JlLCB0aGlzLnByb3BzLnJlc3VsdHNfaW5mby5hZGRpdGlvbmFsX2RhdGEpIH1cbiAgICAgICAgICAgIDwvdGQ+KTtcbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLnJ1bi5wZXJmb3JtZWQpIHtcbiAgICAgICAgICAgIGp1ZGdlc19zY29yZXMgPSB0aGlzLnByb3BzLnNjb3Jlcy5tYXAoKHNjb3JlLCBpZHgpID0+XG4gICAgICAgICAgICAgICAgPHRkIHN0eWxlPXsgdGhpcy5wcm9wcy53aWR0aHMuZ2VuSnVkZ2VTdHlsZSgpIH0ga2V5PXsgaWR4IH0+XG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+Jm1kYXNoOzwvcD48L3RkPik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDx0cj5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwbGFjZVwiIHN0eWxlPXsgdGhpcy5wcm9wcy53aWR0aHMuZ2VuUGxhY2VTdHlsZSgpIH0+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj57IHRoaXMucHJvcHMucmVzdWx0c19pbmZvLnBsYWNlIH08L3A+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlckluZm9CbG9jaygpIH1cbiAgICAgICAgICAgIHsganVkZ2VzX3Njb3JlcyB9XG4gICAgICAgIDwvdHI+XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgVG91clJlc3VsdHNWZXJib3NlVGFibGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IHRvdXJfd3JhcHBlciA9IG5ldyBUb3VyU2NvcmVzV3JhcHBlcih0aGlzLnByb3BzLnRvdXIsIHRoaXMucHJvcHMucmVzdWx0cyk7XG4gICAgICAgIGxldCBkaXNjaXBsaW5lX2p1ZGdlcyA9IHRvdXJfd3JhcHBlci5nZXREaXNjaXBsaW5lSnVkZ2VzQnlSb2xlcyhcImFjcm9fanVkZ2VcIiwgXCJkYW5jZV9qdWRnZVwiKTtcbiAgICAgICAgbGV0IHNjb3Jlc190YWJsZSA9IHRvdXJfd3JhcHBlci5nZXRTY29yZXNUYWJsZUJ5Um9sZXMoXCJhY3JvX2p1ZGdlXCIsIFwiZGFuY2VfanVkZ2VcIik7XG4gICAgICAgIGxldCBoZWFkX2p1ZGdlX3Njb3JlcyA9IHRvdXJfd3JhcHBlci5nZXRTY29yZXNUYWJsZUJ5Um9sZXMoXCJoZWFkX2p1ZGdlXCIpLm1hcCgocm93KSA9PiByb3dbMF0pO1xuICAgICAgICBsZXQgcmVzdWx0c19pbmZvID0gdG91cl93cmFwcGVyLmdldFJlc3VsdHNJbmZvKCk7XG4gICAgICAgIGxldCBydW5zID0gdG91cl93cmFwcGVyLmdldFJ1bnMoKTtcbiAgICAgICAgbGV0IGhhc19uZXh0X3RvdXIgPSB0aGlzLnByb3BzLnRvdXIubmV4dF90b3VyX2lkICE9PSBudWxsO1xuICAgICAgICBsZXQgcm93cyA9IFtdO1xuICAgICAgICBsZXQgd2lkdGhzID0gbmV3IFRvdXJSZXN1bHRzVmVyYm9zZVRhYmxlQ29sdW1uV2lkdGhzKGRpc2NpcGxpbmVfanVkZ2VzLmxlbmd0aCk7XG4gICAgICAgIGZvciAobGV0IGlkeCA9IDA7IGlkeCA8IHJ1bnMubGVuZ3RoOyArK2lkeCkge1xuICAgICAgICAgICAgcm93cy5wdXNoKDxUb3VyUmVzdWx0c1ZlcmJvc2VUYWJsZVJvd1xuICAgICAgICAgICAgICAgIGtleT17IHJ1bnNbaWR4XS5pZCB9XG4gICAgICAgICAgICAgICAgdG91cj17IHRoaXMucHJvcHMudG91ciB9XG4gICAgICAgICAgICAgICAgcnVuPXsgcnVuc1tpZHhdIH1cbiAgICAgICAgICAgICAgICBzY29yZXM9eyBzY29yZXNfdGFibGVbaWR4XSB9XG4gICAgICAgICAgICAgICAgd2lkdGhzPXsgd2lkdGhzIH1cbiAgICAgICAgICAgICAgICBoZWFkX2p1ZGdlX3Njb3JlPXsgaGVhZF9qdWRnZV9zY29yZXNbaWR4XSB9XG4gICAgICAgICAgICAgICAgcmVzdWx0c19pbmZvPXsgcmVzdWx0c19pbmZvW2lkeF0gfVxuICAgICAgICAgICAgICAgIGRpc2NpcGxpbmVfanVkZ2VzPXsgZGlzY2lwbGluZV9qdWRnZXMgfVxuICAgICAgICAgICAgICAgIGhhc19uZXh0X3RvdXI9eyBoYXNfbmV4dF90b3VyIH0gLz5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH07XG4gICAgICAgIGxldCBqdWRnZXNfaGVhZGVyID0gZGlzY2lwbGluZV9qdWRnZXMubWFwKGZ1bmN0aW9uKGRqKSB7XG4gICAgICAgICAgICByZXR1cm4gPHRoIGtleT17IGRqLmlkIH0gd2lkdGg9eyB3aWR0aHMuZ2VuSnVkZ2VTdHlsZSgpIH0+PHA+eyBkai5qdWRnZS5udW1iZXIgfTwvcD48L3RoPlxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIDx0YWJsZSBjbGFzc05hbWU9XCJib3JkZXJlZC10YWJsZVwiIHN0eWxlPXt7IHdpZHRoOiBcIjEwMCVcIiB9fT5cbiAgICAgICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwbGFjZVwiIHdpZHRoPXsgd2lkdGhzLmdlblBsYWNlU3R5bGUoKSB9PjxwPnsgX18oXCJyZXN1bHRzLmxhYmVscy5wbGFjZVwiKSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwYXJ0aWNpcGFudFwiIHdpZHRoPXsgd2lkdGhzLmdlbkluZm9TdHlsZSgpIH0+PHA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7IF9fKFwicmVzdWx0cy5sYWJlbHMuaW5mb1wiKSB9XG4gICAgICAgICAgICAgICAgICAgIDwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICB7IGp1ZGdlc19oZWFkZXIgfVxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8L3RoZWFkPlxuICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgIHsgcm93cyB9XG4gICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICA8L3RhYmxlPlxuICAgIH1cbn1cblxuY2xhc3MgVG91clJlc3VsdHNTZW1pVmVyYm9zZVRhYmxlQ29sdW1uV2lkdGhzIHtcbiAgICBjb25zdHJ1Y3RvcihuX2p1ZGdlcykge1xuICAgICAgICB0aGlzLmp1ZGdlX3dpZHRoID0gTWF0aC5yb3VuZCg1NSAvIG5fanVkZ2VzKTtcbiAgICAgICAgdGhpcy50b3RhbF9zY29yZV93aWR0aCA9IDE0O1xuICAgICAgICB0aGlzLnBsYWNlX3dpZHRoID0gNjtcbiAgICAgICAgdGhpcy5udW1iZXJfd2lkdGggPSAzO1xuICAgICAgICB0aGlzLm5hbWVfd2lkdGggPSAxMDAgLSB0aGlzLmp1ZGdlX3dpZHRoICogbl9qdWRnZXMgLVxuICAgICAgICAgICAgdGhpcy50b3RhbF9zY29yZV93aWR0aCAtIHRoaXMucGxhY2Vfd2lkdGggLSB0aGlzLm51bWJlcl93aWR0aDtcbiAgICB9XG4gICAgZ2VuUGxhY2VTdHlsZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHdpZHRoOiBgJHt0aGlzLnBsYWNlX3dpZHRofSVgLFxuICAgICAgICB9XG4gICAgfVxuICAgIGdlbk51bWJlclN0eWxlKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2lkdGg6IGAke3RoaXMubnVtYmVyX3dpZHRofSVgLFxuICAgICAgICB9XG4gICAgfVxuICAgIGdlbk5hbWVTdHlsZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHdpZHRoOiBgJHt0aGlzLm5hbWVfd2lkdGh9JWAsXG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2VuVG90YWxTY29yZVN0eWxlKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2lkdGg6IGAke3RoaXMudG90YWxfc2NvcmVfd2lkdGh9JWAsXG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2VuSnVkZ2VTdHlsZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHdpZHRoOiBgJHt0aGlzLmp1ZGdlX3dpZHRofSVgLFxuICAgICAgICB9XG4gICAgfVxufVxuXG5jbGFzcyBUb3VyUmVzdWx0c1NlbWlWZXJib3NlVGFibGVSb3cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlckZvcm1hdGlvblNjb3JlKHNjb3JlLCBhZGRpdGlvbGFsX2RhdGEpIHtcbiAgICAgICAgcmV0dXJuIDxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+PHN0cm9uZz57IGFkZGl0aW9sYWxfZGF0YS5wbGFjZXNbc2NvcmUuaWRdIH08L3N0cm9uZz4gKHsgc2NvcmUuZGF0YS50b3RhbF9zY29yZS50b0ZpeGVkKDEpIH0pPC9wPlxuICAgIH1cbiAgICByZW5kZXJTY29yZShqdWRnZSwgc2NvcmUsIGFkZGl0aW9sYWxfZGF0YSkge1xuICAgICAgICBpZiAoanVkZ2Uucm9sZSA9PT0gXCJkYW5jZV9qdWRnZVwiKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcm9wcy50b3VyLnNjb3Jpbmdfc3lzdGVtX25hbWUgPT09IFwicm9zZmFyci5mb3JtYXRpb25cIiB8fCB0aGlzLnByb3BzLnRvdXIuc2NvcmluZ19zeXN0ZW1fbmFtZSA9PT0gXCJyb3NmYXJyLmZvcm1hdGlvbl9hY3JvXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJGb3JtYXRpb25TY29yZShzY29yZSwgYWRkaXRpb2xhbF9kYXRhKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiA8cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPnsgc2NvcmUuZGF0YS50b3RhbF9zY29yZS50b0ZpeGVkKDIpIH08L3A+O1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBqdWRnZXNfc2NvcmVzID0gdGhpcy5wcm9wcy5zY29yZXMubWFwKChzY29yZSwgaWR4KSA9PiA8dGQga2V5PXsgaWR4IH0+IHtcbiAgICAgICAgICAgIHRoaXMucmVuZGVyU2NvcmUodGhpcy5wcm9wcy5kaXNjaXBsaW5lX2p1ZGdlc1tpZHhdLCBzY29yZSwgdGhpcy5wcm9wcy5yZXN1bHRzX2luZm8uYWRkaXRpb25hbF9kYXRhKVxuICAgICAgICB9IDwvdGQ+KTtcbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLnJ1bi5wZXJmb3JtZWQpIHtcbiAgICAgICAgICAgIGp1ZGdlc19zY29yZXMgPSB0aGlzLnByb3BzLnNjb3Jlcy5tYXAoKHNjb3JlLCBpZHgpID0+XG4gICAgICAgICAgICAgICAgPHRkIGtleT17IGlkeCB9PjxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+Jm1kYXNoOzwvcD48L3RkPik7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHRvdGFsX3Njb3JlID0gdGhpcy5wcm9wcy5ydW4udmVyYm9zZV90b3RhbF9zY29yZTtcbiAgICAgICAgcmV0dXJuIDx0cj5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwbGFjZVwiPjxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+eyB0aGlzLnByb3BzLnJlc3VsdHNfaW5mby5wbGFjZSB9PC9wPjwvdGQ+XG4gICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwibnVtYmVyXCI+PHAgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj57IHRoaXMucHJvcHMucnVuLnBhcnRpY2lwYW50Lm51bWJlciB9PC9wPjwvdGQ+XG4gICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicGFydGljaXBhbnRcIj57IGdldFBhcnRpY2lwYW50RGlzcGxheSh0aGlzLnByb3BzLnJ1bi5wYXJ0aWNpcGFudCkgfTwvdGQ+XG4gICAgICAgICAgICB7IHRoaXMucHJvcHMudG91ci5zY29yaW5nX3N5c3RlbV9uYW1lICE9PSBcInJvc2ZhcnIuZm9ybWF0aW9uXCIgJiYgdGhpcy5wcm9wcy50b3VyLnNjb3Jpbmdfc3lzdGVtX25hbWUgIT09IFwicm9zZmFyci5mb3JtYXRpb25fYWNyb1wiXG4gICAgICAgICAgICAgICAgPyA8dGQgY2xhc3NOYW1lPVwidG90YWwtc2NvcmVcIj5cbiAgICAgICAgICAgICAgICAgICAgeyAoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLnByb3BzLnJ1bi5wZXJmb3JtZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPHAgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj4mbWRhc2g7PC9wPjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnByb3BzLnRvdXIuc2NvcmluZ19zeXN0ZW1fbmFtZSA9PT0gXCJyb3NmYXJyLmFtX2ZpbmFsX2Fjcm9cIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IF9fKFwicmVzdWx0cy5sYWJlbHMuZndfc2NvcmVfc2hvcnRcIikgfXtcIjogXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHRvdGFsX3Njb3JlLnByZXZpb3VzX3RvdXIucHJpbWFyeV9zY29yZS50b0ZpeGVkKDIpIH17XCIgLyBcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdG90YWxfc2NvcmUucHJldmlvdXNfdG91ci5zZWNvbmRhcnlfc2NvcmUudG9GaXhlZCgyKSB9PGJyIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZW0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+eyB0b3RhbF9zY29yZS5wcmltYXJ5X3Njb3JlLnRvRml4ZWQoMikgfTwvc3Ryb25nPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmbmJzcDsve1wiIFwifXsgdG90YWxfc2NvcmUuc2Vjb25kYXJ5X3Njb3JlLnRvRml4ZWQoMikgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPHAgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPnsgdG90YWxfc2NvcmUucHJpbWFyeV9zY29yZS50b0ZpeGVkKDIpIH08L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAmbmJzcDsve1wiIFwifXsgdG90YWxfc2NvcmUuc2Vjb25kYXJ5X3Njb3JlLnRvRml4ZWQoMikgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9wPjtcbiAgICAgICAgICAgICAgICAgICAgfSkoKSB9XG4gICAgICAgICAgICAgICAgPC90ZD4gOiBudWxsIH1cbiAgICAgICAgICAgIHsganVkZ2VzX3Njb3JlcyB9XG4gICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwiY2FyZFwiPjxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+e1xuICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuaGVhZF9qdWRnZV9zY29yZSAmJiB0aGlzLnByb3BzLnJ1bi5wZXJmb3JtZWRcbiAgICAgICAgICAgICAgICAgICAgPyB0aGlzLnByb3BzLmhlYWRfanVkZ2Vfc2NvcmUuZGF0YS50b3RhbF9zY29yZVxuICAgICAgICAgICAgICAgICAgICA6IDxzcGFuPiZtZGFzaDs8L3NwYW4+XG4gICAgICAgICAgICB9PC9wPjwvdGQ+XG4gICAgICAgIDwvdHI+XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgVG91clJlc3VsdHNTZW1pVmVyYm9zZVRhYmxlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXJBZHZhbmNlc0hlYWRlcihoYXNfbmV4dF90b3VyICxwcmV2X3JvdywgbmV4dF9yb3csIHByZXZfcnVuLCBuZXh0X3J1biwgaWR4LCBuX2NvbHMpIHtcbiAgICAgICAgbGV0IHByZXZfc3RhdHVzID0gcHJldl9yb3dcbiAgICAgICAgICAgID8gcHJldl9ydW4ucGVyZm9ybWVkXG4gICAgICAgICAgICAgICAgPyBwcmV2X3Jvdy5hZHZhbmNlc1xuICAgICAgICAgICAgICAgICAgICA/IFwiYWR2YW5jZWRcIlxuICAgICAgICAgICAgICAgICAgICA6IFwibm90X2FkdmFuY2VkXCJcbiAgICAgICAgICAgICAgICA6IFwibm90X3BlcmZvcm1lZFwiXG4gICAgICAgICAgICA6IG51bGw7XG4gICAgICAgIGxldCBuZXh0X3N0YXR1cyA9IG5leHRfcnVuLnBlcmZvcm1lZFxuICAgICAgICAgICAgPyBuZXh0X3Jvdy5hZHZhbmNlc1xuICAgICAgICAgICAgICAgID8gXCJhZHZhbmNlZFwiXG4gICAgICAgICAgICAgICAgOiBcIm5vdF9hZHZhbmNlZFwiXG4gICAgICAgICAgICA6IFwibm90X3BlcmZvcm1lZFwiO1xuICAgICAgICBsZXQgcmVzdWx0ID0gcHJldl9zdGF0dXMgIT09IG5leHRfc3RhdHVzXG4gICAgICAgICAgICA/IG5leHRfc3RhdHVzID09PSBcIm5vdF9wZXJmb3JtZWRcIlxuICAgICAgICAgICAgICAgID8gPHAgY2xhc3NOYW1lPVwidGV4dC1sZWZ0XCI+eyBfXyhcInJlc3VsdHMuaGVhZGVycy5wYXJ0aWNpcGFudHNfbm90X3BlcmZvcm1lZFwiKSB9PC9wPlxuICAgICAgICAgICAgICAgIDogaGFzX25leHRfdG91clxuICAgICAgICAgICAgICAgICAgICA/IG5leHRfc3RhdHVzID09PSBcIm5vdF9hZHZhbmNlZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICA/IDxwIGNsYXNzTmFtZT1cInRleHQtbGVmdFwiPnsgX18oXCJyZXN1bHRzLmhlYWRlcnMucGFydGljaXBhbnRzX25vdF9hZHZhbmNlZFwiKSB9PC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgOiA8cCBjbGFzc05hbWU9XCJ0ZXh0LWxlZnRcIj57IF9fKFwicmVzdWx0cy5oZWFkZXJzLnBhcnRpY2lwYW50c19hZHZhbmNlZFwiKSB9PC9wPlxuICAgICAgICAgICAgICAgICAgICA6IG51bGxcbiAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgaWYgKHJlc3VsdCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDx0ciBrZXk9eyBcIk5UXCIgKyBpZHggfT48dGggY2xhc3NOYW1lPVwiYWR2YW5jZXMtaGVhZGVyXCIgY29sU3Bhbj17IG5fY29scyB9PlxuICAgICAgICAgICAgeyByZXN1bHQgfVxuICAgICAgICA8L3RoPjwvdHI+XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IHRvdXJfd3JhcHBlciA9IG5ldyBUb3VyU2NvcmVzV3JhcHBlcih0aGlzLnByb3BzLnRvdXIsIHRoaXMucHJvcHMucmVzdWx0cyk7XG4gICAgICAgIGxldCBkaXNjaXBsaW5lX2p1ZGdlcyA9IHRvdXJfd3JhcHBlci5nZXREaXNjaXBsaW5lSnVkZ2VzQnlSb2xlcyhcImFjcm9fanVkZ2VcIiwgXCJkYW5jZV9qdWRnZVwiKTtcbiAgICAgICAgbGV0IHNjb3Jlc190YWJsZSA9IHRvdXJfd3JhcHBlci5nZXRTY29yZXNUYWJsZUJ5Um9sZXMoXCJhY3JvX2p1ZGdlXCIsIFwiZGFuY2VfanVkZ2VcIik7XG4gICAgICAgIGxldCBoZWFkX2p1ZGdlX3Njb3JlcyA9IHRvdXJfd3JhcHBlci5nZXRTY29yZXNUYWJsZUJ5Um9sZXMoXCJoZWFkX2p1ZGdlXCIpLm1hcCgocm93KSA9PiByb3dbMF0pO1xuICAgICAgICBsZXQgcmVzdWx0c19pbmZvID0gdG91cl93cmFwcGVyLmdldFJlc3VsdHNJbmZvKCk7XG4gICAgICAgIGxldCBydW5zID0gdG91cl93cmFwcGVyLmdldFJ1bnMoKTtcbiAgICAgICAgbGV0IGhhc19uZXh0X3RvdXIgPSB0aGlzLnByb3BzLnRvdXIubmV4dF90b3VyX2lkICE9PSBudWxsO1xuICAgICAgICBsZXQgaGFzX3RvdGFsX3Njb3JlID0gdGhpcy5wcm9wcy50b3VyLnNjb3Jpbmdfc3lzdGVtX25hbWUgIT09IFwicm9zZmFyci5mb3JtYXRpb25cIiAmJiB0aGlzLnByb3BzLnRvdXIuc2NvcmluZ19zeXN0ZW1fbmFtZSAhPT0gXCJyb3NmYXJyLmZvcm1hdGlvbl9hY3JvXCI7XG4gICAgICAgIGxldCB3aWR0aHMgPSBuZXcgVG91clJlc3VsdHNTZW1pVmVyYm9zZVRhYmxlQ29sdW1uV2lkdGhzKGRpc2NpcGxpbmVfanVkZ2VzLmxlbmd0aCArIDEpO1xuICAgICAgICBsZXQganVkZ2VzX2hlYWRlciA9IGRpc2NpcGxpbmVfanVkZ2VzLm1hcChmdW5jdGlvbihkaikge1xuICAgICAgICAgICAgbGV0IHN1ZmZpeCA9IGdldFNjb3JpbmdUeXBlKGRqLCB0aGlzLnByb3BzLnRvdXIuc2NvcmluZ19zeXN0ZW1fbmFtZSkgPT09IFwiYWNyb1wiID8gXCIgKEEpXCIgOiBcIlwiO1xuICAgICAgICAgICAgcmV0dXJuIDx0aCBrZXk9eyBkai5pZCB9IHN0eWxlPXsgd2lkdGhzLmdlbkp1ZGdlU3R5bGUoKSB9PjxwPnsgZGouanVkZ2UubnVtYmVyICsgc3VmZml4IH08L3A+PC90aD5cbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgbGV0IHJvd3MgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaWR4ID0gMDsgaWR4IDwgcnVucy5sZW5ndGg7ICsraWR4KSB7XG4gICAgICAgICAgICByb3dzLnB1c2godGhpcy5yZW5kZXJBZHZhbmNlc0hlYWRlcihcbiAgICAgICAgICAgICAgICBoYXNfbmV4dF90b3VyLFxuICAgICAgICAgICAgICAgIHJlc3VsdHNfaW5mb1tpZHggLSAxXSxcbiAgICAgICAgICAgICAgICByZXN1bHRzX2luZm9baWR4XSxcbiAgICAgICAgICAgICAgICBydW5zW2lkeCAtIDFdLFxuICAgICAgICAgICAgICAgIHJ1bnNbaWR4XSxcbiAgICAgICAgICAgICAgICBpZHgsXG4gICAgICAgICAgICAgICAgNCArIGRpc2NpcGxpbmVfanVkZ2VzLmxlbmd0aCArIGhhc190b3RhbF9zY29yZVxuICAgICAgICAgICAgKSk7XG4gICAgICAgICAgICByb3dzLnB1c2goPFRvdXJSZXN1bHRzU2VtaVZlcmJvc2VUYWJsZVJvd1xuICAgICAgICAgICAgICAgIGtleT17IHJ1bnNbaWR4XS5pZCB9XG4gICAgICAgICAgICAgICAgaGVhZF9qdWRnZV9zY29yZT17IGhlYWRfanVkZ2Vfc2NvcmVzW2lkeF0gfVxuICAgICAgICAgICAgICAgIHJlc3VsdHNfaW5mbz17IHJlc3VsdHNfaW5mb1tpZHhdIH1cbiAgICAgICAgICAgICAgICB0b3VyPXsgdGhpcy5wcm9wcy50b3VyIH1cbiAgICAgICAgICAgICAgICBydW49eyBydW5zW2lkeF0gfVxuICAgICAgICAgICAgICAgIHNjb3Jlcz17IHNjb3Jlc190YWJsZVtpZHhdIH1cbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2p1ZGdlcz17IGRpc2NpcGxpbmVfanVkZ2VzIH1cbiAgICAgICAgICAgICAgICBoYXNfbmV4dF90b3VyPXsgaGFzX25leHRfdG91ciB9XG4gICAgICAgICAgICAgICAgaGFzX3RvdGFsX3Njb3JlPXsgaGFzX3RvdGFsX3Njb3JlIH0gLz5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiA8dGFibGUgY2xhc3NOYW1lPVwiYm9yZGVyZWQtdGFibGVcIj5cbiAgICAgICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwbGFjZVwiIHN0eWxlPXsgd2lkdGhzLmdlblBsYWNlU3R5bGUoKSB9PjxwPnsgX18oXCJyZXN1bHRzLmxhYmVscy5wbGFjZVwiKSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJudW1iZXJcIiBzdHlsZT17IHdpZHRocy5nZW5OdW1iZXJTdHlsZSgpIH0+PHA+eyBfXyhcInJlc3VsdHMubGFiZWxzLm51bWJlclwiKSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwYXJ0aWNpcGFudFwiIHN0eWxlPXsgd2lkdGhzLmdlbk5hbWVTdHlsZSgpIH0+PHA+eyBfXyhcInJlc3VsdHMubGFiZWxzLnBhcnRpY2lwYW50X25hbWVcIikgfTwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICB7IGhhc190b3RhbF9zY29yZSA/IDx0aCBjbGFzc05hbWU9XCJ0b3RhbC1zY29yZVwiIHN0eWxlPXsgd2lkdGhzLmdlblRvdGFsU2NvcmVTdHlsZSgpIH0+PHA+eyBfXyhcInJlc3VsdHMubGFiZWxzLnRvdGFsX3Njb3JlXCIpIH08L3A+PC90aD4gOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgeyBqdWRnZXNfaGVhZGVyIH1cbiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImNhcmRcIiBzdHlsZT17IHdpZHRocy5nZW5KdWRnZVN0eWxlKCkgfT48cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPnsgX18oXCJyZXN1bHRzLmxhYmVscy5jYXJkXCIpIH08L3A+PC90aD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICB7IHJvd3MgfVxuICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgPC90YWJsZT5cbiAgICB9XG59XG5cbmNsYXNzIFRvdXJSZXN1bHRzVGFibGVSb3cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IGNhcmQgPSB0aGlzLnByb3BzLnJ1bi5wZXJmb3JtZWRcbiAgICAgICAgICAgID8gdGhpcy5wcm9wcy5oZWFkX2p1ZGdlX3Njb3JlXG4gICAgICAgICAgICAgICAgPyB0aGlzLnByb3BzLmhlYWRfanVkZ2Vfc2NvcmUuZGF0YS50b3RhbF9zY29yZVxuICAgICAgICAgICAgICAgIDogXCIwXCJcbiAgICAgICAgICAgIDogPHNwYW4+Jm1kYXNoOzwvc3Bhbj47XG4gICAgICAgIGxldCB0b3RhbF9zY29yZSA9IHRoaXMucHJvcHMuaGFzX3RvdGFsX3Njb3JlID9cbiAgICAgICAgICAgIHRoaXMucHJvcHMucnVuLnBlcmZvcm1lZFxuICAgICAgICAgICAgICAgID8gPHAgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz57IHRoaXMucHJvcHMucnVuLnZlcmJvc2VfdG90YWxfc2NvcmUucHJpbWFyeV9zY29yZS50b0ZpeGVkKDIpIH08L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgJm5ic3A7L3tcIiBcIn17IHRoaXMucHJvcHMucnVuLnZlcmJvc2VfdG90YWxfc2NvcmUuc2Vjb25kYXJ5X3Njb3JlLnRvRml4ZWQoMikgfVxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA6IDxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+Jm1kYXNoOzwvcD5cbiAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgcmV0dXJuIDx0cj5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJ3LTcgcGxhY2VcIj48cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPnsgdGhpcy5wcm9wcy5yZXN1bHRzX2luZm8ucGxhY2UgfTwvcD48L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctNiBudW1iZXJcIj48cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPnsgdGhpcy5wcm9wcy5ydW4ucGFydGljaXBhbnQubnVtYmVyIH08L3A+PC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJ3LTMwIHBhcnRpY2lwYW50XCI+eyBnZXRQYXJ0aWNpcGFudERpc3BsYXkodGhpcy5wcm9wcy5ydW4ucGFydGljaXBhbnQpIH08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImNsdWJcIj48cD57IHRoaXMucHJvcHMucnVuLnBhcnRpY2lwYW50LmNsdWIubmFtZSB9PC9wPjwvdGQ+XG4gICAgICAgICAgICB7IHRoaXMucHJvcHMuaGFzX3RvdGFsX3Njb3JlID8gPHRkIGNsYXNzTmFtZT1cInctMTggc2NvcmVcIj57IHRvdGFsX3Njb3JlIH08L3RkPiA6IG51bGwgfVxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctOCBjYXJkXCI+PHAgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj57IGNhcmQgfTwvcD48L3RkPlxuICAgICAgICA8L3RyPlxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRvdXJSZXN1bHRzVGFibGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlckFkdmFuY2VzSGVhZGVyKGhhc19uZXh0X3RvdXIsIHByZXZfcm93LCBuZXh0X3JvdywgcHJldl9ydW4sIG5leHRfcnVuLCBpZHgsIG5fY29scykge1xuICAgICAgICBsZXQgcHJldl9zdGF0dXMgPSBwcmV2X3Jvd1xuICAgICAgICAgICAgPyBwcmV2X3J1bi5wZXJmb3JtZWRcbiAgICAgICAgICAgICAgICA/IHByZXZfcm93LmFkdmFuY2VzXG4gICAgICAgICAgICAgICAgICAgID8gXCJhZHZhbmNlZFwiXG4gICAgICAgICAgICAgICAgICAgIDogXCJub3RfYWR2YW5jZWRcIlxuICAgICAgICAgICAgICAgIDogXCJub3RfcGVyZm9ybWVkXCJcbiAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgbGV0IG5leHRfc3RhdHVzID0gbmV4dF9ydW4ucGVyZm9ybWVkXG4gICAgICAgICAgICA/IG5leHRfcm93LmFkdmFuY2VzXG4gICAgICAgICAgICAgICAgPyBcImFkdmFuY2VkXCJcbiAgICAgICAgICAgICAgICA6IFwibm90X2FkdmFuY2VkXCJcbiAgICAgICAgICAgIDogXCJub3RfcGVyZm9ybWVkXCI7XG4gICAgICAgIGxldCByZXN1bHQgPSBwcmV2X3N0YXR1cyAhPT0gbmV4dF9zdGF0dXNcbiAgICAgICAgICAgID8gbmV4dF9zdGF0dXMgPT09IFwibm90X3BlcmZvcm1lZFwiXG4gICAgICAgICAgICAgICAgPyA8cCBjbGFzc05hbWU9XCJ0ZXh0LWxlZnRcIj57IF9fKFwicmVzdWx0cy5oZWFkZXJzLnBhcnRpY2lwYW50c19ub3RfcGVyZm9ybWVkXCIpIH08L3A+XG4gICAgICAgICAgICAgICAgOiBoYXNfbmV4dF90b3VyXG4gICAgICAgICAgICAgICAgICAgID8gbmV4dF9zdGF0dXMgPT09IFwibm90X2FkdmFuY2VkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gPHAgY2xhc3NOYW1lPVwidGV4dC1sZWZ0XCI+eyBfXyhcInJlc3VsdHMuaGVhZGVycy5wYXJ0aWNpcGFudHNfbm90X2FkdmFuY2VkXCIpIH08L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICA6IDxwIGNsYXNzTmFtZT1cInRleHQtbGVmdFwiPnsgX18oXCJyZXN1bHRzLmhlYWRlcnMucGFydGljaXBhbnRzX2FkdmFuY2VkXCIpIH08L3A+XG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICBpZiAocmVzdWx0ID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPHRyIGtleT17IFwiTlRcIiArIGlkeCB9Pjx0aCBjbGFzc05hbWU9XCJhZHZhbmNlcy1oZWFkZXJcIiBjb2xTcGFuPXsgbl9jb2xzIH0+XG4gICAgICAgICAgICB7IHJlc3VsdCB9XG4gICAgICAgIDwvdGg+PC90cj5cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgdG91cl93cmFwcGVyID0gbmV3IFRvdXJTY29yZXNXcmFwcGVyKHRoaXMucHJvcHMudG91ciwgdGhpcy5wcm9wcy5yZXN1bHRzKTtcbiAgICAgICAgbGV0IGhlYWRfanVkZ2Vfc2NvcmVzID0gdG91cl93cmFwcGVyLmdldFNjb3Jlc1RhYmxlQnlSb2xlcyhcImhlYWRfanVkZ2VcIikubWFwKChyb3cpID0+IHJvd1swXSk7XG4gICAgICAgIGxldCByZXN1bHRzX2luZm8gPSB0b3VyX3dyYXBwZXIuZ2V0UmVzdWx0c0luZm8oKTtcbiAgICAgICAgbGV0IHJ1bnMgPSB0b3VyX3dyYXBwZXIuZ2V0UnVucygpO1xuICAgICAgICBsZXQgaGFzX25leHRfdG91ciA9IHRoaXMucHJvcHMudG91ci5uZXh0X3RvdXJfaWQgIT09IG51bGw7XG4gICAgICAgIGxldCBoYXNfdG90YWxfc2NvcmUgPSB0aGlzLnByb3BzLnRvdXIuc2NvcmluZ19zeXN0ZW1fbmFtZSAhPT0gXCJyb3NmYXJyLmZvcm1hdGlvblwiICYmIHRoaXMucHJvcHMudG91ci5zY29yaW5nX3N5c3RlbV9uYW1lICE9PSBcInJvc2ZhcnIuZm9ybWF0aW9uX2Fjcm9cIjtcbiAgICAgICAgbGV0IHJvd3MgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaWR4ID0gMDsgaWR4IDwgcnVucy5sZW5ndGg7ICsraWR4KSB7XG4gICAgICAgICAgICByb3dzLnB1c2godGhpcy5yZW5kZXJBZHZhbmNlc0hlYWRlcihcbiAgICAgICAgICAgICAgICBoYXNfbmV4dF90b3VyLFxuICAgICAgICAgICAgICAgIHJlc3VsdHNfaW5mb1tpZHggLSAxXSxcbiAgICAgICAgICAgICAgICByZXN1bHRzX2luZm9baWR4XSxcbiAgICAgICAgICAgICAgICBydW5zW2lkeCAtIDFdLFxuICAgICAgICAgICAgICAgIHJ1bnNbaWR4XSxcbiAgICAgICAgICAgICAgICBpZHgsXG4gICAgICAgICAgICAgICAgNSArIGhhc190b3RhbF9zY29yZVxuICAgICAgICAgICAgKSk7XG4gICAgICAgICAgICByb3dzLnB1c2goPFRvdXJSZXN1bHRzVGFibGVSb3dcbiAgICAgICAgICAgICAgICBrZXk9eyBydW5zW2lkeF0uaWQgfVxuICAgICAgICAgICAgICAgIGhlYWRfanVkZ2Vfc2NvcmU9eyBoZWFkX2p1ZGdlX3Njb3Jlc1tpZHhdIH1cbiAgICAgICAgICAgICAgICByZXN1bHRzX2luZm89eyByZXN1bHRzX2luZm9baWR4XSB9XG4gICAgICAgICAgICAgICAgcnVuPXsgcnVuc1tpZHhdIH1cbiAgICAgICAgICAgICAgICBoYXNfbmV4dF90b3VyPXsgaGFzX25leHRfdG91ciB9XG4gICAgICAgICAgICAgICAgaGFzX3RvdGFsX3Njb3JlPXsgaGFzX3RvdGFsX3Njb3JlIH0gLz5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImJyaWVmLXRhYmxlXCI+XG4gICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwiYm9yZGVyZWQtdGFibGVcIj5cbiAgICAgICAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJ3LTcgcGxhY2VcIj48cD57IF9fKFwicmVzdWx0cy5sYWJlbHMucGxhY2VcIikgfTwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInctNiBudW1iZXJcIj48cD57IF9fKFwicmVzdWx0cy5sYWJlbHMubnVtYmVyXCIpIH08L3A+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJ3LTMwIHBhcnRpY2lwYW50XCI+PHA+eyBfXyhcInJlc3VsdHMubGFiZWxzLnBhcnRpY2lwYW50X25hbWVcIikgfTwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImNsdWJcIj48cD57IF9fKFwicmVzdWx0cy5sYWJlbHMucGFydGljaXBhbnRfY2x1YlwiKSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICB7IGhhc190b3RhbF9zY29yZSA/IDx0aCBjbGFzc05hbWU9XCJ3LTE4IHNjb3JlXCI+PHA+eyBfXyhcInJlc3VsdHMubGFiZWxzLnRvdGFsX3Njb3JlXCIpIH08L3A+PC90aD4gOiBudWxsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJ3LTggY2FyZFwiPjxwIGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+eyBfXyhcInJlc3VsdHMubGFiZWxzLmNhcmRcIikgfTwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIDwvdGhlYWQ+XG4gICAgICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgICAgICB7IHJvd3MgfVxuICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG4iLCJpbXBvcnQgeyBfIH0gZnJvbSBcImkxMG4vbG9hZGVyXCI7XG5pbXBvcnQgeyBBcGkgfSBmcm9tIFwic2VydmVyL2FwaVwiO1xuaW1wb3J0IHsgc3RvcmFnZSB9IGZyb20gXCJzZXJ2ZXIvc3RvcmFnZVwiO1xuaW1wb3J0IHsgbWVzc2FnZV9kaXNwYXRjaGVyIH0gZnJvbSBcInNlcnZlci9tZXNzYWdlX2Rpc3BhdGNoZXJcIjtcbmltcG9ydCB7IExvYWRlciB9IGZyb20gXCJ1aS9jb21wb25lbnRzXCI7XG5pbXBvcnQgeyBzaG93Q29uZmlybSB9IGZyb20gXCJ1aS9kaWFsb2dzXCI7XG5pbXBvcnQgeyBjbG9uZSB9IGZyb20gXCJjb21tb24vdG9vbHNcIjtcblxuaW1wb3J0IHsgVG91ckFkbWluU2NvcmVDZWxsIH0gZnJvbSBcIi4vcm9zZmFyci90b3VyX2FkbWluXCI7XG5cblxudmFyIGN1cnJlbnRfZWRpdGluZ19jZWxsID0gbnVsbDtcblxuY2xhc3MgVG91ckFkbWluSGVhdFZhbHVlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBlZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgICAgIGN1cnJlbnRfdmFsdWU6IG51bGwsXG4gICAgICAgIH1cbiAgICB9XG4gICAgY29tcG9uZW50RGlkVXBkYXRlIChwcmV2UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgICAgICBpZiAoIXByZXZTdGF0ZS5lZGl0aW5nICYmIHRoaXMuc3RhdGUuZWRpdGluZykge1xuICAgICAgICAgICAgUmVhY3RET00uZmluZERPTU5vZGUodGhpcykucXVlcnlTZWxlY3RvcihcImlucHV0XCIpLnNlbGVjdCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG9uS2V5VXAoZXZlbnQpIHtcbiAgICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDEzKSB7IC8vIEVudGVyXG4gICAgICAgICAgICB0aGlzLnN1Ym1pdFZhbHVlKCk7XG4gICAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5Q29kZSA9PT0gMjcpIHsgLy8gRXNjXG4gICAgICAgICAgICB0aGlzLnN0b3BFZGl0aW5nKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhcnRFZGl0aW5nKCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5yZWFkT25seSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjdXJyZW50X2VkaXRpbmdfY2VsbCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY3VycmVudF9lZGl0aW5nX2NlbGwuc3RvcEVkaXRpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBjdXJyZW50X2VkaXRpbmdfY2VsbCA9IHRoaXM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgICAgICAgIGN1cnJlbnRfdmFsdWU6IHRoaXMucHJvcHMudmFsdWUsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdG9wRWRpdGluZygpIHtcbiAgICAgICAgY3VycmVudF9lZGl0aW5nX2NlbGwgPSBudWxsO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGVkaXRpbmc6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3VibWl0VmFsdWUoKSB7XG4gICAgICAgIEFwaShcInJ1bi5zZXRcIiwge3J1bl9pZDogdGhpcy5wcm9wcy5ydW5faWQsIGRhdGE6IHtoZWF0OiB0aGlzLnN0YXRlLmN1cnJlbnRfdmFsdWV9fSkub25TdWNjZXNzKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5zdG9wRWRpdGluZygpO1xuICAgICAgICB9LmJpbmQodGhpcykpLnNlbmQoKTtcbiAgICB9XG4gICAgb25DaGFuZ2UoZXZlbnQpIHtcbiAgICAgICAgdmFyIHZhbHVlID0gcGFyc2VJbnQoZXZlbnQudGFyZ2V0LnZhbHVlLnJlcGxhY2UoL1xcRC9nLCcnKSk7XG4gICAgICAgIGlmIChpc05hTih2YWx1ZSkpIHtcbiAgICAgICAgICAgIHZhbHVlID0gMDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGN1cnJlbnRfdmFsdWU6IHZhbHVlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5lZGl0aW5nKSB7XG4gICAgICAgICAgICByZXR1cm4gPHRkIGNsYXNzTmFtZT1cImhlYXRcIj48aW5wdXRcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJpbnB1dC1oZWF0XCJcbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgdmFsdWU9eyB0aGlzLnN0YXRlLmN1cnJlbnRfdmFsdWUgfHwgXCJcIiB9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcykgfVxuICAgICAgICAgICAgICAgIG9uS2V5RG93bj17IHRoaXMub25LZXlVcC5iaW5kKHRoaXMpIH0gLz48L3RkPlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIDx0ZCBjbGFzc05hbWU9XCJoZWF0XCIgb25DbGljaz17IHRoaXMuc3RhcnRFZGl0aW5nLmJpbmQodGhpcykgfT5cbiAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMudmFsdWUgfVxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRvdXJBZG1pbkJ1dHRvbnMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHNpZ25hbChtZXNzYWdlKSB7XG4gICAgICAgIHJldHVybiAoKCkgPT4gdGhpcy5wcm9wcy5vblNpZ25hbChtZXNzYWdlKSkuYmluZCh0aGlzKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy50b3VyLmZpbmFsaXplZCkge1xuICAgICAgICAgICAgcmV0dXJuIDxkaXY+PC9kaXY+XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgICAgICBpZiAoIXRoaXMucHJvcHMudG91ci5hY3RpdmUpIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdC5jb25jYXQoW1xuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5XCIgb25DbGljaz17IHRoaXMuc2lnbmFsKFwiaW5pdF90b3VyXCIpIH0ga2V5PVwiYnRuLWluaXQtdG91clwiPlxuICAgICAgICAgICAgICAgICAgICB7IF8oXCJqdWRnaW5nLmJ1dHRvbnMuaW5pdF90b3VyXCIpIH1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj4sXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnlcIiBvbkNsaWNrPXsgdGhpcy5zaWduYWwoXCJmaW5hbGl6ZV90b3VyXCIpIH0ga2V5PVwiYnRuLWZpbmFsaXplLXRvdXJcIj5cbiAgICAgICAgICAgICAgICAgICAgeyBfKFwianVkZ2luZy5idXR0b25zLmZpbmFsaXplX3RvdXJcIikgfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPixcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiIG9uQ2xpY2s9eyB0aGlzLnNpZ25hbChcInNodWZmbGVfaGVhdHNcIikgfSBrZXk9XCJidG4tc2h1ZmZsZS1oZWF0c1wiPlxuICAgICAgICAgICAgICAgICAgICB7IF8oXCJqdWRnaW5nLmJ1dHRvbnMuc2h1ZmZsZV9oZWF0c1wiKSB9XG4gICAgICAgICAgICAgICAgPC9idXR0b24+LFxuICAgICAgICAgICAgXSlcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQucHVzaCg8VG91ckFkbWluU3RhcnRTdG9wVG91ckJ1dHRvblxuICAgICAgICAgICAgdG91cj17IHRoaXMucHJvcHMudG91ciB9XG4gICAgICAgICAgICBvblN0YXJ0PXsgdGhpcy5zaWduYWwoXCJzdGFydF90b3VyXCIpIH1cbiAgICAgICAgICAgIG9uU3RvcD17IHRoaXMuc2lnbmFsKFwic3RvcF90b3VyXCIpIH1cbiAgICAgICAgICAgIGtleT1cImJ0bi1zdGFydC1zdG9wXCIgLz4pO1xuICAgICAgICByZXR1cm4gPGRpdj57IHJlc3VsdCB9PC9kaXY+O1xuICAgIH1cbn1cblxuY2xhc3MgVG91ckFkbWluU2NvcmVDZWxsV3JhcHBlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgICAgICBjdXJyZW50X3ZhbHVlOiB0aGlzLnByb3BzLnZhbHVlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBzdGFydEVkaXRpbmcoKSB7XG4gICAgICAgIGlmIChjdXJyZW50X2VkaXRpbmdfY2VsbCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY3VycmVudF9lZGl0aW5nX2NlbGwuc3RvcEVkaXRpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBjdXJyZW50X2VkaXRpbmdfY2VsbCA9IHRoaXM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgICAgICAgIGN1cnJlbnRfdmFsdWU6IGNsb25lKHRoaXMucHJvcHMudmFsdWUpLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RvcEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgICAgICBjdXJyZW50X2VkaXRpbmdfY2VsbCA9IG51bGw7XG4gICAgfVxuICAgIHVwZGF0ZVZhbHVlKG5ld192YWx1ZSkge1xuICAgICAgICB2YXIgdmFsdWUgPSB0aGlzLnN0YXRlLmN1cnJlbnRfdmFsdWU7XG4gICAgICAgIHZhbHVlLnJhd19kYXRhID0gbmV3X3ZhbHVlO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGN1cnJlbnRfdmFsdWU6IHZhbHVlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3VibWl0VmFsdWUobmV3X3ZhbHVlKSB7XG4gICAgICAgIGxldCByZXF1ZXN0ID0ge1xuICAgICAgICAgICAgc2NvcmVfZGF0YTogbmV3X3ZhbHVlLFxuICAgICAgICAgICAgZm9yY2U6IHRydWUsXG4gICAgICAgIH1cbiAgICAgICAgQXBpKFwic2NvcmUuc2V0XCIsIHtzY29yZV9pZDogdGhpcy5wcm9wcy5zY29yZV9pZCwgZGF0YTogcmVxdWVzdH0pXG4gICAgICAgICAgICAub25TdWNjZXNzKHRoaXMuc3RvcEVkaXRpbmcuYmluZCh0aGlzKSlcbiAgICAgICAgICAgIC5zZW5kKCk7XG4gICAgfVxuICAgIHRvZ2dsZUNvbmZpcm1hdGlvbigpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuY29uZmlybWVkKSB7XG4gICAgICAgICAgICBBcGkoXCJzY29yZS51bmNvbmZpcm1cIiwgeyBzY29yZV9pZDogdGhpcy5wcm9wcy5zY29yZV9pZCB9KS5zZW5kKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBBcGkoXCJzY29yZS5jb25maXJtXCIsIHsgc2NvcmVfaWQ6IHRoaXMucHJvcHMuc2NvcmVfaWQgfSkuc2VuZCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnByb3BzLnZhbHVlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gPHRkIGNsYXNzTmFtZT1cIm5vLXNjb3JlXCI+Jm5ic3A7PC90ZD5cbiAgICAgICAgfVxuICAgICAgICBsZXQgY2xhc3NlcyA9IFtcImp1ZGdlXCJdXG4gICAgICAgICAgICAuY29uY2F0KHRoaXMuc3RhdGUuZWRpdGluZyA/IFtcImVkaXRpbmdcIl0gOiBbXSlcbiAgICAgICAgICAgIC5jb25jYXQodGhpcy5wcm9wcy5jb25maXJtZWQgPyBbXCJjb25maXJtZWQtc2NvcmVcIl0gOiBbXSlcbiAgICAgICAgcmV0dXJuIDx0ZCBjbGFzc05hbWU9eyBjbGFzc2VzLmpvaW4oXCIgXCIpIH0gPlxuICAgICAgICAgICAgPFRvdXJBZG1pblNjb3JlQ2VsbFxuICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAgZGlzY2lwbGluZV9qdWRnZT17IHRoaXMucHJvcHMuZGlzY2lwbGluZV9qdWRnZSB9XG4gICAgICAgICAgICAgICAgc2NvcmluZ19zeXN0ZW1fbmFtZT17IHRoaXMucHJvcHMuc2NvcmluZ19zeXN0ZW1fbmFtZSB9XG4gICAgICAgICAgICAgICAgc3RhcnRFZGl0aW5nPXsgdGhpcy5zdGFydEVkaXRpbmcuYmluZCh0aGlzKSB9XG4gICAgICAgICAgICAgICAgc3RvcEVkaXRpbmc9eyB0aGlzLnN0b3BFZGl0aW5nLmJpbmQodGhpcykgfVxuICAgICAgICAgICAgICAgIHVwZGF0ZVZhbHVlPXsgdGhpcy51cGRhdGVWYWx1ZS5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgICAgICBzdWJtaXRWYWx1ZT17IHRoaXMuc3VibWl0VmFsdWUuYmluZCh0aGlzKSB9XG4gICAgICAgICAgICAgICAgdG9nZ2xlQ29uZmlybWF0aW9uPXsgdGhpcy50b2dnbGVDb25maXJtYXRpb24uYmluZCh0aGlzKSB9XG4gICAgICAgICAgICAgICAgZWRpdGluZz17IHRoaXMuc3RhdGUuZWRpdGluZyB9XG4gICAgICAgICAgICAgICAgdmFsdWU9eyB0aGlzLnN0YXRlLmVkaXRpbmcgPyB0aGlzLnN0YXRlLmN1cnJlbnRfdmFsdWUgOiB0aGlzLnByb3BzLnZhbHVlIH1cbiAgICAgICAgICAgICAgICBjb25maXJtZWQ9eyB0aGlzLnByb3BzLmNvbmZpcm1lZCB9IC8+XG4gICAgICAgIDwvdGQ+XG4gICAgfVxufVxuXG5jbGFzcyBUb3VyQWRtaW5TY29yZXNSb3cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHVwZGF0ZUhlYXQobmV3X3ZhbHVlKSB7XG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRlSGVhdFZhbHVlKG5ld192YWx1ZSk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IHNjb3Jlc19tYXAgPSB7fVxuICAgICAgICB0aGlzLnByb3BzLnJ1bi5zY29yZXMuZm9yRWFjaChmdW5jdGlvbihzY29yZV9kYXRhKSB7XG4gICAgICAgICAgICBzY29yZXNfbWFwW3Njb3JlX2RhdGEuZGlzY2lwbGluZV9qdWRnZV9pZF0gPSBzY29yZV9kYXRhO1xuICAgICAgICB9KTtcbiAgICAgICAgbGV0IHNjb3JlcyA9IHRoaXMucHJvcHMuZGlzY2lwbGluZV9qdWRnZXMubWFwKGZ1bmN0aW9uKGRpc2NpcGxpbmVfanVkZ2UsIGlkeCkge1xuICAgICAgICAgICAgbGV0IHNjb3JlID0gc2NvcmVzX21hcFtkaXNjaXBsaW5lX2p1ZGdlLmlkXTtcbiAgICAgICAgICAgIHJldHVybiA8VG91ckFkbWluU2NvcmVDZWxsV3JhcHBlclxuICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAga2V5PXsgKHNjb3JlICYmIHNjb3JlLmlkKSB8fCAgKFwiSVwiICsgaWR4KX1cbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2p1ZGdlPXsgZGlzY2lwbGluZV9qdWRnZSB9XG4gICAgICAgICAgICAgICAgc2NvcmluZ19zeXN0ZW1fbmFtZT17IHRoaXMucHJvcHMuc2NvcmluZ19zeXN0ZW1fbmFtZSB9XG4gICAgICAgICAgICAgICAgc2NvcmVfaWQ9eyBzY29yZSAmJiBzY29yZS5pZCB9XG4gICAgICAgICAgICAgICAgdmFsdWU9eyBzY29yZSAmJiBzY29yZS5kYXRhIH1cbiAgICAgICAgICAgICAgICBjb25maXJtZWQ9eyBzY29yZSAmJiBzY29yZS5jb25maXJtZWR9IC8+XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICAgIHJldHVybiA8dHIgY2xhc3NOYW1lPXsgdGhpcy5wcm9wcy5ydW4uaGVhdCAlIDIgPyBcIm9kZC1oZWF0XCIgOiBcIlwifT5cbiAgICAgICAgICAgIDxUb3VyQWRtaW5IZWF0VmFsdWVcbiAgICAgICAgICAgICAgICByZWFkT25seT17IHRoaXMucHJvcHMucmVhZE9ubHkgfVxuICAgICAgICAgICAgICAgIHJ1bl9pZD17IHRoaXMucHJvcHMucnVuLmlkIH1cbiAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMucnVuLmhlYXQgfVxuICAgICAgICAgICAgICAgIHVwZGF0ZVZhbHVlPXsgdGhpcy51cGRhdGVIZWF0LmJpbmQodGhpcykgfSAvPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cIm51bWJlclwiPnsgdGhpcy5wcm9wcy5ydW4ucGFydGljaXBhbnQubnVtYmVyIH08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cIm5hbWVcIj57IHRoaXMucHJvcHMucnVuLnBhcnRpY2lwYW50Lm5hbWUgfTwvdGQ+XG4gICAgICAgICAgICA8VG91ckFkbWluQWNyb2JhdGljc0NlbGxcbiAgICAgICAgICAgICAgICByZWFkT25seT17IHRoaXMucHJvcHMucmVhZE9ubHkgfVxuICAgICAgICAgICAgICAgIHJ1bl9pZD17IHRoaXMucHJvcHMucnVuLmlkIH1cbiAgICAgICAgICAgICAgICBwcm9ncmFtX25hbWU9eyB0aGlzLnByb3BzLnJ1bi5wcm9ncmFtX25hbWUgfVxuICAgICAgICAgICAgICAgIGFjcm9iYXRpY3M9eyB0aGlzLnByb3BzLnJ1bi5hY3JvYmF0aWNzIH1cbiAgICAgICAgICAgICAgICBwcm9ncmFtcz17IHRoaXMucHJvcHMucnVuLnBhcnRpY2lwYW50LnByb2dyYW1zIH0gLz5cbiAgICAgICAgICAgIDxUb3VyQWRtaW5QZXJmb3JtZWRDZWxsXG4gICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnByb3BzLnJlYWRPbmx5IH1cbiAgICAgICAgICAgICAgICBydW49eyB0aGlzLnByb3BzLnJ1biB9IC8+XG4gICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwidG90YWxcIj57IHRoaXMucHJvcHMucnVuLnRvdGFsX3Njb3JlIH08L3RkPlxuICAgICAgICAgICAgeyBzY29yZXMgfVxuICAgICAgICA8L3RyPjtcbiAgICB9XG59XG5cbmNsYXNzIFRvdXJBZG1pblN0YXJ0U3RvcFRvdXJCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMudG91ci5hY3RpdmUpIHtcbiAgICAgICAgICAgIHJldHVybiA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tZGFuZ2VyXCIgb25DbGljaz17IHRoaXMucHJvcHMub25TdG9wIH0+XG4gICAgICAgICAgICAgICAgeyBfKFwianVkZ2luZy5idXR0b25zLnN0b3BfdG91clwiKSB9XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tc3VjY2Vzc1wiIG9uQ2xpY2s9eyB0aGlzLnByb3BzLm9uU3RhcnQgfT5cbiAgICAgICAgICAgICAgICB7IF8oXCJqdWRnaW5nLmJ1dHRvbnMuc3RhcnRfdG91clwiKSB9XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgfVxuICAgIH1cbn1cblxuY2xhc3MgVG91ckFkbWluQWNyb2JhdGljRWRpdG9yUm93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBvblBsdXMoKSB7XG4gICAgICAgIGxldCB2YWx1ZSA9IE1hdGgucm91bmQoMiAqIHRoaXMucHJvcHMuYWNyb2JhdGljLnNjb3JlICsgMSkgLyAyO1xuICAgICAgICBBcGkoXCJhY3JvYmF0aWNfb3ZlcnJpZGUuc2V0XCIsIHtcbiAgICAgICAgICAgIHJ1bl9pZDogdGhpcy5wcm9wcy5ydW5faWQsXG4gICAgICAgICAgICBhY3JvYmF0aWNfaWR4OiB0aGlzLnByb3BzLmFjcm9faWR4LFxuICAgICAgICAgICAgc2NvcmU6IHZhbHVlLFxuICAgICAgICB9KS5zZW5kKCk7XG4gICAgfVxuICAgIG9uTWludXMoKSB7XG4gICAgICAgIGxldCB2YWx1ZSA9IE1hdGgubWF4KDAsIE1hdGgucm91bmQoMiAqIHRoaXMucHJvcHMuYWNyb2JhdGljLnNjb3JlIC0gMSkgLyAyKTtcbiAgICAgICAgQXBpKFwiYWNyb2JhdGljX292ZXJyaWRlLnNldFwiLCB7XG4gICAgICAgICAgICBydW5faWQ6IHRoaXMucHJvcHMucnVuX2lkLFxuICAgICAgICAgICAgYWNyb2JhdGljX2lkeDogdGhpcy5wcm9wcy5hY3JvX2lkeCxcbiAgICAgICAgICAgIHNjb3JlOiB2YWx1ZSxcbiAgICAgICAgfSkuc2VuZCgpO1xuICAgIH1cbiAgICBvblJlc2V0KCkge1xuICAgICAgICBBcGkoXCJhY3JvYmF0aWNfb3ZlcnJpZGUuc2V0XCIsIHtcbiAgICAgICAgICAgIHJ1bl9pZDogdGhpcy5wcm9wcy5ydW5faWQsXG4gICAgICAgICAgICBhY3JvYmF0aWNfaWR4OiB0aGlzLnByb3BzLmFjcm9faWR4LFxuICAgICAgICAgICAgc2NvcmU6IG51bGwsXG4gICAgICAgIH0pLnNlbmQoKTtcbiAgICB9XG4gICAgcmVuZGVyQ29udHJvbHMoKSB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLnJlYWRPbmx5KSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPHRkIGNsYXNzTmFtZT1cImNvbnRyb2xzXCI+XG4gICAgICAgICAgICB7IHRoaXMucHJvcHMuYWNyb2JhdGljLmhhc19vdmVycmlkZVxuICAgICAgICAgICAgICAgID8gPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtXCIgb25DbGljaz17IHRoaXMub25SZXNldC5iaW5kKHRoaXMpIH0+XG4gICAgICAgICAgICAgICAgICAgIHsgXyhcImp1ZGdpbmcuYnV0dG9ucy5yZXNldF9hY3JvYmF0aWNfb3ZlcnJpZGVcIikgfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDogbnVsbCB9XG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tZGVmYXVsdCBidG4tc21cIiBvbkNsaWNrPXsgdGhpcy5vbk1pbnVzLmJpbmQodGhpcykgfT4mbWludXM7PC9idXR0b24+XG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tZGVmYXVsdCBidG4tc21cIiBvbkNsaWNrPXsgdGhpcy5vblBsdXMuYmluZCh0aGlzKSB9Pis8L2J1dHRvbj5cbiAgICAgICAgPC90ZD5cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPHRyPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImRlc2NyaXB0aW9uXCI+eyB0aGlzLnByb3BzLmFjcm9iYXRpYy5kZXNjcmlwdGlvbiB9PC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJvbGQtc2NvcmVcIj5cbiAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMuYWNyb2JhdGljLm9yaWdpbmFsX3Njb3JlLnRvRml4ZWQoMSkgfVxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJuZXctc2NvcmVcIj5cbiAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMuYWNyb2JhdGljLmhhc19vdmVycmlkZVxuICAgICAgICAgICAgICAgICAgICA/IHRoaXMucHJvcHMuYWNyb2JhdGljLnNjb3JlLnRvRml4ZWQoMSlcbiAgICAgICAgICAgICAgICAgICAgOiBudWxsIH1cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICB7IHRoaXMucmVuZGVyQ29udHJvbHMoKSB9XG4gICAgICAgIDwvdHI+XG4gICAgfVxufVxuXG5jbGFzcyBUb3VyQWRtaW5BY3JvYmF0aWNMb2FkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIG9uU3VibWl0KGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBsZXQgdmFsdWUgPSB0aGlzLnJlZnMuc2VsZWN0b3IudmFsdWU7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gXCJudWxsXCIpIHtcbiAgICAgICAgICAgIHZhbHVlID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBzaG93Q29uZmlybShfKFwianVkZ2luZy5jb25maXJtcy5sb2FkX3Byb2dyYW1cIiksICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25Mb2FkKHZhbHVlKTtcbiAgICAgICAgICAgIHN3YWwuY2xvc2UoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlbmRlclNlbGVjdG9yKCkge1xuICAgICAgICByZXR1cm4gPHNlbGVjdCBkZWZhdWx0VmFsdWU9XCJudWxsXCIgcmVmPVwic2VsZWN0b3JcIj5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJudWxsXCI+LTwvb3B0aW9uPlxuICAgICAgICAgICAgeyB0aGlzLnByb3BzLnByb2dyYW1zLm1hcCggcHJvZ3JhbSA9PlxuICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9eyBwcm9ncmFtLmlkIH0ga2V5PXsgcHJvZ3JhbS5pZCB9PnsgcHJvZ3JhbS5uYW1lIH08L29wdGlvbj5cbiAgICAgICAgICAgICkgfVxuICAgICAgICA8L3NlbGVjdD5cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGZvcm0gb25TdWJtaXQ9eyB0aGlzLm9uU3VibWl0LmJpbmQodGhpcykgfSBjbGFzc05hbWU9XCJhY3JvLWxvYWRlciBwdWxsLWxlZnRcIj5cbiAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJTZWxlY3RvcigpIH1cbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiPnsgXyhcImdsb2JhbC5idXR0b25zLmxvYWRcIikgfTwvYnV0dG9uPlxuICAgICAgICA8L2Zvcm0+XG4gICAgfVxufVxuXG5jbGFzcyBUb3VyQWRtaW5BY3JvYmF0aWNFZGl0b3IgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGxvYWRBY3JvYmF0aWNzKHByb2dyYW1faWQpIHtcbiAgICAgICAgQXBpKFwicnVuLmxvYWRfcHJvZ3JhbVwiLCB7IHByb2dyYW1faWQ6IHByb2dyYW1faWQsIHJ1bl9pZDogdGhpcy5wcm9wcy5ydW5faWQgfSkuc2VuZCgpO1xuICAgIH1cbiAgICByZW5kZXJCb2R5KCkge1xuICAgICAgICByZXR1cm4gPGRpdj5cbiAgICAgICAgICAgIDxoND57IHRoaXMucHJvcHMucHJvZ3JhbV9uYW1lIH08L2g0PlxuICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cImFjcm9iYXRpY3NcIj48dGJvZHk+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwiZGVzY3JpcHRpb25cIj57IF8oXCJqdWRnaW5nLmxhYmVscy5hY3JvX2Rlc2NyaXB0aW9uXCIpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwib2xkLXNjb3JlXCI+eyBfKFwianVkZ2luZy5sYWJlbHMub2xkX3Njb3JlXCIpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwibmV3LXNjb3JlXCI+eyBfKFwianVkZ2luZy5sYWJlbHMubmV3X3Njb3JlXCIpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMucmVhZE9ubHkgPyBudWxsIDogPHRoIGNsYXNzTmFtZT1cImNvbnRyb2xzXCI+PC90aD4gfVxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLmFjcm9iYXRpY3MubWFwKChhY3JvLCBpZHgpID0+XG4gICAgICAgICAgICAgICAgICAgIDxUb3VyQWRtaW5BY3JvYmF0aWNFZGl0b3JSb3dcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAgICAgICAgICBhY3JvYmF0aWM9eyBhY3JvIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGFjcm9faWR4PXsgaWR4IH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJ1bl9pZD17IHRoaXMucHJvcHMucnVuX2lkIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGtleT17IGlkeCB9IC8+XG4gICAgICAgICAgICAgICAgKSB9XG4gICAgICAgICAgICA8L3Rib2R5PjwvdGFibGU+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbiAgICByZW5kZXJNb2NrKCkge1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJuby1wcm9ncmFtIHRleHQtY2VudGVyXCI+Tm8gcHJvZ3JhbSBsb2FkZWQ8L2Rpdj5cbiAgICB9XG4gICAgcmVuZGVyTG9hZGVyKCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5yZWFkT25seSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxUb3VyQWRtaW5BY3JvYmF0aWNMb2FkZXJcbiAgICAgICAgICAgIG9uTG9hZD17IHRoaXMubG9hZEFjcm9iYXRpY3MuYmluZCh0aGlzKSB9XG4gICAgICAgICAgICBwcm9ncmFtcz17IHRoaXMucHJvcHMucHJvZ3JhbXMgfSAvPlxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tYWNyby1pbnB1dFwiPlxuICAgICAgICAgICAgeyB0aGlzLnByb3BzLnByb2dyYW1fbmFtZSA9PT0gbnVsbCA/IHRoaXMucmVuZGVyTW9jaygpIDogdGhpcy5yZW5kZXJCb2R5KCkgfVxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlckxvYWRlcigpIH1cbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbSBwdWxsLXJpZ2h0XCIgb25DbGljaz17IHRoaXMucHJvcHMuc3RvcEVkaXRpbmcgfT5cbiAgICAgICAgICAgICAgICB7IF8oXCJnbG9iYWwuYnV0dG9ucy5jbG9zZVwiKSB9XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2xlYXJmaXhcIj48L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgfVxufVxuXG5jbGFzcyBUb3VyQWRtaW5BY3JvYmF0aWNzQ2VsbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHN0YXJ0RWRpdGluZygpIHtcbiAgICAgICAgaWYgKGN1cnJlbnRfZWRpdGluZ19jZWxsICE9PSBudWxsKSB7XG4gICAgICAgICAgICBjdXJyZW50X2VkaXRpbmdfY2VsbC5zdG9wRWRpdGluZygpO1xuICAgICAgICB9XG4gICAgICAgIGN1cnJlbnRfZWRpdGluZ19jZWxsID0gdGhpcztcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBlZGl0aW5nOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RvcEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgICAgICBjdXJyZW50X2VkaXRpbmdfY2VsbCA9IG51bGw7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuZWRpdGluZykge1xuICAgICAgICAgICAgcmV0dXJuIDx0ZCBjbGFzc05hbWU9XCJhY3JvYmF0aWNzIGVkaXRpbmdcIj5cbiAgICAgICAgICAgICAgICA8VG91ckFkbWluQWNyb2JhdGljRWRpdG9yXG4gICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXsgdGhpcy5wcm9wcy5yZWFkT25seSB9XG4gICAgICAgICAgICAgICAgICAgIHN0b3BFZGl0aW5nPXsgdGhpcy5zdG9wRWRpdGluZy5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgICAgICAgICAgey4uLnRoaXMucHJvcHN9IC8+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnByb3BzLnByb2dyYW1fbmFtZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIDx0ZCBjbGFzc05hbWU9XCJhY3JvYmF0aWNzXCIgb25DbGljaz17IHRoaXMuc3RhcnRFZGl0aW5nLmJpbmQodGhpcykgfT5cbiAgICAgICAgICAgICAgICAmbWRhc2g7XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICB9XG4gICAgICAgIGxldCBoYXNfb3ZlcnJpZGVzID0gZmFsc2U7XG4gICAgICAgIGxldCBvcmlnaW5hbF9zY29yZSA9IDA7XG4gICAgICAgIGxldCBzY29yZSA9IDA7XG4gICAgICAgIHRoaXMucHJvcHMuYWNyb2JhdGljcy5mb3JFYWNoKChhY3JvKSA9PiB7XG4gICAgICAgICAgICBvcmlnaW5hbF9zY29yZSArPSBhY3JvLm9yaWdpbmFsX3Njb3JlO1xuICAgICAgICAgICAgc2NvcmUgKz0gYWNyby5zY29yZTtcbiAgICAgICAgICAgIGhhc19vdmVycmlkZXMgPSBoYXNfb3ZlcnJpZGVzIHx8IGFjcm8uc2NvcmUgIT09IGFjcm8ub3JpZ2luYWxfc2NvcmU7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gPHRkIGNsYXNzTmFtZT1cImFjcm9iYXRpY3NcIiBvbkNsaWNrPXsgdGhpcy5zdGFydEVkaXRpbmcuYmluZCh0aGlzKSB9PlxuICAgICAgICAgICAgeyBoYXNfb3ZlcnJpZGVzID8gb3JpZ2luYWxfc2NvcmUudG9GaXhlZCgxKSArIFwiIOKGkiBcIiArIHNjb3JlLnRvRml4ZWQoMSkgOiBzY29yZS50b0ZpeGVkKDEpIH1cbiAgICAgICAgPC90ZD5cbiAgICB9XG59XG5cbmNsYXNzIFRvdXJBZG1pblBlcmZvcm1lZENlbGwgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHRvZ2dsZVN0YXRlKCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5yZWFkT25seSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBtZXRob2QgPSB0aGlzLnByb3BzLnJ1bi5wZXJmb3JtZWRcbiAgICAgICAgICAgID8gXCJydW4ubWFya19ub3RfcGVyZm9ybWVkXCJcbiAgICAgICAgICAgIDogXCJydW4ubWFya19wZXJmb3JtZWRcIjtcbiAgICAgICAgQXBpKG1ldGhvZCwgeyBydW5faWQ6IHRoaXMucHJvcHMucnVuLmlkIH0pLnNlbmQoKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPHRkIGNsYXNzTmFtZT1cInBlcmZvcm1lZFwiPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICBjaGVja2VkPXsgdGhpcy5wcm9wcy5ydW4ucGVyZm9ybWVkIH1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMudG9nZ2xlU3RhdGUuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgIDwvdGQ+XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgVG91ckFkbWluQm9keSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICAvLyBJbnRpaWFsaXphdGlvblxuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgdG91cjogbnVsbCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBzdG9yYWdlLmdldERvbWFpbihcImp1ZGdpbmdfXCIgKyB0aGlzLnByb3BzLnRvdXJfaWQpO1xuICAgICAgICB0aGlzLnJlbG9hZF9saXN0ZW5lciA9IG1lc3NhZ2VfZGlzcGF0Y2hlci5hZGRMaXN0ZW5lcihcInJlbG9hZF9kYXRhXCIsIHRoaXMubG9hZERhdGEuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuZGJfdXBkYXRlX2xpc3RlbmVyID0gbWVzc2FnZV9kaXNwYXRjaGVyLmFkZExpc3RlbmVyKFwiZGJfdXBkYXRlXCIsIHRoaXMucmVsb2FkRnJvbVN0b3JhZ2UuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMubG9hZERhdGEoKTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIG1lc3NhZ2VfZGlzcGF0Y2hlci5yZW1vdmVMaXN0ZW5lcih0aGlzLnJlbG9hZF9saXN0ZW5lcik7XG4gICAgICAgIG1lc3NhZ2VfZGlzcGF0Y2hlci5yZW1vdmVMaXN0ZW5lcih0aGlzLmRiX3VwZGF0ZV9saXN0ZW5lcik7XG4gICAgICAgIHN0b3JhZ2UuZGVsRG9tYWluKFwianVkZ2luZ19cIiArIHRoaXMucHJvcHMudG91cl9pZCk7XG4gICAgfVxuICAgIHJlbG9hZEZyb21TdG9yYWdlKCkge1xuICAgICAgICB2YXIgU0NIRU1BID0ge1xuICAgICAgICAgICAgZGlzY2lwbGluZToge1xuICAgICAgICAgICAgICAgIGNvbXBldGl0aW9uOiB7fSxcbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2p1ZGdlczoge1xuICAgICAgICAgICAgICAgICAgICBqdWRnZToge30sXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJ1bnM6IHtcbiAgICAgICAgICAgICAgICBzY29yZXM6IHt9LFxuICAgICAgICAgICAgICAgIHBhcnRpY2lwYW50OiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2dyYW1zOiB7fSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfVxuICAgICAgICBsZXQgc2VyaWFsaXplZCA9IHRoaXMuc3RvcmFnZS5nZXQoXCJUb3VyXCIpXG4gICAgICAgICAgICAuYnlfaWQodGhpcy5wcm9wcy50b3VyX2lkKVxuICAgICAgICAgICAgLnNlcmlhbGl6ZShTQ0hFTUEpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHRvdXI6IHNlcmlhbGl6ZWRcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGxvYWREYXRhKCkge1xuICAgICAgICBBcGkoXCJ0b3VyLmdldFwiLCB7XG4gICAgICAgICAgICB0b3VyX2lkOiB0aGlzLnByb3BzLnRvdXJfaWQsXG4gICAgICAgICAgICBjaGlsZHJlbjoge1xuICAgICAgICAgICAgICAgIGRpc2NpcGxpbmU6IHtcbiAgICAgICAgICAgICAgICAgICAgY29tcGV0aXRpb246IHt9LFxuICAgICAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2p1ZGdlczoge1xuICAgICAgICAgICAgICAgICAgICAgICAganVkZ2U6IHt9LFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBydW5zOiB7XG4gICAgICAgICAgICAgICAgICAgIGFjcm9iYXRpY3M6IHt9LFxuICAgICAgICAgICAgICAgICAgICBzY29yZXM6IHt9LFxuICAgICAgICAgICAgICAgICAgICBwYXJ0aWNpcGFudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJvZ3JhbXM6IHt9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5hZGRUb0RCKFwiVG91clwiLCB0aGlzLnByb3BzLnRvdXJfaWQsIHRoaXMuc3RvcmFnZSlcbiAgICAgICAgLm9uU3VjY2Vzcyh0aGlzLnJlbG9hZEZyb21TdG9yYWdlLmJpbmQodGhpcykpXG4gICAgICAgIC5zZW5kKCk7XG4gICAgfVxuXG4gICAgLy8gTGlzdGVuZXJzXG5cbiAgICBvblNpZ25hbChtZXNzYWdlKSB7XG4gICAgICAgIHN3aXRjaCAobWVzc2FnZSkge1xuICAgICAgICBjYXNlIFwiaW5pdF90b3VyXCI6XG4gICAgICAgICAgICBzaG93Q29uZmlybShfKFwianVkZ2luZy5jb25maXJtcy5pbml0X3RvdXJcIiksICgpID0+IHtcbiAgICAgICAgICAgICAgICBBcGkoXCJ0b3VyLmluaXRcIiwge3RvdXJfaWQ6IHRoaXMucHJvcHMudG91cl9pZH0pLm9uU3VjY2VzcygoKSA9PiBzd2FsLmNsb3NlKCkpLnNlbmQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJmaW5hbGl6ZV90b3VyXCI6XG4gICAgICAgICAgICBzaG93Q29uZmlybShfKFwianVkZ2luZy5jb25maXJtcy5maW5hbGl6ZV90b3VyXCIpLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgQXBpKFwidG91ci5maW5hbGl6ZVwiLCB7dG91cl9pZDogdGhpcy5wcm9wcy50b3VyX2lkfSkub25TdWNjZXNzKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc3dhbC5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLnN3aXRjaFBhZ2UoXCJyZXN1bHRzLTFcIik7XG4gICAgICAgICAgICAgICAgfSkuc2VuZCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInNodWZmbGVfaGVhdHNcIjpcbiAgICAgICAgICAgIHNob3dDb25maXJtKF8oXCJqdWRnaW5nLmNvbmZpcm1zLnNodWZmbGVfaGVhdHNcIiksICgpID0+IHtcbiAgICAgICAgICAgICAgICBBcGkoXCJ0b3VyLnNodWZmbGVfaGVhdHNcIiwge3RvdXJfaWQ6IHRoaXMucHJvcHMudG91cl9pZH0pLm9uU3VjY2VzcygoKSA9PiBzd2FsLmNsb3NlKCkpLnNlbmQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJzdGFydF90b3VyXCI6XG4gICAgICAgICAgICBBcGkoXCJ0b3VyLnN0YXJ0XCIsIHt0b3VyX2lkOiB0aGlzLnByb3BzLnRvdXJfaWR9KS5zZW5kKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInN0b3BfdG91clwiOlxuICAgICAgICAgICAgQXBpKFwidG91ci5zdG9wXCIsIHt0b3VyX2lkOiB0aGlzLnByb3BzLnRvdXJfaWR9KS5zZW5kKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJVbmtub3duIHNpZ25hbCByZWNlaXZlZDpcIiwgbWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBIZWxwZXJzXG5cbiAgICBnZXRBY3JvYmF0aWNPdmVycmlkZXMoKSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgdGhpcy5zdGF0ZS50b3VyLnJ1bnMuZm9yRWFjaChmdW5jdGlvbihydW4pIHtcbiAgICAgICAgICAgIHJ1bi5hY3JvYmF0aWNzLmZvckVhY2goZnVuY3Rpb24oYWNybywgaWR4KSB7XG4gICAgICAgICAgICAgICAgaWYgKGFjcm8ub3JpZ2luYWxfc2NvcmUgIT09IGFjcm8uc2NvcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgcnVuOiBydW4sXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3JvX2lkeDogaWR4ICsgMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjcm9fZGVzY3JpcHRpb246IGFjcm8uZGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBzY29yZTogYWNyby5zY29yZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9yaWdpbmFsX3Njb3JlOiBhY3JvLm9yaWdpbmFsX3Njb3JlLFxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8vIFJlbmRlcmluZ1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS50b3VyID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gPExvYWRlciAvPlxuICAgICAgICB9XG4gICAgICAgIGxldCBkaXNjaXBsaW5lX2p1ZGdlcyA9IHRoaXMuc3RhdGUudG91ci5kaXNjaXBsaW5lLmRpc2NpcGxpbmVfanVkZ2VzO1xuICAgICAgICBsZXQgcm93cyA9IHRoaXMuc3RhdGUudG91ci5ydW5zLm1hcChmdW5jdGlvbihydW4pIHtcbiAgICAgICAgICAgIHJldHVybiA8VG91ckFkbWluU2NvcmVzUm93XG4gICAgICAgICAgICAgICAgcmVhZE9ubHk9eyB0aGlzLnN0YXRlLnRvdXIuZmluYWxpemVkIH1cbiAgICAgICAgICAgICAgICBrZXk9eyBydW4uaWQgfVxuICAgICAgICAgICAgICAgIHJ1bj17IHJ1biB9XG4gICAgICAgICAgICAgICAgc2NvcmluZ19zeXN0ZW1fbmFtZT17IHRoaXMuc3RhdGUudG91ci5zY29yaW5nX3N5c3RlbV9uYW1lIH1cbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2p1ZGdlcz17IGRpc2NpcGxpbmVfanVkZ2VzIH0gLz5cbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgbGV0IGp1ZGdlc19oZWFkZXIgPSBkaXNjaXBsaW5lX2p1ZGdlcy5tYXAoZnVuY3Rpb24oZGlzY2lwbGluZV9qdWRnZSkge1xuICAgICAgICAgICAgLy8gVE9ETzogbW92ZSByb2xlIHN0YWZmIHRvIHNjb3Jpbmcgc3lzdGVtIGxvZ2ljXG4gICAgICAgICAgICByZXR1cm4gPHRoIGNsYXNzTmFtZT1cImp1ZGdlXCIga2V5PXsgZGlzY2lwbGluZV9qdWRnZS5pZCB9PlxuICAgICAgICAgICAgICAgIHsgZGlzY2lwbGluZV9qdWRnZS5qdWRnZS5udW1iZXIgKyAoZGlzY2lwbGluZV9qdWRnZS5yb2xlID09PSBcImFjcm9fanVkZ2VcIiA/IFwiKlwiIDogXCJcIikgfVxuICAgICAgICAgICAgPC90aD47XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cInRvdXItYWRtaW5cIj5cbiAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJib3JkZXJlZC10YWJsZVwiPlxuICAgICAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImhlYXRcIj57IF8oXCJqdWRnaW5nLmxhYmVscy5oZWF0XCIpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cIm51bWJlclwiPnsgXyhcImp1ZGdpbmcubGFiZWxzLm51bWJlclwiKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJuYW1lXCI+eyBfKFwianVkZ2luZy5sYWJlbHMucGFydGljaXBhbnRfbmFtZVwiKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJhY3JvYmF0aWNzXCI+eyBfKFwianVkZ2luZy5sYWJlbHMuYWNyb2JhdGljc1wiKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwZXJmb3JtZWRcIj57IF8oXCJqdWRnaW5nLmxhYmVscy5wZXJmb3JtZWRcIikgfTwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwidG90YWxcIj57IF8oXCJqdWRnaW5nLmxhYmVscy50b3RhbF9zY29yZVwiKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsganVkZ2VzX2hlYWRlciB9XG4gICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgIHsgcm93cyB9XG4gICAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbn1cbiIsImltcG9ydCB7IF8gfSBmcm9tIFwiaTEwbi9sb2FkZXJcIjtcbmltcG9ydCB7IEFwaSB9IGZyb20gXCJzZXJ2ZXIvYXBpXCI7XG5pbXBvcnQgeyBzdG9yYWdlIH0gZnJvbSBcInNlcnZlci9zdG9yYWdlXCI7XG5pbXBvcnQgeyBtZXNzYWdlX2Rpc3BhdGNoZXIgfSBmcm9tIFwic2VydmVyL21lc3NhZ2VfZGlzcGF0Y2hlclwiO1xuaW1wb3J0IHsgTG9hZGVyIH0gZnJvbSBcInVpL2NvbXBvbmVudHNcIjtcbmltcG9ydCB7IFByaW50YWJsZSB9IGZyb20gXCJ1aS9wcmludGFibGVcIjtcbmltcG9ydCB7IERvY3ggfSBmcm9tIFwiY29tbW9uL2RvY3hcIjtcblxuaW1wb3J0IHsgVG91clJlc3VsdHNUYWJsZSwgVG91clJlc3VsdHNTZW1pVmVyYm9zZVRhYmxlLCBUb3VyUmVzdWx0c1ZlcmJvc2VUYWJsZSB9IGZyb20gXCIuL3Jvc2ZhcnIvdG91cl9yZXN1bHRzXCI7XG5cblxuZXhwb3J0IGNsYXNzIFRvdXJSZXN1bHRzQnV0dG9ucyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc2lnbmFsKG1lc3NhZ2UpIHtcbiAgICAgICAgcmV0dXJuICgoKSA9PiB0aGlzLnByb3BzLm9uU2lnbmFsKG1lc3NhZ2UpKS5iaW5kKHRoaXMpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2PlxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnlcIiBvbkNsaWNrPXsgdGhpcy5zaWduYWwoXCJkb2N4XCIpIH0+XG4gICAgICAgICAgICAgICAgRE9DWFxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRvdXJSZXN1bHRzQm9keSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgICAvLyBJbml0aWFsaXphdGlvblxuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgdG91cjogbnVsbCxcbiAgICAgICAgICAgIHJlc3VsdHM6IG51bGwsXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5UT1VSX1NDSEVNQSA9IHtcbiAgICAgICAgICAgIGRpc2NpcGxpbmU6IHtcbiAgICAgICAgICAgICAgICBjb21wZXRpdGlvbjoge30sXG4gICAgICAgICAgICAgICAgZGlzY2lwbGluZV9qdWRnZXM6IHtcbiAgICAgICAgICAgICAgICAgICAganVkZ2U6IHt9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcnVuczoge1xuICAgICAgICAgICAgICAgIGFjcm9iYXRpY3M6IHt9LFxuICAgICAgICAgICAgICAgIHNjb3Jlczoge30sXG4gICAgICAgICAgICAgICAgcGFydGljaXBhbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgY2x1Yjoge30sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICAgICAgdGhpcy5zdG9yYWdlID0gc3RvcmFnZS5nZXREb21haW4oXCJyZXN1bHRzX1wiICsgdGhpcy5wcm9wcy50b3VyX2lkKTtcbiAgICAgICAgdGhpcy5yZWxvYWRfbGlzdGVuZXIgPSBtZXNzYWdlX2Rpc3BhdGNoZXIuYWRkTGlzdGVuZXIoXCJyZWxvYWRfZGF0YVwiLCB0aGlzLmxvYWREYXRhLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmRiX3VwZGF0ZV9saXN0ZW5lciA9IG1lc3NhZ2VfZGlzcGF0Y2hlci5hZGRMaXN0ZW5lcihcImRiX3VwZGF0ZVwiLCB0aGlzLnJlbG9hZEZyb21TdG9yYWdlLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLnJlc3VsdHNfY2hhbmdlX2xpc3RlbmVyID0gbWVzc2FnZV9kaXNwYXRjaGVyLmFkZExpc3RlbmVyKFwidG91cl9yZXN1bHRzX2NoYW5nZWQgcmVsb2FkX2RhdGFcIiwgZnVuY3Rpb24obWVzc2FnZSkge1xuICAgICAgICAgICAgaWYgKCFtZXNzYWdlIHx8IG1lc3NhZ2UudG91cl9pZCA9PT0gdGhpcy5wcm9wcy50b3VyX2lkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkUmVzdWx0cygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmxvYWREYXRhKCk7XG4gICAgICAgIHRoaXMubG9hZFJlc3VsdHMoKTtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuYXV0b0RvY3gpIHtcbiAgICAgICAgICAgIGxldCBpbnRlcnZhbF9pZCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5yZWZzLmNvbnRlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbF9pZCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlRG9jeCh0aGlzLnByb3BzLmF1dG9Eb2N4LmZpbGVuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5hdXRvRG9jeC5jYWxsYmFjayh0aGlzLnByb3BzLmF1dG9Eb2N4LmZpbGVuYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCA1MDApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICBtZXNzYWdlX2Rpc3BhdGNoZXIucmVtb3ZlTGlzdGVuZXIodGhpcy5yZWxvYWRfbGlzdGVuZXIpO1xuICAgICAgICBtZXNzYWdlX2Rpc3BhdGNoZXIucmVtb3ZlTGlzdGVuZXIodGhpcy5kYl91cGRhdGVfbGlzdGVuZXIpO1xuICAgICAgICBtZXNzYWdlX2Rpc3BhdGNoZXIucmVtb3ZlTGlzdGVuZXIodGhpcy5yZXN1bHRzX2NoYW5nZV9saXN0ZW5lcik7XG4gICAgICAgIHN0b3JhZ2UuZGVsRG9tYWluKFwicmVzdWx0c19cIiArIHRoaXMucHJvcHMudG91cl9pZCk7XG4gICAgfVxuICAgIHJlbG9hZEZyb21TdG9yYWdlKCkge1xuICAgICAgICBsZXQgc2VyaWFsaXplZCA9IHRoaXMuc3RvcmFnZS5nZXQoXCJUb3VyXCIpXG4gICAgICAgICAgICAuYnlfaWQodGhpcy5wcm9wcy50b3VyX2lkKVxuICAgICAgICAgICAgLnNlcmlhbGl6ZSh0aGlzLlRPVVJfU0NIRU1BKTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB0b3VyOiBzZXJpYWxpemVkLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgbG9hZFJlc3VsdHMoKSB7XG4gICAgICAgIEFwaShcInRvdXIuZ2V0X3Jlc3VsdHNcIiwge3RvdXJfaWQ6IHRoaXMucHJvcHMudG91cl9pZH0pXG4gICAgICAgIC5vblN1Y2Nlc3MoZnVuY3Rpb24obmV3X3Jlc3VsdHMpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIFwicmVzdWx0c1wiOiBuZXdfcmVzdWx0cyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5yZWxvYWRGcm9tU3RvcmFnZSgpO1xuICAgICAgICB9LmJpbmQodGhpcykpXG4gICAgICAgIC5zZW5kKCk7XG4gICAgfVxuICAgIGxvYWREYXRhKCkge1xuICAgICAgICBBcGkoXCJ0b3VyLmdldFwiLCB7IHRvdXJfaWQ6IHRoaXMucHJvcHMudG91cl9pZCwgY2hpbGRyZW46IHRoaXMuVE9VUl9TQ0hFTUF9KVxuICAgICAgICAgICAgLmFkZFRvREIoXCJUb3VyXCIsIHRoaXMucHJvcHMudG91cl9pZCwgdGhpcy5zdG9yYWdlKVxuICAgICAgICAgICAgLm9uU3VjY2Vzcyh0aGlzLnJlbG9hZEZyb21TdG9yYWdlLmJpbmQodGhpcykpXG4gICAgICAgICAgICAuc2VuZCgpO1xuICAgIH1cblxuICAgIC8vIExpc3RlbmVyc1xuXG4gICAgb25TaWduYWwobWVzc2FnZSkge1xuICAgICAgICBzd2l0Y2ggKG1lc3NhZ2UpIHtcbiAgICAgICAgY2FzZSBcImRvY3hcIjpcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlRG9jeCgpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlVua25vd24gbWVzc2FnZTpcIiwgbWVzc2FnZSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJlbmRlcmluZ1xuXG4gICAgcmVuZGVyTm9uRmluYWxpemVkV2FybmluZygpIHtcbiAgICAgICAgaWYgKCF0aGlzLnN0YXRlLnRvdXIuZmluYWxpemVkKSB7XG4gICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJhbGVydCBhbGVydC1kYW5nZXJcIj57IF8oXCJyZXN1bHRzLmFsZXJ0cy5ub3RfZmluYWxpemVkXCIpIH08L2Rpdj5cbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHJlYWN0L3NvcnQtY29tcFxuICAgICAgICBpZiAodGhpcy5zdGF0ZS50b3VyID09PSBudWxsIHx8IHRoaXMuc3RhdGUucmVzdWx0cyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIDxMb2FkZXIgLz5cbiAgICAgICAgfVxuICAgICAgICB2YXIgdGFibGUgPSBudWxsO1xuICAgICAgICBpZiAodGhpcy5wcm9wcy52ZXJib3NpdHkgPT09IFwiM1wiKSB7XG4gICAgICAgICAgICB0YWJsZSA9IDxUb3VyUmVzdWx0c1ZlcmJvc2VUYWJsZSB7Li4udGhpcy5zdGF0ZX0gLz5cbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLnZlcmJvc2l0eSA9PT0gXCIyXCIpIHtcbiAgICAgICAgICAgIHRhYmxlID0gPFRvdXJSZXN1bHRzU2VtaVZlcmJvc2VUYWJsZSB7Li4udGhpcy5zdGF0ZX0gLz5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRhYmxlID0gPFRvdXJSZXN1bHRzVGFibGUgey4uLnRoaXMuc3RhdGV9IC8+XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5yZW5kZXJlZCA9IHRydWU7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLnRhYmxlT25seSkge1xuICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwidG91ci1yZXN1bHRzXCIgcmVmPVwiY29udGVudFwiPlxuICAgICAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJOb25GaW5hbGl6ZWRXYXJuaW5nKCkgfVxuICAgICAgICAgICAgICAgIHsgdGFibGUgfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGJvZHkgPSA8ZGl2IGNsYXNzTmFtZT1cInRvdXItcmVzdWx0cyBwLWNvbnRlbnRcIiByZWY9XCJjb250ZW50XCI+XG4gICAgICAgICAgICB7IHRoaXMucmVuZGVyTm9uRmluYWxpemVkV2FybmluZygpIH1cbiAgICAgICAgICAgIHsgdGFibGUgfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMucHJpbnRhYmxlXG4gICAgICAgICAgICA/IDxQcmludGFibGVcbiAgICAgICAgICAgICAgICByZWY9XCJwcmludGFibGVcIlxuICAgICAgICAgICAgICAgIGhlYWRlcj17IHRoaXMuc3RhdGUudG91ci5kaXNjaXBsaW5lLmNvbXBldGl0aW9uLm5hbWUgKyBcIiwgXCIgKyB0aGlzLnN0YXRlLnRvdXIuZGlzY2lwbGluZS5jb21wZXRpdGlvbi5kYXRlIH1cbiAgICAgICAgICAgICAgICB0aXRsZTE9eyBfKFwiYWRtaW4uaGVhZGVycy50b3VyX3Jlc3VsdHNcIikgfVxuICAgICAgICAgICAgICAgIHRpdGxlMj17IHRoaXMuc3RhdGUudG91ci5kaXNjaXBsaW5lLm5hbWUgfVxuICAgICAgICAgICAgICAgIHRpdGxlMz17IHRoaXMuc3RhdGUudG91ci5uYW1lIH1cbiAgICAgICAgICAgICAgICBib2R5PXsgYm9keSB9IC8+XG4gICAgICAgICAgICA6IGJvZHk7XG4gICAgfVxuICAgIGNyZWF0ZURvY3goZmlsZW5hbWU9XCJ0b3VyLXJlc3VsdHMuZG9jeFwiKSB7XG4gICAgICAgIERvY3goZmlsZW5hbWUpXG4gICAgICAgICAgICAuc2V0TWFyZ2lucyhbMTAsIDEwLCAxNSwgMTBdKVxuICAgICAgICAgICAgLnNldEhlYWRlcih0aGlzLnN0YXRlLnRvdXIuZGlzY2lwbGluZS5jb21wZXRpdGlvbi5uYW1lICsgXCIsIFwiICsgdGhpcy5zdGF0ZS50b3VyLmRpc2NpcGxpbmUuY29tcGV0aXRpb24uZGF0ZSlcbiAgICAgICAgICAgIC5zZXRUaXRsZTEoXyhcImFkbWluLmhlYWRlcnMudG91cl9yZXN1bHRzXCIpKVxuICAgICAgICAgICAgLnNldFRpdGxlMih0aGlzLnN0YXRlLnRvdXIuZGlzY2lwbGluZS5uYW1lKVxuICAgICAgICAgICAgLnNldFRpdGxlMyh0aGlzLnN0YXRlLnRvdXIubmFtZSlcbiAgICAgICAgICAgIC5zZXRCb2R5KFJlYWN0RE9NLmZpbmRET01Ob2RlKHRoaXMucmVmcy5jb250ZW50KS5pbm5lckhUTUwpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuYm9yZGVyZWQtdGFibGVcIiwgXCJmb250LXNpemVcIiwgdGhpcy5wcm9wcy52ZXJib3NpdHkgPT09IFwiMVwiID8gXCIxMnB0XCIgOiBcIjlwdFwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLmJvcmRlcmVkLXRhYmxlIC5hY3JvLXRhYmxlIHRkXCIsIFwiZm9udC1zaXplXCIsIFwiOXB0XCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuYm9yZGVyZWQtdGFibGUgLmFjcm8tdGFibGUgdGRcIiwgXCJwYWRkaW5nXCIsIFwiMCAzcHRcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5ib3JkZXJlZC10YWJsZSAuYWNyby10YWJsZSB0ZFwiLCBcImJvcmRlclwiLCBcIjAuNXB0IHNvbGlkIGJsYWNrXCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuYm9yZGVyZWQtdGFibGUgLnNjb3JlLWJyZWFrZG93biB0ZCwgLmJvcmRlcmVkLXRhYmxlIC5zY29yZS1icmVha2Rvd24gdGhcIiwgXCJmb250LXNpemVcIiwgXCI5cHRcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5ib3JkZXJlZC10YWJsZSAuc2NvcmUtYnJlYWtkb3duIHRkLCAuYm9yZGVyZWQtdGFibGUgLnNjb3JlLWJyZWFrZG93biB0aFwiLCBcImJvcmRlclwiLCBcIm5vbmVcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5ib3JkZXJlZC10YWJsZSAuc2NvcmUtYnJlYWtkb3duIHRoXCIsIFwicGFkZGluZ1wiLCBcIjAgMXB0IDAgMFwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLmJvcmRlcmVkLXRhYmxlIC5zY29yZS1icmVha2Rvd24gdGRcIiwgXCJwYWRkaW5nXCIsIFwiMCAwIDAgMXB0XCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuc2NvcmUtYnJlYWtkb3duIHRoXCIsIFwidGV4dC1hbGlnblwiLCBcInJpZ2h0XCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuc2NvcmUtYnJlYWtkb3duIHRkXCIsIFwidGV4dC1hbGlnblwiLCBcImxlZnRcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5zY29yZS1icmVha2Rvd24gdGRcIiwgXCJ0ZXh0LWFsaWduXCIsIFwibGVmdFwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLnNjb3JlLWJyZWFrZG93blwiLCBcIndpZHRoXCIsIFwiNTBwdFwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLmFkdmFuY2VzLWhlYWRlclwiLCBcImJhY2tncm91bmQtY29sb3JcIiwgXCIjZGRkXCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIudG90YWwtc2NvcmVcIiwgXCJmb250LXdlaWdodFwiLCBcImJvbGRcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5oZWFkX2p1ZGdlXCIsIFwid2lkdGhcIiwgXCI1JVwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLmRhbmNlX2p1ZGdlXCIsIFwid2lkdGhcIiwgXCI4JVwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLmFjcm9fanVkZ2VcIiwgXCJ3aWR0aFwiLCBcIjglXCIpXG4gICAgICAgICAgICAuc2F2ZSgpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IF8gfSBmcm9tIFwiaTEwbi9sb2FkZXJcIjtcbmltcG9ydCB7IEFwaSB9IGZyb20gXCJzZXJ2ZXIvYXBpXCI7XG5pbXBvcnQgeyBzdG9yYWdlIH0gZnJvbSBcInNlcnZlci9zdG9yYWdlXCI7XG5pbXBvcnQgeyBtZXNzYWdlX2Rpc3BhdGNoZXIgfSBmcm9tIFwic2VydmVyL21lc3NhZ2VfZGlzcGF0Y2hlclwiO1xuaW1wb3J0IHsgTWFuYWdlbWVudCB9IGZyb20gXCIuL21hbmFnZW1lbnQvbWFpblwiO1xuaW1wb3J0IHsgSnVkZ2luZyB9IGZyb20gXCIuL2p1ZGdpbmcvbWFpblwiO1xuaW1wb3J0IHsgU2VydmljZSB9IGZyb20gXCIuL3NlcnZpY2UvbWFpblwiO1xuaW1wb3J0IHsgTG9hZGVyIH0gZnJvbSBcInVpL2NvbXBvbmVudHNcIjtcblxuXG5leHBvcnQgY2xhc3MgQWRtaW4gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gICAgLy8gSW50aWFsaXphdGlvblxuXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgYWN0aXZlX2FwcDogdGhpcy5nZXRBY3RpdmVBcHBGcm9tSGFzaCgpLFxuICAgICAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgfTtcbiAgICAgICAgbWVzc2FnZV9kaXNwYXRjaGVyLmFkZExpc3RlbmVyKFwiZGJfdXBkYXRlXCIsIHRoaXMucmVsb2FkRnJvbVN0b3JhZ2UuYmluZCh0aGlzKSk7XG4gICAgICAgIG1lc3NhZ2VfZGlzcGF0Y2hlci5hZGRMaXN0ZW5lcihcInJlbG9hZF9kYXRhXCIsIHRoaXMubG9hZERhdGEuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMubG9hZERhdGEoKTtcbiAgICB9XG4gICAgcmVsb2FkRnJvbVN0b3JhZ2UoKSB7XG4gICAgICAgIHZhciBTQ0hFTUEgPSB7XG4gICAgICAgICAgICBjbHViczoge30sXG4gICAgICAgICAgICBqdWRnZXM6IHt9LFxuICAgICAgICAgICAgcGxhbjoge30sXG4gICAgICAgICAgICBkaXNjaXBsaW5lczoge1xuICAgICAgICAgICAgICAgIGRpc2NpcGxpbmVfanVkZ2VzOiB7XG4gICAgICAgICAgICAgICAgICAgIGp1ZGdlOiB7fSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHRvdXJzOiB7fSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoXG4gICAgICAgICAgICBzdG9yYWdlLmdldChcIkNvbXBldGl0aW9uXCIpXG4gICAgICAgICAgICAgICAgLmJ5X2lkKHRoaXMucHJvcHMuY29tcGV0aXRpb25faWQpXG4gICAgICAgICAgICAgICAgLnNlcmlhbGl6ZShTQ0hFTUEpKTtcbiAgICB9XG4gICAgbG9hZERhdGEoKSB7XG4gICAgICAgIEFwaShcImNvbXBldGl0aW9uLmdldFwiLCB7XG4gICAgICAgICAgICBjb21wZXRpdGlvbl9pZDogdGhpcy5wcm9wcy5jb21wZXRpdGlvbl9pZCxcbiAgICAgICAgICAgIGNoaWxkcmVuOiB7XG4gICAgICAgICAgICAgICAgY2x1YnM6IHt9LFxuICAgICAgICAgICAgICAgIGp1ZGdlczoge30sXG4gICAgICAgICAgICAgICAgcGxhbjoge30sXG4gICAgICAgICAgICAgICAgZGlzY2lwbGluZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgZGlzY2lwbGluZV9qdWRnZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGp1ZGdlOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdG91cnM6IHt9LFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLmFkZFRvREIoXCJDb21wZXRpdGlvblwiLCB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkKVxuICAgICAgICAub25TdWNjZXNzKHRoaXMucmVsb2FkRnJvbVN0b3JhZ2UuYmluZCh0aGlzKSlcbiAgICAgICAgLnNlbmQoKTtcbiAgICB9XG5cbiAgICAvLyBOYXZpZ2F0aW9uXG5cbiAgICBzZXRBcHAoYXBwKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aXZlX2FwcDogYXBwLFxuICAgICAgICB9KTtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBcIiNcIiArIGFwcDtcbiAgICB9XG4gICAgZ2V0QWN0aXZlQXBwRnJvbUhhc2goYXBwKSB7XG4gICAgICAgIGxldCBjaHVua3MgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHIoMSkuc3BsaXQoXCIvXCIpO1xuICAgICAgICBpZiAoY2h1bmtzWzBdICYmIFtcImp1ZGdpbmdcIiwgXCJtYW5hZ2VtZW50XCIsIFwic2VydmljZVwiXS5pbmRleE9mKGNodW5rc1swXSkgPj0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGNodW5rc1swXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gXCJtYW5hZ2VtZW50XCI7XG4gICAgfVxuXG4gICAgLy8gUmVuZGVyaW5nXG5cbiAgICByZW5kZXJBY3RpdmVBcHAoKSB7XG4gICAgICAgIHN3aXRjaCAodGhpcy5zdGF0ZS5hY3RpdmVfYXBwKSB7XG4gICAgICAgIGNhc2UgXCJqdWRnaW5nXCI6XG4gICAgICAgICAgICByZXR1cm4gPEp1ZGdpbmdcbiAgICAgICAgICAgICAgICBjb21wZXRpdGlvbl9wbGFuPXsgdGhpcy5zdGF0ZS5wbGFuIH1cbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lcz17IHRoaXMuc3RhdGUuZGlzY2lwbGluZXMgfSAvPjtcbiAgICAgICAgY2FzZSBcIm1hbmFnZW1lbnRcIjpcbiAgICAgICAgICAgIHJldHVybiA8TWFuYWdlbWVudFxuICAgICAgICAgICAgICAgIGRpc2NpcGxpbmVzPXsgdGhpcy5zdGF0ZS5kaXNjaXBsaW5lcyB9XG4gICAgICAgICAgICAgICAgY2x1YnM9eyB0aGlzLnN0YXRlLmNsdWJzIH1cbiAgICAgICAgICAgICAgICBqdWRnZXM9eyB0aGlzLnN0YXRlLmp1ZGdlcyB9XG4gICAgICAgICAgICAgICAgY29tcGV0aXRpb25fcGxhbj17IHRoaXMuc3RhdGUucGxhbiB9XG4gICAgICAgICAgICAgICAgY29tcGV0aXRpb25fbmFtZT17IHRoaXMuc3RhdGUubmFtZSB9XG4gICAgICAgICAgICAgICAgY29tcGV0aXRpb25fZGF0ZT17IHRoaXMuc3RhdGUuZGF0ZSB9XG4gICAgICAgICAgICAgICAgY29tcGV0aXRpb25faWQ9eyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkIH0gLz47XG4gICAgICAgIGNhc2UgXCJzZXJ2aWNlXCI6XG4gICAgICAgICAgICByZXR1cm4gPFNlcnZpY2VcbiAgICAgICAgICAgICAgICBjb21wZXRpdGlvbl9pZD17IHRoaXMucHJvcHMuY29tcGV0aXRpb25faWQgfVxuICAgICAgICAgICAgICAgIGRpc2NpcGxpbmVzPXsgdGhpcy5zdGF0ZS5kaXNjaXBsaW5lcyB9IC8+XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5uYW1lID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gPExvYWRlciAvPjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJ3cmFwcGVyXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlYWRlclwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FwdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICB7IHRoaXMuc3RhdGUubmFtZSB9ICh7dGhpcy5zdGF0ZS5kYXRlfSlcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJib2R5XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsZWZ0LWNvbCBub3NlbGVjdFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17IFwiYnV0dG9uXCIgKyAodGhpcy5zdGF0ZS5hY3RpdmVfYXBwID09PSBcIm1hbmFnZW1lbnRcIiA/IFwiIGFjdGl2ZVwiIDogXCJcIikgfSBvbkNsaWNrPXsgdGhpcy5zZXRBcHAuYmluZCh0aGlzLCBcIm1hbmFnZW1lbnRcIikgfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaWNvblwiPk08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGFiZWxcIj5NYW5hZ2VtZW50PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17IFwiYnV0dG9uXCIgKyAodGhpcy5zdGF0ZS5hY3RpdmVfYXBwID09PSBcImp1ZGdpbmdcIiA/IFwiIGFjdGl2ZVwiIDogXCJcIikgfSBvbkNsaWNrPXsgdGhpcy5zZXRBcHAuYmluZCh0aGlzLCBcImp1ZGdpbmdcIikgfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaWNvblwiPko8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGFiZWxcIj5KdWRnaW5nPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17IFwiYnV0dG9uXCIgKyAodGhpcy5zdGF0ZS5hY3RpdmVfYXBwID09PSBcInNlcnZpY2VcIiA/IFwiIGFjdGl2ZVwiIDogXCJcIikgfSBvbkNsaWNrPXsgdGhpcy5zZXRBcHAuYmluZCh0aGlzLCBcInNlcnZpY2VcIikgfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaWNvblwiPlM8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGFiZWxcIj5TZXJ2aWNlPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlclwiPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJvdHRvbS1jZWxsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJidG4tYmFja1wiIGhyZWY9XCIvXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4uYnV0dG9ucy50b19zdGFydF9wYWdlXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgeyB0aGlzLnJlbmRlckFjdGl2ZUFwcCgpIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG4iLCJpbXBvcnQgeyBfIH0gZnJvbSBcImkxMG4vbG9hZGVyXCI7XG5pbXBvcnQgeyBBcGkgfSBmcm9tIFwic2VydmVyL2FwaVwiO1xuaW1wb3J0IHsgc2hvd0NvbmZpcm0gfSBmcm9tIFwidWkvZGlhbG9nc1wiO1xuXG5cbmV4cG9ydCBjbGFzcyBDbHVicyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgY3JlYXRpbmc6IGZhbHNlLFxuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlclRhYmxlKCkge1xuICAgICAgICBsZXQgcm93cyA9IHRoaXMucHJvcHMuY2x1YnMubWFwKGZ1bmN0aW9uKGNsdWIpIHtcbiAgICAgICAgICAgIHJldHVybiA8Q2x1YlJvd1xuICAgICAgICAgICAgICAgIGtleT17IGNsdWIuaWQgfVxuICAgICAgICAgICAgICAgIGNsdWI9eyBjbHViIH0gLz47XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cIm1hbmFnZS1jbHVic1wiPlxuICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInRhYmxlIHRhYmxlLXN0cmlwZWRcIj5cbiAgICAgICAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJuYW1lXCI+eyBfKFwibW9kZWxzLmNsdWIubmFtZVwiKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJjaXR5XCI+eyBfKFwibW9kZWxzLmNsdWIuY2l0eVwiKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJleHRlcm5hbC1pZFwiPnsgXyhcIm1vZGVscy5jbHViLmV4dGVybmFsX2lkXCIpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImRlbGV0ZVwiPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgIHsgcm93cyB9XG4gICAgICAgICAgICAgICAgICAgIDxDbHViQ3JlYXRpb25Sb3cgY29tcGV0aXRpb25faWQ9eyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkIH0gLz5cbiAgICAgICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiYXBwLWNvbnRlbnRcIj5cbiAgICAgICAgICAgIDxoZWFkZXIgY2xhc3NOYW1lPVwiYXBwLWhlYWRlclwiPlxuICAgICAgICAgICAgICAgIDxoMT57IF8oXCJhZG1pbi5oZWFkZXJzLmNsdWJzX21hbmFnZW1lbnRcIikgfTwvaDE+XG4gICAgICAgICAgICA8L2hlYWRlcj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYXBwLWJvZHlcIj5cbiAgICAgICAgICAgICAgICB7IHRoaXMucmVuZGVyVGFibGUoKSB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+O1xuICAgIH1cbn1cblxuY2xhc3MgQ2x1YkVkaXRvclJvdyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc2VydGlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMuX25hbWUudmFsdWUsXG4gICAgICAgICAgICBjaXR5OiB0aGlzLl9jaXR5LnZhbHVlLFxuICAgICAgICAgICAgZXh0ZXJuYWxfaWQ6IHRoaXMuX2V4dGVybmFsX2lkLnZhbHVlLFxuICAgICAgICB9XG4gICAgfVxuICAgIG9uU3VibWl0KGV2ZW50KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGlmICghdGhpcy5wcm9wcy5uZXdDbHViKSB7XG4gICAgICAgICAgICBBcGkoXCJjbHViLnNldFwiLCB7XG4gICAgICAgICAgICAgICAgY2x1Yl9pZDogdGhpcy5wcm9wcy5jbHViLmlkLFxuICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMuc2VydGlhbGl6ZSgpLFxuICAgICAgICAgICAgfSkub25TdWNjZXNzKHRoaXMucHJvcHMuc3RvcEVkaXRpbmcpLnNlbmQoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIEFwaShcImNsdWIuY3JlYXRlXCIsIHtcbiAgICAgICAgICAgICAgICBjb21wZXRpdGlvbl9pZDogdGhpcy5wcm9wcy5jb21wZXRpdGlvbl9pZCxcbiAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLnNlcnRpYWxpemUoKSxcbiAgICAgICAgICAgIH0pLm9uU3VjY2Vzcyh0aGlzLnByb3BzLnN0b3BFZGl0aW5nKS5zZW5kKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPHRyIGNsYXNzTmFtZT17IFwiZWRpdG9yXCIgKyAodGhpcy5wcm9wcy5uZXdDbHViID8gXCIgY3JlYXRlXCIgOiBcIlwiICkgfT5cbiAgICAgICAgICAgIDx0ZCBjb2xTcGFuPVwiNFwiPlxuICAgICAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXsgdGhpcy5vblN1Ym1pdC5iaW5kKHRoaXMpIH0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93c1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbWQtNVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgXyhcIm1vZGVscy5jbHViLm5hbWVcIikgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17IGZ1bmN0aW9uKGUpIHsgaWYgKGUpIHsgZS5zZWxlY3QoKTsgdGhpcy5fbmFtZSA9IGU7IH0gfS5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXsgdGhpcy5wcm9wcy5jbHViLm5hbWUgfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLW1kLTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiZnVsbC13aWR0aFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IF8oXCJtb2RlbHMuY2x1Yi5jaXR5XCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9eyAoZSkgPT4gZSAmJiAodGhpcy5fY2l0eSA9IGUpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXsgdGhpcy5wcm9wcy5jbHViLmNpdHkgfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLW1kLTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiZnVsbC13aWR0aFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IF8oXCJtb2RlbHMuY2x1Yi5leHRlcm5hbF9pZFwiKSB9PGJyIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPXsgKGUpID0+IGUgJiYgKHRoaXMuX2V4dGVybmFsX2lkID0gZSkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXsgdGhpcy5wcm9wcy5jbHViLmV4dGVybmFsX2lkIH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1tZC0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidXR0b25zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5XCI+eyBfKFwiZ2xvYmFsLmJ1dHRvbnMuc3VibWl0XCIpIH08L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gYnRuLWRhbmdlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsgdGhpcy5wcm9wcy5zdG9wRWRpdGluZyB9PnsgXyhcImdsb2JhbC5idXR0b25zLmRpc2NhcmRcIikgfTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZm9ybT5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+XG4gICAgfVxufVxuXG5jbGFzcyBDbHViUm93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBlZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGFydEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0b3BFZGl0aW5nKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGVkaXRpbmc6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgb25EZWxldGUoZXZlbnQpIHtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIHNob3dDb25maXJtKF8oXCJhZG1pbi5jb25maXJtcy5kZWxldGVfY2x1YlwiKSwgKCkgPT4ge1xuICAgICAgICAgICAgQXBpKFwiY2x1Yi5kZWxldGVcIiwge1xuICAgICAgICAgICAgICAgIGNsdWJfaWQ6IHRoaXMucHJvcHMuY2x1Yi5pZCxcbiAgICAgICAgICAgIH0pLm9uU3VjY2VzcygoKSA9PiBzd2FsLmNsb3NlKCkpLnNlbmQoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlbmRlckVkaXRvcigpIHtcbiAgICAgICAgcmV0dXJuIDxDbHViRWRpdG9yUm93XG4gICAgICAgICAgICBuZXdDbHViPXsgZmFsc2UgfVxuICAgICAgICAgICAgc3RvcEVkaXRpbmc9eyB0aGlzLnN0b3BFZGl0aW5nLmJpbmQodGhpcykgfVxuICAgICAgICAgICAgeyAuLi50aGlzLnByb3BzIH0gLz5cbiAgICB9XG4gICAgcmVuZGVyVmlld2VyKCkge1xuICAgICAgICBsZXQgYyA9IHRoaXMucHJvcHMuY2x1YjtcbiAgICAgICAgcmV0dXJuIDx0ciBjbGFzc05hbWU9XCJ2aWV3ZXJcIiBvbkNsaWNrPXsgdGhpcy5zdGFydEVkaXRpbmcuYmluZCh0aGlzKSB9PlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cIm5hbWVcIj57IGMubmFtZSB9PC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJjaXR5XCI+eyBjLmNpdHkgfTwvdGQ+XG4gICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwiZXh0ZXJuYWwtaWRcIj57IGMuZXh0ZXJuYWxfaWQgfTwvdGQ+XG4gICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwiZGVsZXRlXCI+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLWRhbmdlclwiIG9uQ2xpY2s9eyB0aGlzLm9uRGVsZXRlLmJpbmQodGhpcykgfT5YPC9idXR0b24+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICA8L3RyPjtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5lZGl0aW5nKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJFZGl0b3IoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlclZpZXdlcigpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5jbGFzcyBDbHViQ3JlYXRpb25Sb3cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGVkaXRpbmc6IGZhbHNlLFxuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXJ0RWRpdGluZygpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBlZGl0aW5nOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RvcEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZW5kZXJFZGl0b3IoKSB7XG4gICAgICAgIGxldCBlbXB0eV9kYXRhID0ge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwiXCIsXG4gICAgICAgICAgICBcImNpdHlcIjogXCJcIixcbiAgICAgICAgICAgIFwiZXh0ZXJuYWxfaWRcIjogXCJcIixcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPENsdWJFZGl0b3JSb3dcbiAgICAgICAgICAgIG5ld0NsdWJcbiAgICAgICAgICAgIHN0b3BFZGl0aW5nPXsgdGhpcy5zdG9wRWRpdGluZy5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgIGNsdWI9eyBlbXB0eV9kYXRhIH1cbiAgICAgICAgICAgIHsgLi4udGhpcy5wcm9wcyB9IC8+O1xuICAgIH1cbiAgICByZW5kZXJCdXR0b24oKSB7XG4gICAgICAgIHJldHVybiA8dHI+PHRkIGNvbFNwYW49XCI0XCI+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1kZWZhdWx0IGZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnN0YXJ0RWRpdGluZy5iaW5kKHRoaXMpIH0+eyBfKFwiYWRtaW4uYnV0dG9ucy5hZGRfY2x1YlwiKSB9PC9idXR0b24+XG4gICAgICAgIDwvdGQ+PC90cj5cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5lZGl0aW5nID8gdGhpcy5yZW5kZXJFZGl0b3IoKSA6IHRoaXMucmVuZGVyQnV0dG9uKCk7XG4gICAgfVxufVxuIiwiaW1wb3J0IHsgXyB9IGZyb20gXCJpMTBuL2xvYWRlclwiO1xuaW1wb3J0IHsgQXBpIH0gZnJvbSBcInNlcnZlci9hcGlcIjtcbmltcG9ydCB7IERvY3ggfSBmcm9tIFwiY29tbW9uL2RvY3hcIjtcblxuXG5leHBvcnQgY2xhc3MgQ29tcGV0aXRpb25QbGFuIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBjcmVhdGluZzogZmFsc2UsXG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2VuVG91cnMoKSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgdGhpcy5wcm9wcy5kaXNjaXBsaW5lcy5mb3JFYWNoKChkaXNjaXBsaW5lKSA9PlxuICAgICAgICAgICAgZGlzY2lwbGluZS50b3Vycy5mb3JFYWNoKCh0b3VyKSA9PlxuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IHRvdXIuaWQsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IGAke2Rpc2NpcGxpbmUubmFtZX0g4oCUICR7dG91ci5uYW1lfWAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2NpcGxpbmVfaWQ6IGRpc2NpcGxpbmUuaWQsXG4gICAgICAgICAgICAgICAgICAgIGRpc2NpcGxpbmVfbmFtZTogZGlzY2lwbGluZS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICB0b3VyX25hbWU6IHRvdXIubmFtZSxcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKVxuICAgICAgICApXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIHJlbmRlclRhYmxlKHRvdXJzKSB7XG4gICAgICAgIGxldCB0b3Vyc19jb3VudCA9IHt9O1xuICAgICAgICBsZXQgdG91cnNfaW5kZXggPSB7fTtcbiAgICAgICAgbGV0IGRpc2NpcGxpbmVzX2luZGV4ID0ge307XG4gICAgICAgIHRvdXJzLmZvckVhY2goKHRvdXIpID0+IHRvdXJzX2luZGV4W3RvdXIuaWRdID0gdG91cik7XG4gICAgICAgIHRoaXMucHJvcHMuaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgaWYgKGl0ZW0udG91cl9pZCkge1xuICAgICAgICAgICAgICAgIHRvdXJzX2NvdW50W2l0ZW0udG91cl9pZF0gPSB0b3Vyc19jb3VudFtpdGVtLnRvdXJfaWRdID8gdG91cnNfY291bnRbaXRlbS50b3VyX2lkXSArIDEgOiAxO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgbGV0IGRpc2NpcGxpbmVfY3Vyc29ycyA9IHt9O1xuICAgICAgICB0aGlzLnByb3BzLmRpc2NpcGxpbmVzLmZvckVhY2goKGRpc2NpcGxpbmUpID0+IGRpc2NpcGxpbmVfY3Vyc29yc1tkaXNjaXBsaW5lLmlkXSA9IDApO1xuICAgICAgICB0aGlzLnByb3BzLmRpc2NpcGxpbmVzLmZvckVhY2goKGRpc2NpcGxpbmUpID0+IGRpc2NpcGxpbmVzX2luZGV4W2Rpc2NpcGxpbmUuaWRdID0gZGlzY2lwbGluZSk7XG4gICAgICAgIGxldCByb3dzID0gdGhpcy5wcm9wcy5pdGVtcy5tYXAoKGl0ZW0pID0+IHtcbiAgICAgICAgICAgIGxldCBlcnJvciA9ICh0b3Vyc19jb3VudFtpdGVtLnRvdXJfaWRdIHx8IDApID4gMjtcbiAgICAgICAgICAgIGlmIChpdGVtLnRvdXJfaWQpIHtcbiAgICAgICAgICAgICAgICBsZXQgZGlzY2lwbGluZV9pZCA9IHRvdXJzX2luZGV4W2l0ZW0udG91cl9pZF0uZGlzY2lwbGluZV9pZDtcbiAgICAgICAgICAgICAgICBsZXQgdG91cl9pZHggPSBkaXNjaXBsaW5lX2N1cnNvcnNbZGlzY2lwbGluZV9pZF07XG4gICAgICAgICAgICAgICAgaWYgKCFkaXNjaXBsaW5lc19pbmRleFtkaXNjaXBsaW5lX2lkXS50b3Vyc1t0b3VyX2lkeF0gfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0udG91cl9pZCAhPT0gZGlzY2lwbGluZXNfaW5kZXhbZGlzY2lwbGluZV9pZF0udG91cnNbdG91cl9pZHhdLmlkKSB7XG4gICAgICAgICAgICAgICAgICAgIGVycm9yID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgZGlzY2lwbGluZXNfaW5kZXhbZGlzY2lwbGluZV9pZF0udG91cnMuZm9yRWFjaCgodG91ciwgaWR4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodG91ci5pZCA9PT0gaXRlbS50b3VyX2lkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG91cl9pZHggPSBpZHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2N1cnNvcnNbZGlzY2lwbGluZV9pZF0gPSB0b3VyX2lkeCArIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gPENvbXBldGl0aW9uUGxhbkl0ZW1Sb3dcbiAgICAgICAgICAgICAgICBrZXk9eyBpdGVtLmlkIH1cbiAgICAgICAgICAgICAgICBlcnJvcj17IGVycm9yIH1cbiAgICAgICAgICAgICAgICB0b3Vycz17IHRvdXJzIH1cbiAgICAgICAgICAgICAgICBpdGVtPXsgaXRlbSB9IC8+O1xuICAgICAgICB9KTtcbiAgICAgICAgbGV0IHVucGlja2VkX3RvdXJzID0gdG91cnMuZmlsdGVyKCh0b3VyKSA9PiAhdG91cnNfY291bnRbdG91ci5pZF0pO1xuICAgICAgICBsZXQgdW5waWNrZWRfdG91cnNfaHRtbCA9ICF1bnBpY2tlZF90b3Vycy5sZW5ndGggPyBudWxsIDpcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGg0PnsgXyhcImFkbWluLmhlYWRlcnMudW5waWNrZWRfdG91cnNcIikgfTwvaDQ+XG4gICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cInVucGlja2VkLXRvdXJzXCI+XG4gICAgICAgICAgICAgICAgICAgIHsgdW5waWNrZWRfdG91cnMubWFwKCh0b3VyKSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT1cIml0ZW1cIiBrZXk9eyB0b3VyLmlkIH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyB0b3VyLm5hbWUgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgKSB9XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDwvZGl2PjtcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwibWFuYWdlLWNvbXBldGl0aW9uLXBsYW5cIj5cbiAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSB0YWJsZS1zdHJpcGVkXCI+XG4gICAgICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwic3BcIj57IF8oXCJtb2RlbHMuY29tcGV0aXRpb25fcGxhbl9pdGVtLnNwXCIpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImRpc2NpcGxpbmVcIj57IF8oXCJtb2RlbHMuY29tcGV0aXRpb25fcGxhbl9pdGVtLmRpc2NpcGxpbmVcIikgfTwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwidG91clwiPnsgXyhcIm1vZGVscy5jb21wZXRpdGlvbl9wbGFuX2l0ZW0udG91clwiKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJlc3RpbWF0ZWRfYmVnaW5uaW5nXCI+eyBfKFwibW9kZWxzLmNvbXBldGl0aW9uX3BsYW5faXRlbS5lc3RpbWF0ZWRfYmVnaW5uaW5nXCIpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImVzdGltYXRlZF9kdXJhdGlvblwiPnsgXyhcIm1vZGVscy5jb21wZXRpdGlvbl9wbGFuX2l0ZW0uZXN0aW1hdGVkX2R1cmF0aW9uXCIpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImRlbGV0ZVwiPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgIHsgcm93cyB9XG4gICAgICAgICAgICAgICAgICAgIDxDb21wZXRpdGlvblBsYW5JdGVtQ3JlYXRpb25Sb3cgY29tcGV0aXRpb25faWQ9eyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkIH0gdG91cnM9eyB0b3VycyB9IC8+XG4gICAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgICAgICB7IHVucGlja2VkX3RvdXJzX2h0bWwgfVxuICAgICAgICA8L2Rpdj5cbiAgICB9XG4gICAgcmVuZGVyKCkgeyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSByZWFjdC9zb3J0LWNvbXBcbiAgICAgICAgbGV0IHRvdXJzID0gdGhpcy5nZW5Ub3VycygpO1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJhcHAtY29udGVudFwiPlxuICAgICAgICAgICAgPGhlYWRlciBjbGFzc05hbWU9XCJhcHAtaGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250cm9sc1wiPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiIG9uQ2xpY2s9eyAoKSA9PiB0aGlzLmNyZWF0ZURvY3goKSB9IGtleT1cImJ0bi1pbml0LXRvdXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIERPQ1hcbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGgxPnsgXyhcImFkbWluLmhlYWRlcnMuY29tcGV0aXRpb25fcGxhbl9tYW5hZ2VtZW50XCIpIH08L2gxPlxuICAgICAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFwcC1ib2R5XCI+XG4gICAgICAgICAgICAgICAgeyB0aGlzLnJlbmRlclRhYmxlKHRvdXJzKSB9XG4gICAgICAgICAgICAgICAgPFByaW50YWJsZUNvbXBldGl0aW9uUGxhbiByZWY9XCJwcmludGFibGVfY29tcGV0aXRpb25fcGxhblwiIHRvdXJzPXsgdG91cnMgfSB7Li4udGhpcy5wcm9wc30gLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj47XG4gICAgfVxuICAgIGNyZWF0ZURvY3goZmlsZW5hbWU9XCJwcm9ncmFtLmRvY3hcIikge1xuICAgICAgICBEb2N4KGZpbGVuYW1lKVxuICAgICAgICAgICAgLnNldE1hcmdpbnMoWzEwLCAxNSwgMTAsIDE1XSlcbiAgICAgICAgICAgIC5zZXRIZWFkZXIodGhpcy5wcm9wcy5jb21wZXRpdGlvbl9uYW1lICsgXCIsIFwiICsgdGhpcy5wcm9wcy5jb21wZXRpdGlvbl9kYXRlKVxuICAgICAgICAgICAgLnNldFRpdGxlMShfKFwiYWRtaW4uaGVhZGVycy5jb21wZXRpdGlvbl9wbGFuXCIpKVxuICAgICAgICAgICAgLnNldEJvZHkoUmVhY3RET00uZmluZERPTU5vZGUodGhpcy5yZWZzLnByaW50YWJsZV9jb21wZXRpdGlvbl9wbGFuKS5pbm5lckhUTUwpXG4gICAgICAgICAgICAuc2F2ZSgpO1xuICAgIH1cbn1cblxuY2xhc3MgUHJpbnRhYmxlQ29tcGV0aXRpb25QbGFuUm93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXJOYW1lKCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5pdGVtLnZlcmJvc2VfbmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIDx0ZCBjb2xTcGFuPVwiMlwiPjxwPjxzdHJvbmc+eyB0aGlzLnByb3BzLml0ZW0udmVyYm9zZV9uYW1lIH08L3N0cm9uZz48L3A+PC90ZD5cbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wcm9wcy5pdGVtLnRvdXJfaWQpIHtcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBcIlwiO1xuICAgICAgICAgICAgdGhpcy5wcm9wcy50b3Vycy5mb3JFYWNoKCh0b3VyKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRvdXIuaWQgPT09IHRoaXMucHJvcHMuaXRlbS50b3VyX2lkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHRvdXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHJldHVybiBbPHRkIGtleT1cIkRcIj48cD57IHJlc3VsdC5kaXNjaXBsaW5lX25hbWUgfTwvcD48L3RkPixcbiAgICAgICAgICAgICAgICAgICAgPHRkIGtleT1cIlRcIj48cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPnsgcmVzdWx0LnRvdXJfbmFtZSB9PC9wPjwvdGQ+XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPHRkIGNvbFNwYW49XCIyXCI+PHA+PC9wPjwvdGQ+XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIDx0cj5cbiAgICAgICAgICAgIDx0ZD48cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPnsgdGhpcy5wcm9wcy5pdGVtLmVzdGltYXRlZF9iZWdpbm5pbmcgfHwgPHNwYW4+Jm5ic3A7PC9zcGFuPiB9PC9wPjwvdGQ+XG4gICAgICAgICAgICB7IHRoaXMucmVuZGVyTmFtZSgpIH1cbiAgICAgICAgICAgIDx0ZD48cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPnsgdGhpcy5wcm9wcy5pdGVtLmVzdGltYXRlZF9kdXJhdGlvbiB8fCA8c3Bhbj4mbmJzcDs8L3NwYW4+IH08L3A+PC90ZD5cbiAgICAgICAgPC90cj5cbiAgICB9XG59XG5cbmNsYXNzIFByaW50YWJsZUNvbXBldGl0aW9uUGxhbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJwcmludC1vbmx5XCI+XG4gICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwiYm9yZGVyZWQtdGFibGVcIj5cbiAgICAgICAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD48cD57IF8oXCJtb2RlbHMuY29tcGV0aXRpb25fcGxhbl9pdGVtLmVzdGltYXRlZF9iZWdpbm5pbmdcIikgfTwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoPjxwPnsgXyhcIm1vZGVscy5jb21wZXRpdGlvbl9wbGFuX2l0ZW0uZGlzY2lwbGluZVwiKSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGg+PHA+eyBfKFwibW9kZWxzLmNvbXBldGl0aW9uX3BsYW5faXRlbS50b3VyXCIpIH08L3A+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD48cD57IF8oXCJtb2RlbHMuY29tcGV0aXRpb25fcGxhbl9pdGVtLmVzdGltYXRlZF9kdXJhdGlvblwiKSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5pdGVtcy5tYXAoKGl0ZW0pID0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8UHJpbnRhYmxlQ29tcGV0aXRpb25QbGFuUm93IGl0ZW09eyBpdGVtIH0gdG91cnM9eyB0aGlzLnByb3BzLnRvdXJzIH0ga2V5PXsgaXRlbS5pZCB9IC8+XG4gICAgICAgICAgICAgICAgICAgICkgfVxuICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG5cbmNsYXNzIENvbXBldGl0aW9uUGxhbkl0ZW1FZGl0b3JSb3cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHNlcnRpYWxpemUoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzcDogcGFyc2VJbnQodGhpcy5fc3AudmFsdWUpIHx8IDAsXG4gICAgICAgICAgICB0b3VyX2lkOiB0aGlzLl90b3VyX2lkLnZhbHVlID09PSBcIlwiID8gbnVsbCA6IHBhcnNlSW50KHRoaXMuX3RvdXJfaWQudmFsdWUpLFxuICAgICAgICAgICAgdmVyYm9zZV9uYW1lOiB0aGlzLl92ZXJib3NlX25hbWUudmFsdWUsXG4gICAgICAgICAgICBlc3RpbWF0ZWRfYmVnaW5uaW5nOiB0aGlzLl9lc3RpbWF0ZWRfYmVnaW5uaW5nLnZhbHVlLFxuICAgICAgICAgICAgZXN0aW1hdGVkX2R1cmF0aW9uOiB0aGlzLl9lc3RpbWF0ZWRfZHVyYXRpb24udmFsdWUsXG4gICAgICAgIH1cbiAgICB9XG4gICAgb25TdWJtaXQoZXZlbnQpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLm5ld0NvbXBldGl0aW9uUGxhbkl0ZW0pIHtcbiAgICAgICAgICAgIEFwaShcImNvbXBldGl0aW9uX3BsYW5faXRlbS5zZXRcIiwge1xuICAgICAgICAgICAgICAgIGNvbXBldGl0aW9uX3BsYW5faXRlbV9pZDogdGhpcy5wcm9wcy5pdGVtLmlkLFxuICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMuc2VydGlhbGl6ZSgpLFxuICAgICAgICAgICAgfSkub25TdWNjZXNzKHRoaXMucHJvcHMuc3RvcEVkaXRpbmcpLnNlbmQoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIEFwaShcImNvbXBldGl0aW9uX3BsYW5faXRlbS5jcmVhdGVcIiwge1xuICAgICAgICAgICAgICAgIGNvbXBldGl0aW9uX2lkOiB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkLFxuICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMuc2VydGlhbGl6ZSgpLFxuICAgICAgICAgICAgfSkub25TdWNjZXNzKHRoaXMucHJvcHMuc3RvcEVkaXRpbmcpLnNlbmQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8dHIgY2xhc3NOYW1lPXsgXCJlZGl0b3JcIiArICh0aGlzLnByb3BzLm5ld0NvbXBldGl0aW9uUGxhbkl0ZW0gPyBcIiBjcmVhdGVcIiA6IFwiXCIgKSB9PlxuICAgICAgICAgICAgPHRkIGNvbFNwYW49XCI2XCI+XG4gICAgICAgICAgICAgICAgPGZvcm0gb25TdWJtaXQ9eyB0aGlzLm9uU3VibWl0LmJpbmQodGhpcykgfT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1tZC0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBfKFwibW9kZWxzLmNvbXBldGl0aW9uX3BsYW5faXRlbS5zcFwiKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPXsgZnVuY3Rpb24oZSkgeyBpZiAoZSkgeyBlLnNlbGVjdCgpOyB0aGlzLl9zcCA9IGU7IH0gfS5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXsgdGhpcy5wcm9wcy5pdGVtLnNwIH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1tZC01XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBfKFwibW9kZWxzLmNvbXBldGl0aW9uX3BsYW5faXRlbS52ZXJib3NlX25hbWVcIikgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17IChlKSA9PiBlICYmICh0aGlzLl92ZXJib3NlX25hbWUgPSBlKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17IHRoaXMucHJvcHMuaXRlbS52ZXJib3NlX25hbWUgfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBfKFwibW9kZWxzLmNvbXBldGl0aW9uX3BsYW5faXRlbS50b3VyXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPXsgKGUpID0+IGUgJiYgKHRoaXMuX3RvdXJfaWQgPSBlKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17IHRoaXMucHJvcHMuaXRlbS50b3VyX2lkIHx8IFwiXCIgfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiXCI+LS0tLS0tLS0tLTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5wcm9wcy50b3Vycy5tYXAoKHRvdXIpID0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9eyB0b3VyLmlkIH0ga2V5PXsgdG91ci5pZCB9PnsgdG91ci5uYW1lIH08L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbWQtMlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgXyhcIm1vZGVscy5jb21wZXRpdGlvbl9wbGFuX2l0ZW0uZXN0aW1hdGVkX2JlZ2lubmluZ1wiKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPXsgKGUpID0+IGUgJiYgKHRoaXMuX2VzdGltYXRlZF9iZWdpbm5pbmcgPSBlKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17IHRoaXMucHJvcHMuaXRlbS5lc3RpbWF0ZWRfYmVnaW5uaW5nIH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgXyhcIm1vZGVscy5jb21wZXRpdGlvbl9wbGFuX2l0ZW0uZXN0aW1hdGVkX2R1cmF0aW9uXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9eyAoZSkgPT4gZSAmJiAodGhpcy5fZXN0aW1hdGVkX2R1cmF0aW9uID0gZSkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZnVsbC13aWR0aFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9eyB0aGlzLnByb3BzLml0ZW0uZXN0aW1hdGVkX2R1cmF0aW9uIH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1tZC0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidXR0b25zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5XCI+eyBfKFwiZ2xvYmFsLmJ1dHRvbnMuc3VibWl0XCIpIH08L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gYnRuLWRhbmdlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsgdGhpcy5wcm9wcy5zdG9wRWRpdGluZyB9PnsgXyhcImdsb2JhbC5idXR0b25zLmRpc2NhcmRcIikgfTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZm9ybT5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+XG4gICAgfVxufVxuXG5jbGFzcyBDb21wZXRpdGlvblBsYW5JdGVtUm93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBlZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGFydEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0b3BFZGl0aW5nKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGVkaXRpbmc6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgb25EZWxldGUoZXZlbnQpIHtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIEFwaShcImNvbXBldGl0aW9uX3BsYW5faXRlbS5kZWxldGVcIiwge1xuICAgICAgICAgICAgY29tcGV0aXRpb25fcGxhbl9pdGVtX2lkOiB0aGlzLnByb3BzLml0ZW0uaWQsXG4gICAgICAgIH0pLnNlbmQoKTtcbiAgICB9XG4gICAgZ2V0TmFtZSgpIHtcbiAgICAgICAgbGV0IGMgPSB0aGlzLnByb3BzLml0ZW07XG4gICAgICAgIGlmIChjLnZlcmJvc2VfbmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIDx0ZCBjb2xTcGFuPVwiMlwiPjxiPnsgYy52ZXJib3NlX25hbWUgfTwvYj48L3RkPjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcmVzdWx0ID0gPHRkIGNvbFNwYW49XCIyXCI+PC90ZD47XG4gICAgICAgIHRoaXMucHJvcHMudG91cnMuZm9yRWFjaCgodG91cikgPT4ge1xuICAgICAgICAgICAgaWYgKHRvdXIuaWQgPT09IGMudG91cl9pZCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IFs8dGQga2V5PVwiRFwiPnsgdG91ci5kaXNjaXBsaW5lX25hbWUgfTwvdGQ+LCA8dGQga2V5PVwiVFwiPnsgdG91ci50b3VyX25hbWUgfTwvdGQ+XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgcmVuZGVyRWRpdG9yKCkge1xuICAgICAgICByZXR1cm4gPENvbXBldGl0aW9uUGxhbkl0ZW1FZGl0b3JSb3dcbiAgICAgICAgICAgIG5ld0NvbXBldGl0aW9uUGxhbkl0ZW09eyBmYWxzZSB9XG4gICAgICAgICAgICBzdG9wRWRpdGluZz17IHRoaXMuc3RvcEVkaXRpbmcuYmluZCh0aGlzKSB9XG4gICAgICAgICAgICB7IC4uLnRoaXMucHJvcHMgfSAvPlxuICAgIH1cbiAgICByZW5kZXJWaWV3ZXIoKSB7XG4gICAgICAgIGxldCBjID0gdGhpcy5wcm9wcy5pdGVtO1xuICAgICAgICByZXR1cm4gPHRyIGNsYXNzTmFtZT17IFwidmlld2VyXCIgKyAodGhpcy5wcm9wcy5lcnJvciA/IFwiIGVycm9yXCIgOiBcIlwiKSB9IG9uQ2xpY2s9eyB0aGlzLnN0YXJ0RWRpdGluZy5iaW5kKHRoaXMpIH0+XG4gICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwic3BcIj57IGMuc3AgfTwvdGQ+XG4gICAgICAgICAgICB7IHRoaXMuZ2V0TmFtZSgpIH1cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJlc3RpbWF0ZWRfYmVnaW5uaW5nXCI+eyBjLmVzdGltYXRlZF9iZWdpbm5pbmcgfTwvdGQ+XG4gICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwiZXN0aW1hdGVkX2R1cmF0aW9uXCI+eyBjLmVzdGltYXRlZF9kdXJhdGlvbiB9PC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJkZWxldGVcIj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tZGFuZ2VyXCIgb25DbGljaz17IHRoaXMub25EZWxldGUuYmluZCh0aGlzKSB9Plg8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+O1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlLmVkaXRpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlckVkaXRvcigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyVmlld2VyKCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNsYXNzIENvbXBldGl0aW9uUGxhbkl0ZW1DcmVhdGlvblJvdyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhcnRFZGl0aW5nKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGVkaXRpbmc6IHRydWUsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdG9wRWRpdGluZygpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBlZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlbmRlckVkaXRvcigpIHtcbiAgICAgICAgbGV0IGVtcHR5X2RhdGEgPSB7XG4gICAgICAgICAgICBcInNwXCI6IFwiXCIsXG4gICAgICAgICAgICBcInZlcmJvc2VfbmFtZVwiOiBcIlwiLFxuICAgICAgICAgICAgXCJ0b3VyX2lkXCI6IG51bGwsXG4gICAgICAgICAgICBcImVzdGltYXRlZF9kdXJhdGlvblwiOiBcIlwiLFxuICAgICAgICAgICAgXCJlc3RpbWF0ZWRfYmVnaW5uaW5nXCI6IFwiXCIsXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxDb21wZXRpdGlvblBsYW5JdGVtRWRpdG9yUm93XG4gICAgICAgICAgICBuZXdDb21wZXRpdGlvblBsYW5JdGVtXG4gICAgICAgICAgICBzdG9wRWRpdGluZz17IHRoaXMuc3RvcEVkaXRpbmcuYmluZCh0aGlzKSB9XG4gICAgICAgICAgICBpdGVtPXsgZW1wdHlfZGF0YSB9XG4gICAgICAgICAgICB7IC4uLnRoaXMucHJvcHMgfSAvPjtcbiAgICB9XG4gICAgcmVuZGVyQnV0dG9uKCkge1xuICAgICAgICByZXR1cm4gPHRyPjx0ZCBjb2xTcGFuPVwiNlwiPlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tZGVmYXVsdCBmdWxsLXdpZHRoXCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsgdGhpcy5zdGFydEVkaXRpbmcuYmluZCh0aGlzKSB9PnsgXyhcImFkbWluLmJ1dHRvbnMuYWRkX2NvbXBldGl0aW9uX3BsYW5faXRlbVwiKSB9PC9idXR0b24+XG4gICAgICAgIDwvdGQ+PC90cj5cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5lZGl0aW5nID8gdGhpcy5yZW5kZXJFZGl0b3IoKSA6IHRoaXMucmVuZGVyQnV0dG9uKCk7XG4gICAgfVxufVxuIiwiaW1wb3J0IHsgXyB9IGZyb20gXCJpMTBuL2xvYWRlclwiO1xuaW1wb3J0IHsgQXBpIH0gZnJvbSBcInNlcnZlci9hcGlcIjtcbmltcG9ydCB7IHN0b3JhZ2UgfSBmcm9tIFwic2VydmVyL3N0b3JhZ2VcIjtcbmltcG9ydCB7IG1lc3NhZ2VfZGlzcGF0Y2hlciB9IGZyb20gXCJzZXJ2ZXIvbWVzc2FnZV9kaXNwYXRjaGVyXCI7XG5pbXBvcnQgeyBMb2FkZXIgfSBmcm9tIFwidWkvY29tcG9uZW50c1wiO1xuaW1wb3J0IHsgUHJpbnRhYmxlIH0gZnJvbSBcInVpL3ByaW50YWJsZVwiO1xuaW1wb3J0IHsgRG9jeCB9IGZyb20gXCJjb21tb24vZG9jeFwiO1xuaW1wb3J0IHsgRGlzY2lwbGluZVJlc3VsdHMgfSBmcm9tIFwiLi4vanVkZ2luZy9kaXNjaXBsaW5lX3Jlc3VsdHNcIjtcblxuXG5leHBvcnQgY2xhc3MgQ29tcGV0aXRpb25SZXBvcnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGNvbXBldGl0aW9uOiBudWxsLFxuICAgICAgICB9O1xuICAgICAgICBtZXNzYWdlX2Rpc3BhdGNoZXIuYWRkTGlzdGVuZXIoXCJkYl91cGRhdGVcIiwgdGhpcy5yZWxvYWRGcm9tU3RvcmFnZS5iaW5kKHRoaXMpKTtcbiAgICAgICAgbWVzc2FnZV9kaXNwYXRjaGVyLmFkZExpc3RlbmVyKFwicmVsb2FkX2RhdGFcIiwgdGhpcy5sb2FkRGF0YS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBzdG9yYWdlLmdldERvbWFpbihcInN0YXJ0X2xpc3RfXCIgKyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkKTtcbiAgICAgICAgdGhpcy5yZWxvYWRfbGlzdGVuZXIgPSBtZXNzYWdlX2Rpc3BhdGNoZXIuYWRkTGlzdGVuZXIoXCJyZWxvYWRfZGF0YVwiLCB0aGlzLmxvYWREYXRhLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmRiX3VwZGF0ZV9saXN0ZW5lciA9IG1lc3NhZ2VfZGlzcGF0Y2hlci5hZGRMaXN0ZW5lcihcImRiX3VwZGF0ZVwiLCB0aGlzLnJlbG9hZEZyb21TdG9yYWdlLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmxvYWREYXRhKCk7XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICBtZXNzYWdlX2Rpc3BhdGNoZXIucmVtb3ZlTGlzdGVuZXIodGhpcy5yZWxvYWRfbGlzdGVuZXIpO1xuICAgICAgICBtZXNzYWdlX2Rpc3BhdGNoZXIucmVtb3ZlTGlzdGVuZXIodGhpcy5kYl91cGRhdGVfbGlzdGVuZXIpO1xuICAgICAgICBzdG9yYWdlLmRlbERvbWFpbihcInN0YXJ0X2xpc3RfXCIgKyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkKTtcbiAgICB9XG4gICAgcmVsb2FkRnJvbVN0b3JhZ2UoKSB7XG4gICAgICAgIGxldCBkYXRhID0gdGhpcy5zdG9yYWdlLmdldChcIkNvbXBldGl0aW9uXCIpLmJ5X2lkKHRoaXMucHJvcHMuY29tcGV0aXRpb25faWQpLnNlcmlhbGl6ZSh7XG4gICAgICAgICAgICBkaXNjaXBsaW5lczoge30sXG4gICAgICAgICAgICBqdWRnZXM6IHt9LFxuICAgICAgICAgICAgY2x1YnM6IHtcbiAgICAgICAgICAgICAgICBwYXJ0aWNpcGFudHM6IHt9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgY29tcGV0aXRpb246IGRhdGEsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBsb2FkRGF0YSgpIHtcbiAgICAgICAgQXBpKFwiY29tcGV0aXRpb24uZ2V0XCIsIHtcbiAgICAgICAgICAgIGNvbXBldGl0aW9uX2lkOiB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkLFxuICAgICAgICAgICAgY2hpbGRyZW46IHtcbiAgICAgICAgICAgICAgICBjbHViczoge1xuICAgICAgICAgICAgICAgICAgICBwYXJ0aWNpcGFudHM6IHt9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZGlzY2lwbGluZXM6IHt9LFxuICAgICAgICAgICAgICAgIGp1ZGdlczoge30sXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5hZGRUb0RCKFwiQ29tcGV0aXRpb25cIiwgdGhpcy5wcm9wcy5jb21wZXRpdGlvbl9pZCwgdGhpcy5zdG9yYWdlKVxuICAgICAgICAub25TdWNjZXNzKHRoaXMucmVsb2FkRnJvbVN0b3JhZ2UuYmluZCh0aGlzKSlcbiAgICAgICAgLnNlbmQoKTtcbiAgICB9XG4gICAgcmVuZGVySW5mb1RhYmxlKCkge1xuICAgICAgICByZXR1cm4gPHRhYmxlIGNsYXNzTmFtZT1cImluZm9cIj48dGJvZHk+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInctNDBcIj48cCBjbGFzc05hbWU9XCJ0ZXh0LWxlZnRcIj57IF8oXCJhZG1pbi5sYWJlbHMuY29tcGV0aXRpb25fbmFtZVwiKSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctNjBcIj48cD48c3Ryb25nPnsgdGhpcy5zdGF0ZS5jb21wZXRpdGlvbi5uYW1lIH08L3N0cm9uZz48L3A+PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInctNDBcIj48cCBjbGFzc05hbWU9XCJ0ZXh0LWxlZnRcIj57IF8oXCJhZG1pbi5sYWJlbHMuY29tcGV0aXRpb25fZGF0ZVwiKSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctNjBcIj48cD48c3Ryb25nPnsgdGhpcy5zdGF0ZS5jb21wZXRpdGlvbi5kYXRlIH08L3N0cm9uZz48L3A+PC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5jb21wZXRpdGlvbi5pbmZvLm1hcCgocm93KSA9PlxuICAgICAgICAgICAgICAgICAgICA8dHIga2V5PXsgcm93WzBdIH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwidy00MFwiPjxwIGNsYXNzTmFtZT1cInRleHQtbGVmdFwiPnsgcm93WzBdIH08L3A+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJ3LTYwXCI+PHA+eyByb3dbMV0gfTwvcD48L3RkPlxuICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH1cbiAgICAgICAgPC90Ym9keT48L3RhYmxlPlxuICAgIH1cbiAgICByZW5kZXJDbHVicygpIHtcbiAgICAgICAgbGV0IGNsdWJzID0gdGhpcy5zdGF0ZS5jb21wZXRpdGlvbi5jbHVicy5maWx0ZXIoKGNsdWIpID0+IGNsdWIucGFydGljaXBhbnRzLmxlbmd0aCA+IDApXG4gICAgICAgIGxldCBjbHVic19kaWN0ID0ge31cbiAgICAgICAgbGV0IGNpdGllcyA9IFtdXG4gICAgICAgIGNsdWJzLmZvckVhY2goKGNsdWIpID0+IGNsdWJzX2RpY3RbY2x1Yi5jaXR5XSA9IFtdIClcbiAgICAgICAgY2x1YnMuZm9yRWFjaCgoY2x1YikgPT4gY2x1YnNfZGljdFtjbHViLmNpdHldLnB1c2goY2x1Yi5uYW1lKSApXG4gICAgICAgIGNsdWJzLmZvckVhY2goKGNsdWIpID0+IGNsdWJzX2RpY3RbY2x1Yi5jaXR5XS5zb3J0IClcbiAgICAgICAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoY2x1YnNfZGljdCkuZm9yRWFjaCgoY2l0eSkgPT4gY2l0aWVzLnB1c2goY2l0eSkpXG4gICAgICAgIGNpdGllcy5zb3J0KClcbiAgICAgICAgcmV0dXJuIDx0YWJsZSBjbGFzc05hbWU9XCJjbHVic1wiPjx0Ym9keT57XG4gICAgICAgICAgICBjaXRpZXMubWFwKChjaXR5KSA9PlxuICAgICAgICAgICAgICAgIDx0ciBrZXk9eyBjaXR5IH0gY2xhc3NOYW1lPVwidmEtdG9wXCI+XG4gICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJ3LTIwXCI+PHAgY2xhc3NOYW1lPVwidGV4dC1sZWZ0XCI+eyBjaXR5IH08L3A+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctODBcIj48cD57IGNsdWJzX2RpY3RbY2l0eV0uam9pbihcIiwgXCIpIH08L3A+PC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgKVxuICAgICAgICB9PC90Ym9keT48L3RhYmxlPjtcbiAgICB9XG4gICAgcmVuZGVySnVkZ2VzKCkge1xuICAgICAgICByZXR1cm4gPHRhYmxlIGNsYXNzTmFtZT1cImp1ZGdlc1wiPjx0Ym9keT57XG4gICAgICAgICAgICB0aGlzLnN0YXRlLmNvbXBldGl0aW9uLmp1ZGdlcy5tYXAoKGp1ZGdlKSA9PlxuICAgICAgICAgICAgICAgIDx0ciBrZXk9eyBqdWRnZS5pZCB9PlxuICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwidy00MFwiPjxwIGNsYXNzTmFtZT1cInRleHQtbGVmdFwiPnsganVkZ2Uucm9sZV9kZXNjcmlwdGlvbiB8fCBfKFwiZ2xvYmFsLnBocmFzZXMuanVkZ2VfblwiLCBqdWRnZS5udW1iZXIpIH08L3A+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctNjBcIj48cD57IGp1ZGdlLm5hbWUgfSwgeyBqdWRnZS5jYXRlZ29yeSB9PC9wPjwvdGQ+XG4gICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIClcbiAgICAgICAgfTwvdGJvZHk+PC90YWJsZT5cbiAgICB9XG4gICAgcmVuZGVyUmVzdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuY29tcGV0aXRpb24uZGlzY2lwbGluZXMubWFwKChpYykgPT5cbiAgICAgICAgICAgIDxkaXYga2V5PXsgaWMuaWQgfT5cbiAgICAgICAgICAgICAgICA8aDU+PHA+eyBpYy5uYW1lIH08L3A+PC9oNT5cbiAgICAgICAgICAgICAgICA8RGlzY2lwbGluZVJlc3VsdHNcbiAgICAgICAgICAgICAgICAgICAgZGlzY2lwbGluZV9pZD17IGljLmlkIH1cbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyZXI9XCJ0YWJsZVwiIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG4gICAgcmVuZGVyKCkgeyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSByZWFjdC9zb3J0LWNvbXBcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuY29tcGV0aXRpb24gPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiA8TG9hZGVyIC8+XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGJvZHkgPSA8ZGl2IGNsYXNzTmFtZT1cImNvbXBldGl0aW9uLXJlcG9ydFwiPlxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlckluZm9UYWJsZSgpIH1cbiAgICAgICAgICAgIDxoND48cD57IF8oXCJhZG1pbi5oZWFkZXJzLmNsdWJzXCIpIH08L3A+PC9oND5cbiAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJDbHVicygpIH1cbiAgICAgICAgICAgIDxoND48cD57IF8oXCJhZG1pbi5oZWFkZXJzLmp1ZGdlc1wiKSB9PC9wPjwvaDQ+XG4gICAgICAgICAgICB7IHRoaXMucmVuZGVySnVkZ2VzKCkgfVxuICAgICAgICAgICAgPGg0PjxwPnsgXyhcImFkbWluLmhlYWRlcnMuY29tcGV0aXRpb25fcmVzdWx0c1wiKSB9PC9wPjwvaDQ+XG4gICAgICAgICAgICB7IHRoaXMucmVuZGVyUmVzdWx0cygpIH1cbiAgICAgICAgPC9kaXY+O1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJhcHAtY29udGVudFwiPlxuICAgICAgICAgICAgPGhlYWRlciBjbGFzc05hbWU9XCJhcHAtaGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250cm9sc1wiPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiIG9uQ2xpY2s9eyAoKSA9PiB0aGlzLmNyZWF0ZURvY3goKSB9PkRPQ1g8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8aDE+eyBfKFwiYWRtaW4uaGVhZGVycy5jb21wZXRpdGlvbl9yZXBvcnRcIikgfTwvaDE+XG4gICAgICAgICAgICA8L2hlYWRlcj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYXBwLWJvZHlcIj5cbiAgICAgICAgICAgICAgICA8UHJpbnRhYmxlXG4gICAgICAgICAgICAgICAgICAgIHJlZj1cInByaW50YWJsZVwiXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlMT17IF8oXCJhZG1pbi5oZWFkZXJzLmNvbXBldGl0aW9uX3JlcG9ydFwiKSB9XG4gICAgICAgICAgICAgICAgICAgIGJvZHk9eyBib2R5IH0gLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG4gICAgY3JlYXRlRG9jeChmaWxlbmFtZT1cInJlcG9ydC5kb2N4XCIpIHtcbiAgICAgICAgRG9jeChmaWxlbmFtZSlcbiAgICAgICAgICAgIC5zZXRNYXJnaW5zKFsxMCwgMTUsIDEwLCAyNV0pXG4gICAgICAgICAgICAuc2V0VGl0bGUxKF8oXCJhZG1pbi5oZWFkZXJzLmNvbXBldGl0aW9uX3JlcG9ydFwiKSlcbiAgICAgICAgICAgIC5zZXRCb2R5KHRoaXMucmVmcy5wcmludGFibGUuZmV0Y2hQcmludGFibGVEYXRhKCkpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuc3BhY2VyIHRkXCIsIFwiaGVpZ2h0XCIsIFwiNXB0XCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIudG91ci1uYW1lXCIsIFwiYmFja2dyb3VuZFwiLCBcIiNkZGRcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5ib3JkZXJlZC10YWJsZSAuc3BvcnRzbWVuIHRkLCAuYm9yZGVyZWQtdGFibGUgLnNwb3J0c21lbiB0aFwiLCBcImJvcmRlclwiLCBcIm5vbmVcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5ib3JkZXJlZC10YWJsZSAuc3BvcnRzbWVuIHRkLCAuYm9yZGVyZWQtdGFibGUgLnNwb3J0c21lbiB0aFwiLCBcInBhZGRpbmdcIiwgXCIwXCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuc3BvcnRzbWVuXCIsIFwid2lkdGhcIiwgXCIxMDAlXCIpXG4gICAgICAgICAgICAuc2F2ZSgpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IF8gfSBmcm9tIFwiaTEwbi9sb2FkZXJcIjtcbmltcG9ydCB7IEFwaSB9IGZyb20gXCJzZXJ2ZXIvYXBpXCI7XG5pbXBvcnQgeyBzaG93RXJyb3IsIHNob3dDb25maXJtIH0gZnJvbSBcInVpL2RpYWxvZ3NcIjtcbmltcG9ydCB7IEdMIH0gZnJvbSBcImNvbW1vbi9kZWZpbml0aW9uc1wiO1xuaW1wb3J0IHsgY2xvbmUgfSBmcm9tIFwiY29tbW9uL3Rvb2xzXCI7XG5cblxuZXhwb3J0IGNsYXNzIERpc2NpcGxpbmVzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBjcmVhdGluZzogZmFsc2UsXG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyVGFibGUoKSB7XG4gICAgICAgIGxldCByb3dzID0gdGhpcy5wcm9wcy5kaXNjaXBsaW5lcy5tYXAoZnVuY3Rpb24oZGlzY2lwbGluZSkge1xuICAgICAgICAgICAgcmV0dXJuIDxEaXNjaXBsaW5lUm93XG4gICAgICAgICAgICAgICAga2V5PXsgZGlzY2lwbGluZS5pZCB9XG4gICAgICAgICAgICAgICAganVkZ2VzPXsgdGhpcy5wcm9wcy5qdWRnZXMgfVxuICAgICAgICAgICAgICAgIGRpc2NpcGxpbmU9eyBkaXNjaXBsaW5lIH1cbiAgICAgICAgICAgICAgICBhbGxfZGlzY2lwbGluZXM9eyB0aGlzLnByb3BzLmRpc2NpcGxpbmVzIH0gLz47XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cIm1hbmFnZS1kaXNjaXBsaW5lc1wiPlxuICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInRhYmxlIHRhYmxlLXN0cmlwZWRcIj5cbiAgICAgICAgICAgICAgICA8dGJvZHk+XG4gICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJuYW1lXCI+eyBfKFwibW9kZWxzLmRpc2NpcGxpbmUubmFtZVwiKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJzcFwiPnsgXyhcIm1vZGVscy5kaXNjaXBsaW5lLnNwXCIpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImV4dGVybmFsLWlkXCI+eyBfKFwibW9kZWxzLmRpc2NpcGxpbmUuZXh0ZXJuYWxfaWRcIikgfTwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwiZGVsZXRlXCI+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgeyByb3dzIH1cbiAgICAgICAgICAgICAgICAgICAgPERpc2NpcGxpbmVDcmVhdGlvblJvd1xuICAgICAgICAgICAgICAgICAgICAgICAganVkZ2VzPXsgdGhpcy5wcm9wcy5qdWRnZXMgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY29tcGV0aXRpb25faWQ9eyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkIH0gLz5cbiAgICAgICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiYXBwLWNvbnRlbnRcIj5cbiAgICAgICAgICAgIDxoZWFkZXIgY2xhc3NOYW1lPVwiYXBwLWhlYWRlclwiPlxuICAgICAgICAgICAgICAgIDxoMT57IF8oXCJhZG1pbi5oZWFkZXJzLmRpc2NpcGxpbmVzX21hbmFnZW1lbnRcIikgfTwvaDE+XG4gICAgICAgICAgICA8L2hlYWRlcj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYXBwLWJvZHlcIj5cbiAgICAgICAgICAgICAgICB7IHRoaXMucmVuZGVyVGFibGUoKSB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgfVxufVxuXG5jbGFzcyBEaXNjaXBsaW5lRWRpdG9yUm93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBkaXNjaXBsaW5lX2p1ZGdlczogcHJvcHMuZGlzY2lwbGluZS5kaXNjaXBsaW5lX2p1ZGdlcy5tYXAoZnVuY3Rpb24oZGopIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBqdWRnZV9pZDogZGouanVkZ2UuaWQsXG4gICAgICAgICAgICAgICAgICAgIHJvbGU6IGRqLnJvbGUsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBhZGREaXNjaXBsaW5lSnVkZ2UoKSB7XG4gICAgICAgIGxldCBkaXNjaXBsaW5lX2p1ZGdlcyA9IGNsb25lKHRoaXMuc3RhdGUuZGlzY2lwbGluZV9qdWRnZXMpO1xuICAgICAgICBsZXQgbmV3X2lkeCA9IGRpc2NpcGxpbmVfanVkZ2VzLmxlbmd0aDtcbiAgICAgICAgZGlzY2lwbGluZV9qdWRnZXMucHVzaCh7XG4gICAgICAgICAgICBqdWRnZV9pZDogdGhpcy5wcm9wcy5qdWRnZXNbMF0gJiYgdGhpcy5wcm9wcy5qdWRnZXNbMF0uaWQsXG4gICAgICAgICAgICByb2xlOiBHTC5qdWRnZV9yb2xlc1swXSxcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubGF0ZXN0X2FkZGVkID0gXCJqXCIgKyBuZXdfaWR4O1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGRpc2NpcGxpbmVfanVkZ2VzOiBkaXNjaXBsaW5lX2p1ZGdlcyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlbW92ZURpc2NpcGxpbmVKdWRnZShpZHgpIHtcbiAgICAgICAgbGV0IGRpc2NpcGxpbmVfanVkZ2VzID0gY2xvbmUodGhpcy5zdGF0ZS5kaXNjaXBsaW5lX2p1ZGdlcyk7XG4gICAgICAgIGRpc2NpcGxpbmVfanVkZ2VzLnNwbGljZShpZHgsIDEpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGRpc2NpcGxpbmVfanVkZ2VzOiBkaXNjaXBsaW5lX2p1ZGdlcyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHZhbGlkYXRlKCkge1xuICAgICAgICBsZXQgdXNlZF9qdWRnZXMgPSB7fTtcbiAgICAgICAgdGhpcy5zdGF0ZS5kaXNjaXBsaW5lX2p1ZGdlcy5mb3JFYWNoKGZ1bmN0aW9uKGRqKSB7XG4gICAgICAgICAgICBpZiAodXNlZF9qdWRnZXNbZGouanVkZ2VfaWRdKSB7XG4gICAgICAgICAgICAgICAgbGV0IGp1ZGdlID0gdGhpcy5wcm9wcy5qdWRnZXMuZmlsdGVyKChqKSA9PiBqLmlkID09PSBkai5qdWRnZV9pZClbMF07XG4gICAgICAgICAgICAgICAgdGhyb3cgXyhcImVycm9ycy5kaXNjaXBsaW5lX2p1ZGdlLnJlcGVhdGluZ19qdWRnZVwiLCBqdWRnZS5uYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHVzZWRfanVkZ2VzW2RqLmp1ZGdlX2lkXSA9IHRydWU7XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMuX25hbWUudmFsdWUsXG4gICAgICAgICAgICBzcDogdGhpcy5fc3AudmFsdWUsXG4gICAgICAgICAgICBkaXNjaXBsaW5lX2p1ZGdlczogdGhpcy5zdGF0ZS5kaXNjaXBsaW5lX2p1ZGdlcy5tYXAoZnVuY3Rpb24oZGopIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBqdWRnZV9pZDogcGFyc2VJbnQoZGouanVkZ2VfaWQpLFxuICAgICAgICAgICAgICAgICAgICByb2xlOiBkai5yb2xlLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGV4dGVybmFsX2lkOiB0aGlzLl9leHRlcm5hbF9pZC52YWx1ZSxcbiAgICAgICAgfVxuICAgIH1cbiAgICBvbkRpc2NpcGxpbmVKdWRnZUNoYW5nZShpZHgsIGZpZWxkLCBldmVudCkge1xuICAgICAgICBsZXQgZGlzY2lwbGluZV9qdWRnZXMgPSBjbG9uZSh0aGlzLnN0YXRlLmRpc2NpcGxpbmVfanVkZ2VzKTtcbiAgICAgICAgZGlzY2lwbGluZV9qdWRnZXNbaWR4XVtmaWVsZF0gPSBldmVudC50YXJnZXQudmFsdWU7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZGlzY2lwbGluZV9qdWRnZXM6IGRpc2NpcGxpbmVfanVkZ2VzLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgb25TdWJtaXQoZXZlbnQpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRoaXMudmFsaWRhdGUoKTtcbiAgICAgICAgICAgIGlmICghdGhpcy5wcm9wcy5uZXdEaXNjaXBsaW5lKSB7XG4gICAgICAgICAgICAgICAgQXBpKFwiZGlzY2lwbGluZS5zZXRcIiwge1xuICAgICAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2lkOiB0aGlzLnByb3BzLmRpc2NpcGxpbmUuaWQsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMuc2VyaWFsaXplKCksXG4gICAgICAgICAgICAgICAgfSkub25TdWNjZXNzKHRoaXMucHJvcHMuc3RvcEVkaXRpbmcpLnNlbmQoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgQXBpKFwiZGlzY2lwbGluZS5jcmVhdGVcIiwge1xuICAgICAgICAgICAgICAgICAgICBjb21wZXRpdGlvbl9pZDogdGhpcy5wcm9wcy5jb21wZXRpdGlvbl9pZCxcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogdGhpcy5zZXJpYWxpemUoKSxcbiAgICAgICAgICAgICAgICB9KS5vblN1Y2Nlc3ModGhpcy5wcm9wcy5zdG9wRWRpdGluZykuc2VuZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAgICAgc2hvd0Vycm9yKGV4KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8dHIgY2xhc3NOYW1lPXsgXCJlZGl0b3JcIiArICh0aGlzLnByb3BzLm5ld0Rpc2NpcGxpbmUgPyBcIiBjcmVhdGVcIiA6IFwiXCIgKSB9PlxuICAgICAgICAgICAgPHRkIGNvbFNwYW49XCI1XCI+XG4gICAgICAgICAgICAgICAgPGZvcm0gb25TdWJtaXQ9eyB0aGlzLm9uU3VibWl0LmJpbmQodGhpcykgfT5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLWxnLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiZnVsbC13aWR0aFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IF8oXCJtb2RlbHMuZGlzY2lwbGluZS5uYW1lXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9eyBmdW5jdGlvbihlKSB7IGlmIChlKSB7IHRoaXMuX25hbWUgPSBlOyB9IH0uYmluZCh0aGlzKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17IHRoaXMucHJvcHMuZGlzY2lwbGluZS5uYW1lIH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLWxnLTZcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBfKFwibW9kZWxzLmRpc2NpcGxpbmUuc3BcIikgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9eyAoZSkgPT4gZSAmJiAodGhpcy5fc3AgPSBlKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9eyB0aGlzLnByb3BzLmRpc2NpcGxpbmUuc3AgfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLWxnLTZcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBfKFwibW9kZWxzLmRpc2NpcGxpbmUuZXh0ZXJuYWxfaWRcIikgfTxiciAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9eyAoZSkgPT4gZSAmJiAodGhpcy5fZXh0ZXJuYWxfaWQgPSBlKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9eyB0aGlzLnByb3BzLmRpc2NpcGxpbmUuZXh0ZXJuYWxfaWQgfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLWxnLTZcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiZnVsbC13aWR0aFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IF8oXCJtb2RlbHMuZGlzY2lwbGluZS5kaXNjaXBsaW5lX2p1ZGdlc1wiKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHRoaXMuc3RhdGUuZGlzY2lwbGluZV9qdWRnZXMubWFwKChkaiwgaWR4KSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17IGlkeCB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCB2YWx1ZT17IGRqLmp1ZGdlX2lkIH0gY2xhc3NOYW1lPVwianVkZ2VcIiBvbkNoYW5nZT17IHRoaXMub25EaXNjaXBsaW5lSnVkZ2VDaGFuZ2UuYmluZCh0aGlzLCBpZHgsIFwianVkZ2VfaWRcIikgfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMuanVkZ2VzLm1hcCgoaikgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT17IGouaWQgfSBrZXk9eyBqLmlkIH0+eyBqLm5hbWUgfTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IHZhbHVlPXsgZGoucm9sZSB9IGNsYXNzTmFtZT1cImp1ZGdlLXJvbGVcIiBvbkNoYW5nZT17IHRoaXMub25EaXNjaXBsaW5lSnVkZ2VDaGFuZ2UuYmluZCh0aGlzLCBpZHgsIFwicm9sZVwiKSB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgR0wuanVkZ2Vfcm9sZXMubWFwKChqcikgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT17IGpyIH0ga2V5PXsganIgfT57IF8oXCJqdWRnZV9yb2xlcy5cIiArIGpyKSB9PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJkZWwgYnRuIGJ0bi1kYW5nZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnJlbW92ZURpc2NpcGxpbmVKdWRnZS5iaW5kKHRoaXMsIGlkeCkgfT5YPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGggYnRuIGJ0bi1zbSBidG4tZGVmYXVsdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLmFkZERpc2NpcGxpbmVKdWRnZS5iaW5kKHRoaXMpIH0+eyBfKFwiZ2xvYmFsLmJ1dHRvbnMuYWRkXCIpIH08L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbGctMlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4mbmJzcDs8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnV0dG9uc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwic3VibWl0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiPnsgXyhcImdsb2JhbC5idXR0b25zLnN1Ym1pdFwiKSB9PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tZGFuZ2VyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnByb3BzLnN0b3BFZGl0aW5nIH0+eyBfKFwiZ2xvYmFsLmJ1dHRvbnMuZGlzY2FyZFwiKSB9PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgPC90cj5cbiAgICB9XG59XG5cbmNsYXNzIERpc2NpcGxpbmVSb3cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGVkaXRpbmc6IGZhbHNlLFxuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXJ0RWRpdGluZygpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBlZGl0aW5nOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RvcEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBvbkRlbGV0ZShldmVudCkge1xuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgc2hvd0NvbmZpcm0oXyhcImFkbWluLmNvbmZpcm1zLmRlbGV0ZV9kaXNjaXBsaW5lXCIpLCAoKSA9PiB7XG4gICAgICAgICAgICBBcGkoXCJkaXNjaXBsaW5lLmRlbGV0ZVwiLCB7XG4gICAgICAgICAgICAgICAgZGlzY2lwbGluZV9pZDogdGhpcy5wcm9wcy5kaXNjaXBsaW5lLmlkLFxuICAgICAgICAgICAgfSkub25TdWNjZXNzKCgpID0+IHN3YWwuY2xvc2UoKSkuc2VuZCgpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVuZGVyRWRpdG9yKCkge1xuICAgICAgICByZXR1cm4gPERpc2NpcGxpbmVFZGl0b3JSb3dcbiAgICAgICAgICAgIG5ld0Rpc2NpcGxpbmU9eyBmYWxzZSB9XG4gICAgICAgICAgICBzdG9wRWRpdGluZz17IHRoaXMuc3RvcEVkaXRpbmcuYmluZCh0aGlzKSB9XG4gICAgICAgICAgICB7IC4uLnRoaXMucHJvcHMgfSAvPlxuICAgIH1cbiAgICByZW5kZXJWaWV3ZXIoKSB7XG4gICAgICAgIGxldCBjID0gdGhpcy5wcm9wcy5kaXNjaXBsaW5lO1xuICAgICAgICByZXR1cm4gPHRyIGNsYXNzTmFtZT1cInZpZXdlclwiIG9uQ2xpY2s9eyB0aGlzLnN0YXJ0RWRpdGluZy5iaW5kKHRoaXMpIH0+XG4gICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwibmFtZVwiPnsgYy5uYW1lIH08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInNwXCI+eyBjLnNwIH08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImV4dGVybmFsLWlkXCI+eyBjLmV4dGVybmFsX2lkIH08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImRlbGV0ZVwiPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1kYW5nZXJcIiBvbkNsaWNrPXsgdGhpcy5vbkRlbGV0ZS5iaW5kKHRoaXMpIH0+WDwvYnV0dG9uPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgPC90cj47XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuZWRpdGluZykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyRWRpdG9yKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJWaWV3ZXIoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuY2xhc3MgRGlzY2lwbGluZUNyZWF0aW9uUm93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBlZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGFydEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0b3BFZGl0aW5nKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGVkaXRpbmc6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVuZGVyRWRpdG9yKCkge1xuICAgICAgICBsZXQgZW1wdHlfZGF0YSA9IHtcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIlwiLFxuICAgICAgICAgICAgXCJkaXNjaXBsaW5lX2p1ZGdlc1wiOiBbXSxcbiAgICAgICAgICAgIFwic3BcIjogXCIwXCIsXG4gICAgICAgICAgICBcImV4dGVybmFsX2lkXCI6IFwiXCIsXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxEaXNjaXBsaW5lRWRpdG9yUm93XG4gICAgICAgICAgICBuZXdEaXNjaXBsaW5lXG4gICAgICAgICAgICBzdG9wRWRpdGluZz17IHRoaXMuc3RvcEVkaXRpbmcuYmluZCh0aGlzKSB9XG4gICAgICAgICAgICBkaXNjaXBsaW5lPXsgZW1wdHlfZGF0YSB9XG4gICAgICAgICAgICB7IC4uLnRoaXMucHJvcHMgfSAvPjtcbiAgICB9XG4gICAgcmVuZGVyQnV0dG9uKCkge1xuICAgICAgICByZXR1cm4gPHRyPjx0ZCBjb2xTcGFuPVwiNVwiPlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tZGVmYXVsdCBmdWxsLXdpZHRoXCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsgdGhpcy5zdGFydEVkaXRpbmcuYmluZCh0aGlzKSB9PnsgXyhcImFkbWluLmJ1dHRvbnMuYWRkX2Rpc2NpcGxpbmVcIikgfTwvYnV0dG9uPlxuICAgICAgICA8L3RkPjwvdHI+XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuZWRpdGluZyA/IHRoaXMucmVuZGVyRWRpdG9yKCkgOiB0aGlzLnJlbmRlckJ1dHRvbigpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IF8gfSBmcm9tIFwiaTEwbi9sb2FkZXJcIjtcbmltcG9ydCB7IEFwaSB9IGZyb20gXCJzZXJ2ZXIvYXBpXCI7XG5cblxuZXhwb3J0IGNsYXNzIEltcG9ydEV4cG9ydCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgaW1wb3J0X2ZpbGVzOiBbXSxcbiAgICAgICAgICAgIHN1Ym1pdHRpbmc6IGZhbHNlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpbXBvcnQoKSB7XG4gICAgICAgIGxldCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgICAgICByZWFkZXIub25sb2FkID0gKGYpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIHN1Ym1pdHRpbmc6IHRydWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIEFwaShcImNvbXBldGl0aW9uLmxvYWRcIiwge1xuICAgICAgICAgICAgICAgIGNvbXBldGl0aW9uX2lkOiB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkLFxuICAgICAgICAgICAgICAgIGRhdGE6IGYudGFyZ2V0LnJlc3VsdCxcbiAgICAgICAgICAgIH0pLm9uU3VjY2VzcygoKSA9PiB7XG4gICAgICAgICAgICAgICAgc3dhbCh7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBfKFwiZ2xvYmFsLm1lc3NhZ2VzLnN1Y2Nlc3NcIiksXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwic3VjY2Vzc1wiLFxuICAgICAgICAgICAgICAgICAgICBhbmltYXRpb246IGZhbHNlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KS5vbkRvbmUoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBzdWJtaXR0aW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pLnNlbmQoKTtcbiAgICAgICAgfVxuICAgICAgICByZWFkZXIucmVhZEFzVGV4dCh0aGlzLnN0YXRlLmltcG9ydF9maWxlc1swXSk7XG4gICAgfVxuICAgIGV4cG9ydCgpIHtcbiAgICAgICAgQXBpKFwiY29tcGV0aXRpb24uZXhwb3J0XCIsIHsgY29tcGV0aXRpb25faWQ6IHRoaXMucHJvcHMuY29tcGV0aXRpb25faWQgfSlcbiAgICAgICAgICAgIC5vblN1Y2Nlc3MociA9PiBzYXZlQXMobmV3IEJsb2IoW0pTT04uc3RyaW5naWZ5KHIpXSwge3R5cGUgOiAnYXBwbGljYXRpb24vanNvbid9KSwgXCJyb2NranVkZ2UuZXhwb3J0Lmpzb25cIikpXG4gICAgICAgICAgICAuc2VuZCgpO1xuICAgIH1cbiAgICBvblN1Ym1pdChldmVudCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBsZXQgZGF0YSA9IHRoaXMuX2lucHV0LnZhbHVlO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImFwcC1jb250ZW50IGxvYWQtY29tcGV0aXRpb24tcGFnZVwiPlxuICAgICAgICAgICAgPGhlYWRlciBjbGFzc05hbWU9XCJhcHAtaGVhZFwiPlxuICAgICAgICAgICAgICAgIDxoMT57IF8oXCJhZG1pbi5oZWFkZXJzLmltcG9ydF9leHBvcnRcIikgfTwvaDE+XG4gICAgICAgICAgICA8L2hlYWRlcj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW1wb3J0LWV4cG9ydFwiPlxuICAgICAgICAgICAgICAgIDxoMz57IF8oXCJhZG1pbi5oZWFkZXJzLmltcG9ydF9jb21wZXRpdGlvblwiKSB9PC9oMz5cbiAgICAgICAgICAgICAgICA8Zm9ybSBjbGFzc05hbWU9XCJpbXBvcnQtZm9ybVwiIG9uU3VibWl0PXsgZSA9PiB7IGUucHJldmVudERlZmF1bHQoKTsgdGhpcy5pbXBvcnQoKTsgfSB9PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgXyhcImdsb2JhbC5sYWJlbHMuYnJvd3NlXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnN0YXRlLmltcG9ydF9maWxlcy5sZW5ndGggPT09IDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF8oXCJhZG1pbi5sYWJlbHMubm9fZmlsZXNfc2VsZWN0ZWRcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHRoaXMuc3RhdGUuaW1wb3J0X2ZpbGVzWzBdLm5hbWUgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJmaWxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IGUgPT4gdGhpcy5zZXRTdGF0ZSh7IGltcG9ydF9maWxlczogZS50YXJnZXQuZmlsZXMgfSkgfSAvPlxuICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXsgdGhpcy5zdGF0ZS5pbXBvcnRfZmlsZXMubGVuZ3RoICE9PSAxIHx8IHRoaXMuc3RhdGUuc3VibWl0dGluZyB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4uYnV0dG9ucy5pbXBvcnRcIikgfVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgICAgICAgPGgzPnsgXyhcImFkbWluLmhlYWRlcnMuZXhwb3J0X2NvbXBldGl0aW9uXCIpIH08L2gzPlxuICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17IHRoaXMuZXhwb3J0LmJpbmQodGhpcykgfT5cbiAgICAgICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4uYnV0dG9ucy5leHBvcnRcIikgfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbn1cbiIsImltcG9ydCB7IF8gfSBmcm9tIFwiaTEwbi9sb2FkZXJcIjtcbmltcG9ydCB7IEFwaSB9IGZyb20gXCJzZXJ2ZXIvYXBpXCI7XG5pbXBvcnQgeyBzaG93Q29uZmlybSB9IGZyb20gXCJ1aS9kaWFsb2dzXCI7XG5cblxuZXhwb3J0IGNsYXNzIEp1ZGdlcyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgY3JlYXRpbmc6IGZhbHNlLFxuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlclRhYmxlKCkge1xuICAgICAgICBsZXQgcm93cyA9IHRoaXMucHJvcHMuanVkZ2VzLm1hcChmdW5jdGlvbihqdWRnZSkge1xuICAgICAgICAgICAgcmV0dXJuIDxKdWRnZVJvd1xuICAgICAgICAgICAgICAgIGtleT17IGp1ZGdlLmlkIH1cbiAgICAgICAgICAgICAgICBqdWRnZT17IGp1ZGdlIH0gLz47XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cIm1hbmFnZS1qdWRnZXNcIj5cbiAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSB0YWJsZS1zdHJpcGVkXCI+XG4gICAgICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicm9sZV9kZXNjcmlwdGlvblwiPnsgXyhcIm1vZGVscy5qdWRnZS5yb2xlX2Rlc2NyaXB0aW9uXCIpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cIm5hbWVcIj57IF8oXCJtb2RlbHMuanVkZ2UubmFtZVwiKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJjYXRlZ29yeVwiPnsgXyhcIm1vZGVscy5qdWRnZS5jYXRlZ29yeVwiKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJkZWxldGVcIj48L3RoPlxuICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICB7IHJvd3MgfVxuICAgICAgICAgICAgICAgICAgICA8SnVkZ2VDcmVhdGlvblJvdyBjb21wZXRpdGlvbl9pZD17IHRoaXMucHJvcHMuY29tcGV0aXRpb25faWQgfSAvPlxuICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJhcHAtY29udGVudFwiPlxuICAgICAgICAgICAgPGhlYWRlciBjbGFzc05hbWU9XCJhcHAtaGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgPGgxPnsgXyhcImFkbWluLmhlYWRlcnMuanVkZ2VzX21hbmFnZW1lbnRcIikgfTwvaDE+XG4gICAgICAgICAgICA8L2hlYWRlcj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYXBwLWJvZHlcIj5cbiAgICAgICAgICAgICAgICB7IHRoaXMucmVuZGVyVGFibGUoKSB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+O1xuICAgIH1cbn1cblxuY2xhc3MgSnVkZ2VFZGl0b3JSb3cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHNlcnRpYWxpemUoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiB0aGlzLl9uYW1lLnZhbHVlLFxuICAgICAgICAgICAgbnVtYmVyOiB0aGlzLl9udW1iZXIudmFsdWUsXG4gICAgICAgICAgICBjYXRlZ29yeTogdGhpcy5fY2F0ZWdvcnkudmFsdWUsXG4gICAgICAgICAgICByb2xlX2Rlc2NyaXB0aW9uOiB0aGlzLl9yb2xlX2Rlc2NyaXB0aW9uLnZhbHVlLFxuICAgICAgICAgICAgc3A6IHRoaXMuX3NwLnZhbHVlLFxuICAgICAgICAgICAgZXh0ZXJuYWxfaWQ6IHRoaXMuX2V4dGVybmFsX2lkLnZhbHVlLFxuICAgICAgICB9XG4gICAgfVxuICAgIG9uU3VibWl0KGV2ZW50KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGlmICghdGhpcy5wcm9wcy5uZXdKdWRnZSkge1xuICAgICAgICAgICAgQXBpKFwianVkZ2Uuc2V0XCIsIHtcbiAgICAgICAgICAgICAgICBqdWRnZV9pZDogdGhpcy5wcm9wcy5qdWRnZS5pZCxcbiAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLnNlcnRpYWxpemUoKSxcbiAgICAgICAgICAgIH0pLm9uU3VjY2Vzcyh0aGlzLnByb3BzLnN0b3BFZGl0aW5nKS5zZW5kKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBBcGkoXCJqdWRnZS5jcmVhdGVcIiwge1xuICAgICAgICAgICAgICAgIGNvbXBldGl0aW9uX2lkOiB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkLFxuICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMuc2VydGlhbGl6ZSgpLFxuICAgICAgICAgICAgfSkub25TdWNjZXNzKHRoaXMucHJvcHMuc3RvcEVkaXRpbmcpLnNlbmQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8dHIgY2xhc3NOYW1lPXsgXCJlZGl0b3JcIiArICh0aGlzLnByb3BzLm5ld0p1ZGdlID8gXCIgY3JlYXRlXCIgOiBcIlwiICkgfT5cbiAgICAgICAgICAgIDx0ZCBjb2xTcGFuPVwiNVwiPlxuICAgICAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXsgdGhpcy5vblN1Ym1pdC5iaW5kKHRoaXMpIH0+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1sZy0xXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBfKFwibW9kZWxzLmp1ZGdlLm51bWJlclwiKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPXsgKGUpID0+IHsgaWYgKGUpIHsgZS5zZWxlY3QoKTsgdGhpcy5fbnVtYmVyID0gZTsgfSB9IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXsgdGhpcy5wcm9wcy5qdWRnZS5udW1iZXIgfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLWxnLTFcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiZnVsbC13aWR0aFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IF8oXCJtb2RlbHMuanVkZ2UuY2F0ZWdvcnlcIikgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17IChlKSA9PiBlICYmICh0aGlzLl9jYXRlZ29yeSA9IGUpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXsgdGhpcy5wcm9wcy5qdWRnZS5jYXRlZ29yeSB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbGctM1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgXyhcIm1vZGVscy5qdWRnZS5uYW1lXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9eyAoZSkgPT4gZSAmJiAodGhpcy5fbmFtZSA9IGUpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXsgdGhpcy5wcm9wcy5qdWRnZS5uYW1lIH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1sZy0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBfKFwibW9kZWxzLmp1ZGdlLnJvbGVfZGVzY3JpcHRpb25cIikgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17IChlKSA9PiBlICYmICh0aGlzLl9yb2xlX2Rlc2NyaXB0aW9uID0gZSkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZnVsbC13aWR0aFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9eyB0aGlzLnByb3BzLmp1ZGdlLnJvbGVfZGVzY3JpcHRpb24gfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLWxnLTFcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiZnVsbC13aWR0aFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IF8oXCJtb2RlbHMuanVkZ2UuZXh0ZXJuYWxfaWRcIikgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17IChlKSA9PiBlICYmICh0aGlzLl9leHRlcm5hbF9pZCA9IGUpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXsgdGhpcy5wcm9wcy5qdWRnZS5leHRlcm5hbF9pZCB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbGctMVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgXyhcIm1vZGVscy5qdWRnZS5zcFwiKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPXsgKGUpID0+IGUgJiYgKHRoaXMuX3NwID0gZSkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZnVsbC13aWR0aFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9eyB0aGlzLnByb3BzLmp1ZGdlLnNwIH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1sZy0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJidXR0b25zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1zbSBidG4tcHJpbWFyeVwiPnsgXyhcImdsb2JhbC5idXR0b25zLnN1Ym1pdFwiKSB9PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1zbSBidG4tZGFuZ2VyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnByb3BzLnN0b3BFZGl0aW5nIH0+eyBfKFwiZ2xvYmFsLmJ1dHRvbnMuZGlzY2FyZFwiKSB9PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgPC90cj5cbiAgICB9XG59XG5cbmNsYXNzIEp1ZGdlUm93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBlZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGFydEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0b3BFZGl0aW5nKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGVkaXRpbmc6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgb25EZWxldGUoZXZlbnQpIHtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIHNob3dDb25maXJtKF8oXCJhZG1pbi5jb25maXJtcy5kZWxldGVfanVkZ2VcIiksICgpID0+IHtcbiAgICAgICAgICAgIEFwaShcImp1ZGdlLmRlbGV0ZVwiLCB7XG4gICAgICAgICAgICAgICAganVkZ2VfaWQ6IHRoaXMucHJvcHMuanVkZ2UuaWQsXG4gICAgICAgICAgICB9KS5vblN1Y2Nlc3MoKCkgPT4gc3dhbC5jbG9zZSgpKS5zZW5kKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZW5kZXJFZGl0b3IoKSB7XG4gICAgICAgIHJldHVybiA8SnVkZ2VFZGl0b3JSb3dcbiAgICAgICAgICAgIG5ld0p1ZGdlPXsgZmFsc2UgfVxuICAgICAgICAgICAgc3RvcEVkaXRpbmc9eyB0aGlzLnN0b3BFZGl0aW5nLmJpbmQodGhpcykgfVxuICAgICAgICAgICAgeyAuLi50aGlzLnByb3BzIH0gLz5cbiAgICB9XG4gICAgcmVuZGVyVmlld2VyKCkge1xuICAgICAgICBsZXQgaiA9IHRoaXMucHJvcHMuanVkZ2U7XG4gICAgICAgIHJldHVybiA8dHIgY2xhc3NOYW1lPVwidmlld2VyXCIgb25DbGljaz17IHRoaXMuc3RhcnRFZGl0aW5nLmJpbmQodGhpcykgfT5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJyb2xlLWRlc2NyaXB0aW9uXCI+eyBqLnJvbGVfZGVzY3JpcHRpb24gfHwgXyhcImdsb2JhbC5waHJhc2VzLmp1ZGdlX25cIiwgai5udW1iZXIpIH08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cIm5hbWVcIj57IGoubmFtZSB9PC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJjYXRlZ29yeVwiPnsgai5jYXRlZ29yeSB9PC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJkZWxldGVcIj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tZGFuZ2VyXCIgb25DbGljaz17IHRoaXMub25EZWxldGUuYmluZCh0aGlzKSB9Plg8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+O1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlLmVkaXRpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlckVkaXRvcigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyVmlld2VyKCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNsYXNzIEp1ZGdlQ3JlYXRpb25Sb3cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGVkaXRpbmc6IGZhbHNlLFxuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXJ0RWRpdGluZygpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBlZGl0aW5nOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RvcEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZW5kZXJFZGl0b3IoKSB7XG4gICAgICAgIGxldCBlbXB0eV9kYXRhID0ge1xuICAgICAgICAgICAgXCJuYW1lXCI6IFwiXCIsXG4gICAgICAgICAgICBcIm51bWJlclwiOiBcIlwiLFxuICAgICAgICAgICAgXCJyb2xlX2Rlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICAgICAgICBcImNhdGVnb3J5XCI6IFwiXCIsXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxKdWRnZUVkaXRvclJvd1xuICAgICAgICAgICAgbmV3SnVkZ2VcbiAgICAgICAgICAgIHN0b3BFZGl0aW5nPXsgdGhpcy5zdG9wRWRpdGluZy5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgIGp1ZGdlPXsgZW1wdHlfZGF0YSB9XG4gICAgICAgICAgICB7IC4uLnRoaXMucHJvcHMgfSAvPjtcbiAgICB9XG4gICAgcmVuZGVyQnV0dG9uKCkge1xuICAgICAgICByZXR1cm4gPHRyPjx0ZCBjb2xTcGFuPVwiNVwiPlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tZGVmYXVsdCBmdWxsLXdpZHRoXCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsgdGhpcy5zdGFydEVkaXRpbmcuYmluZCh0aGlzKSB9PnsgXyhcImFkbWluLmJ1dHRvbnMuYWRkX2p1ZGdlXCIpIH08L2J1dHRvbj5cbiAgICAgICAgPC90ZD48L3RyPlxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLmVkaXRpbmcgPyB0aGlzLnJlbmRlckVkaXRvcigpIDogdGhpcy5yZW5kZXJCdXR0b24oKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBfIH0gZnJvbSBcImkxMG4vbG9hZGVyXCI7XG5pbXBvcnQgeyBDbHVicyB9IGZyb20gXCIuL2NsdWJzXCI7XG5pbXBvcnQgeyBDb21wZXRpdGlvblBsYW4gfSBmcm9tIFwiLi9jb21wZXRpdGlvbl9wbGFuXCI7XG5pbXBvcnQgeyBDb21wZXRpdGlvblJlcG9ydCB9IGZyb20gXCIuL2NvbXBldGl0aW9uX3JlcG9ydFwiO1xuaW1wb3J0IHsgRGlzY2lwbGluZXMgfSBmcm9tIFwiLi9kaXNjaXBsaW5lc1wiO1xuaW1wb3J0IHsgSW1wb3J0RXhwb3J0IH0gZnJvbSBcIi4vaW1wb3J0X2V4cG9ydFwiO1xuaW1wb3J0IHsgSnVkZ2VzIH0gZnJvbSBcIi4vanVkZ2VzXCI7XG5pbXBvcnQgeyBQYXJ0aWNpcGFudHMgIH0gZnJvbSBcIi4vcGFydGljaXBhbnRzXCI7XG5pbXBvcnQgeyBTdGFydExpc3QgfSBmcm9tIFwiLi9zdGFydF9saXN0XCI7XG5pbXBvcnQgeyBUb3VycyB9IGZyb20gXCIuL3RvdXJzXCI7XG5cblxuZXhwb3J0IGNsYXNzIE1hbmFnZW1lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIFwicGFnZVwiOiB0aGlzLmdldFBhZ2VGcm9tSGFzaCgpLFxuICAgICAgICAgICAgXCJwYWdlX3Byb3BzXCI6IHRoaXMuZ2V0UGFnZVByb3BzRnJvbUhhc2goKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgc3dpdGNoUGFnZShwYWdlLCBwcm9wcykge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHBhZ2U6IHBhZ2UsXG4gICAgICAgICAgICBwYWdlX3Byb3BzOiBwcm9wcyxcbiAgICAgICAgfSk7XG4gICAgICAgIGxldCBwcm9wc19wYWlycyA9IFtdO1xuICAgICAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhwcm9wcykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgICAgICBwcm9wc19wYWlycy5wdXNoKFtrZXksIHByb3BzW2tleV1dKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gXCIjbWFuYWdlbWVudC9cIiArIHBhZ2UgKyBcIi9cIiArIHByb3BzX3BhaXJzLm1hcCgocCkgPT4gcC5qb2luKFwiPVwiKSkuam9pbihcIiRcIik7XG4gICAgfVxuICAgIGdldFBhZ2VGcm9tSGFzaCgpIHtcbiAgICAgICAgbGV0IGNodW5rcyA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cigxKS5zcGxpdChcIi9cIik7XG4gICAgICAgIGlmIChjaHVua3NbMV0gJiYgW1xuICAgICAgICAgICAgICAgIFwiaW1wb3J0X2V4cG9ydFwiLFxuICAgICAgICAgICAgICAgIFwibWFuYWdlX2NvbXBldGl0aW9uX3BsYW5cIixcbiAgICAgICAgICAgICAgICBcIm1hbmFnZV90b3Vyc1wiLFxuICAgICAgICAgICAgICAgIFwibWFuYWdlX3BhcnRpY2lwYW50c1wiLFxuICAgICAgICAgICAgICAgIFwibWFuYWdlX2p1ZGdlc1wiLFxuICAgICAgICAgICAgICAgIFwibWFuYWdlX2NsdWJzXCIsXG4gICAgICAgICAgICAgICAgXCJtYW5hZ2VfZGlzY2lwbGluZXNcIixcbiAgICAgICAgICAgICAgICBcInN0YXJ0X2xpc3RcIixcbiAgICAgICAgICAgICAgICBcImNvbXBldGl0aW9uX3JlcG9ydFwiXS5pbmRleE9mKGNodW5rc1sxXSkgPj0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGNodW5rc1sxXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgZ2V0UGFnZVByb3BzRnJvbUhhc2goKSB7XG4gICAgICAgIGxldCBjaHVua3MgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHIoMSkuc3BsaXQoXCIvXCIpO1xuICAgICAgICBpZiAoY2h1bmtzWzJdKSB7XG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0ge307XG4gICAgICAgICAgICBjaHVua3NbMl0uc3BsaXQoXCIkXCIpLmZvckVhY2goZnVuY3Rpb24ocGFpcl9zdHIpIHtcbiAgICAgICAgICAgICAgICBsZXQgcGFpciA9IHBhaXJfc3RyLnNwbGl0KFwiPVwiKTtcbiAgICAgICAgICAgICAgICByZXN1bHRbcGFpclswXV0gPSBwYWlyWzFdO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgcmVuZGVyRGlzY2lwbGluZShpYywgcGFnZSkge1xuICAgICAgICByZXR1cm4gPGRpdlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17IFwibGV2ZWwtMlwiICsgKFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLnBhZ2UgPT09IHBhZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICYmIHRoaXMuc3RhdGUucGFnZV9wcm9wcy5kaXNjaXBsaW5lX2lkID09PSBpYy5pZFxuICAgICAgICAgICAgICAgICAgICAgICAgPyBcIiBhY3RpdmVcIiA6IFwiXCIpIH1cbiAgICAgICAgICAgICAgICBrZXk9eyBpYy5pZCB9XG4gICAgICAgICAgICAgICAgb25DbGljaz17IHRoaXMuc3dpdGNoUGFnZS5iaW5kKHRoaXMsIHBhZ2UsIHsgZGlzY2lwbGluZV9pZDogaWMuaWQgfSkgfT5cbiAgICAgICAgICAgIHsgaWMubmFtZSB9XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbiAgICByZW5kZXJDb250ZW50KCkge1xuICAgICAgICBzd2l0Y2ggKHRoaXMuc3RhdGUucGFnZSkge1xuICAgICAgICBjYXNlIFwiaW1wb3J0X2V4cG9ydFwiOlxuICAgICAgICAgICAgcmV0dXJuIDxJbXBvcnRFeHBvcnQgY29tcGV0aXRpb25faWQ9eyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkIH0gLz5cbiAgICAgICAgY2FzZSBcIm1hbmFnZV90b3Vyc1wiOlxuICAgICAgICAgICAgLy8gU2Vla2luZyBmb3IgZGlzY2lwbGluZSB3aXRoIGdpdmVuIElEXG4gICAgICAgICAgICBsZXQgaWMgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5kaXNjaXBsaW5lcy5mb3JFYWNoKGZ1bmN0aW9uKGVsKSB7XG4gICAgICAgICAgICAgICAgaWYgKGVsLmlkID09PSB0aGlzLnN0YXRlLnBhZ2VfcHJvcHMuZGlzY2lwbGluZV9pZCkge1xuICAgICAgICAgICAgICAgICAgICBpYyA9IGVsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICAgICAgICByZXR1cm4gPFRvdXJzXG4gICAgICAgICAgICAgICAga2V5PXsgdGhpcy5zdGF0ZS5wYWdlX3Byb3BzLmRpc2NpcGxpbmVfaWQgfVxuICAgICAgICAgICAgICAgIGRpc2NpcGxpbmU9eyBpYyB9IC8+XG4gICAgICAgIGNhc2UgXCJtYW5hZ2VfcGFydGljaXBhbnRzXCI6XG4gICAgICAgICAgICByZXR1cm4gPFBhcnRpY2lwYW50c1xuICAgICAgICAgICAgICAgIGtleT17IHRoaXMuc3RhdGUucGFnZV9wcm9wcy5kaXNjaXBsaW5lX2lkIH1cbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2lkPXsgdGhpcy5zdGF0ZS5wYWdlX3Byb3BzLmRpc2NpcGxpbmVfaWQgfSAvPlxuICAgICAgICBjYXNlIFwibWFuYWdlX2p1ZGdlc1wiOlxuICAgICAgICAgICAgcmV0dXJuIDxKdWRnZXNcbiAgICAgICAgICAgICAgICBqdWRnZXM9eyB0aGlzLnByb3BzLmp1ZGdlcyB9XG4gICAgICAgICAgICAgICAgY29tcGV0aXRpb25faWQ9eyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkIH0gLz5cbiAgICAgICAgY2FzZSBcIm1hbmFnZV9jbHVic1wiOlxuICAgICAgICAgICAgcmV0dXJuIDxDbHVic1xuICAgICAgICAgICAgICAgIGNsdWJzPXsgdGhpcy5wcm9wcy5jbHVicyB9XG4gICAgICAgICAgICAgICAgY29tcGV0aXRpb25faWQ9eyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkIH0gLz5cbiAgICAgICAgY2FzZSBcIm1hbmFnZV9jb21wZXRpdGlvbl9wbGFuXCI6XG4gICAgICAgICAgICByZXR1cm4gPENvbXBldGl0aW9uUGxhblxuICAgICAgICAgICAgICAgIGl0ZW1zPXsgdGhpcy5wcm9wcy5jb21wZXRpdGlvbl9wbGFuIH1cbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lcz17IHRoaXMucHJvcHMuZGlzY2lwbGluZXMgfVxuICAgICAgICAgICAgICAgIGNvbXBldGl0aW9uX25hbWU9eyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX25hbWUgfVxuICAgICAgICAgICAgICAgIGNvbXBldGl0aW9uX2RhdGU9eyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2RhdGUgfVxuICAgICAgICAgICAgICAgIGNvbXBldGl0aW9uX2lkPXsgdGhpcy5wcm9wcy5jb21wZXRpdGlvbl9pZCB9IC8+XG4gICAgICAgIGNhc2UgXCJtYW5hZ2VfZGlzY2lwbGluZXNcIjpcbiAgICAgICAgICAgIHJldHVybiA8RGlzY2lwbGluZXNcbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lcz17IHRoaXMucHJvcHMuZGlzY2lwbGluZXMgfVxuICAgICAgICAgICAgICAgIGp1ZGdlcz17IHRoaXMucHJvcHMuanVkZ2VzIH1cbiAgICAgICAgICAgICAgICBjb21wZXRpdGlvbl9pZD17IHRoaXMucHJvcHMuY29tcGV0aXRpb25faWQgfSAvPlxuICAgICAgICBjYXNlIFwic3RhcnRfbGlzdFwiOlxuICAgICAgICAgICAgcmV0dXJuIDxTdGFydExpc3RcbiAgICAgICAgICAgICAgICBjb21wZXRpdGlvbl9pZD17IHRoaXMucHJvcHMuY29tcGV0aXRpb25faWQgfSAvPlxuICAgICAgICBjYXNlIFwiY29tcGV0aXRpb25fcmVwb3J0XCI6XG4gICAgICAgICAgICByZXR1cm4gPENvbXBldGl0aW9uUmVwb3J0XG4gICAgICAgICAgICAgICAgY29tcGV0aXRpb25faWQ9eyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkIH0gLz5cbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXJTaWRlTWVudSgpIHtcbiAgICAgICAgdmFyIGljc190b3VycyA9IHRoaXMucHJvcHMuZGlzY2lwbGluZXMubWFwKGZ1bmN0aW9uKGljKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJEaXNjaXBsaW5lKGljLCBcIm1hbmFnZV90b3Vyc1wiKTtcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgdmFyIGljc19wYXJ0aWNpcGFudHMgPSB0aGlzLnByb3BzLmRpc2NpcGxpbmVzLm1hcChmdW5jdGlvbihpYykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyRGlzY2lwbGluZShpYywgXCJtYW5hZ2VfcGFydGljaXBhbnRzXCIpO1xuICAgICAgICB9LmJpbmQodGhpcykpO1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJzaWRlLW1lbnVcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmxvY2tcIj5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9eyBcImxldmVsLTFcIiArICh0aGlzLnN0YXRlLnBhZ2UgPT09IFwiaW1wb3J0X2V4cG9ydFwiID8gXCIgYWN0aXZlXCIgOiBcIlwiKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsgdGhpcy5zd2l0Y2hQYWdlLmJpbmQodGhpcywgXCJpbXBvcnRfZXhwb3J0XCIsIHt9KSB9ID5cbiAgICAgICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4ubWVudS5pbXBvcnRfZXhwb3J0XCIpIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJibG9ja1wiPlxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17IFwibGV2ZWwtMVwiICsgKHRoaXMuc3RhdGUucGFnZSA9PT0gXCJtYW5hZ2VfanVkZ2VzXCIgPyBcIiBhY3RpdmVcIiA6IFwiXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnN3aXRjaFBhZ2UuYmluZCh0aGlzLCBcIm1hbmFnZV9qdWRnZXNcIiwge30pIH0+XG4gICAgICAgICAgICAgICAgICAgIHsgXyhcImFkbWluLm1lbnUubWFuYWdlX2p1ZGdlc1wiKSB9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmxvY2tcIj5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9eyBcImxldmVsLTFcIiArICh0aGlzLnN0YXRlLnBhZ2UgPT09IFwibWFuYWdlX2Rpc2NpcGxpbmVzXCIgPyBcIiBhY3RpdmVcIiA6IFwiXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnN3aXRjaFBhZ2UuYmluZCh0aGlzLCBcIm1hbmFnZV9kaXNjaXBsaW5lc1wiLCB7fSkgfT5cbiAgICAgICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4ubWVudS5tYW5hZ2VfZGlzY2lwbGluZXNcIikgfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJsb2NrXCI+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXsgXCJsZXZlbC0xXCIgKyAodGhpcy5zdGF0ZS5wYWdlID09PSBcIm1hbmFnZV9jbHVic1wiID8gXCIgYWN0aXZlXCIgOiBcIlwiKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsgdGhpcy5zd2l0Y2hQYWdlLmJpbmQodGhpcywgXCJtYW5hZ2VfY2x1YnNcIiwge30pIH0+XG4gICAgICAgICAgICAgICAgICAgIHsgXyhcImFkbWluLm1lbnUubWFuYWdlX2NsdWJzXCIpIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRldGFpbHMgY2xhc3NOYW1lPVwiYmxvY2tcIiBvcGVuPXsgISFwYXJzZUludChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwiRF9TUE9SVFNNRU5cIikpIH0+XG4gICAgICAgICAgICAgICAgPHN1bW1hcnkgY2xhc3NOYW1lPVwibGV2ZWwtMVwiIG9uQ2xpY2s9eyAoZSkgPT4gc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShcIkRfU1BPUlRTTUVOXCIsIGUudGFyZ2V0LnBhcmVudE5vZGUub3BlbiA/IDAgOiAxKSB9PlxuICAgICAgICAgICAgICAgICAgICB7IF8oXCJhZG1pbi5tZW51Lm1hbmFnZV9zcG9ydHNtZW5cIikgfVxuICAgICAgICAgICAgICAgIDwvc3VtbWFyeT5cbiAgICAgICAgICAgICAgICB7IGljc19wYXJ0aWNpcGFudHMgfVxuICAgICAgICAgICAgPC9kZXRhaWxzPlxuICAgICAgICAgICAgPGRldGFpbHMgY2xhc3NOYW1lPVwiYmxvY2tcIiBvcGVuPXsgISFwYXJzZUludChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwiRF9UT1VSU1wiKSkgfT5cbiAgICAgICAgICAgICAgICA8c3VtbWFyeSBjbGFzc05hbWU9XCJsZXZlbC0xXCIgb25DbGljaz17IChlKSA9PiBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFwiRF9UT1VSU1wiLCBlLnRhcmdldC5wYXJlbnROb2RlLm9wZW4gPyAwIDogMSkgfT5cbiAgICAgICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4ubWVudS5tYW5hZ2VfdG91cnNcIikgfVxuICAgICAgICAgICAgICAgIDwvc3VtbWFyeT5cbiAgICAgICAgICAgICAgICB7IGljc190b3VycyB9XG4gICAgICAgICAgICA8L2RldGFpbHM+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJsb2NrXCI+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXsgXCJsZXZlbC0xXCIgKyAodGhpcy5zdGF0ZS5wYWdlID09PSBcIm1hbmFnZV9jb21wZXRpdGlvbl9wbGFuXCIgPyBcIiBhY3RpdmVcIiA6IFwiXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnN3aXRjaFBhZ2UuYmluZCh0aGlzLCBcIm1hbmFnZV9jb21wZXRpdGlvbl9wbGFuXCIsIHt9KSB9PlxuICAgICAgICAgICAgICAgICAgICB7IF8oXCJhZG1pbi5tZW51Lm1hbmFnZV9jb21wZXRpdGlvbl9wbGFuXCIpIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJibG9ja1wiPlxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17IFwibGV2ZWwtMVwiICsgKHRoaXMuc3RhdGUucGFnZSA9PT0gXCJzdGFydF9saXN0XCIgPyBcIiBhY3RpdmVcIiA6IFwiXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnN3aXRjaFBhZ2UuYmluZCh0aGlzLCBcInN0YXJ0X2xpc3RcIiwge30pIH0+XG4gICAgICAgICAgICAgICAgICAgIHsgXyhcImFkbWluLm1lbnUuc3RhcnRfbGlzdFwiKSB9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmxvY2tcIj5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9eyBcImxldmVsLTFcIiArICh0aGlzLnN0YXRlLnBhZ2UgPT09IFwiY29tcGV0aXRpb25fcmVwb3J0XCIgPyBcIiBhY3RpdmVcIiA6IFwiXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnN3aXRjaFBhZ2UuYmluZCh0aGlzLCBcImNvbXBldGl0aW9uX3JlcG9ydFwiLCB7fSkgfT5cbiAgICAgICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4ubWVudS5jb21wZXRpdGlvbl9yZXBvcnRcIikgfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImFwcFwiPlxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlclNpZGVNZW51KCkgfVxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlckNvbnRlbnQoKSB9XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbn1cbiIsImltcG9ydCB7IF8gfSBmcm9tIFwiaTEwbi9sb2FkZXJcIjtcbmltcG9ydCB7IEFwaSB9IGZyb20gXCJzZXJ2ZXIvYXBpXCI7XG5pbXBvcnQgeyBzdG9yYWdlIH0gZnJvbSBcInNlcnZlci9zdG9yYWdlXCI7XG5pbXBvcnQgeyBtZXNzYWdlX2Rpc3BhdGNoZXIgfSBmcm9tIFwic2VydmVyL21lc3NhZ2VfZGlzcGF0Y2hlclwiO1xuaW1wb3J0IHsgTG9hZGVyIH0gZnJvbSBcInVpL2NvbXBvbmVudHNcIjtcbmltcG9ydCB7IHNob3dDb25maXJtLCBzaG93RXJyb3IgfSBmcm9tIFwidWkvZGlhbG9nc1wiO1xuaW1wb3J0IHsgY2xvbmUgfSBmcm9tIFwiY29tbW9uL3Rvb2xzXCI7XG5cblxuZXhwb3J0IGNsYXNzIFBhcnRpY2lwYW50cyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBzdG9yYWdlLmdldERvbWFpbihgcGFydGljaXBhbnRzXyR7dGhpcy5wcm9wcy5kaXNjaXBsaW5lX2lkfWApO1xuICAgICAgICB0aGlzLnJlbG9hZF9saXN0ZW5lciA9IG1lc3NhZ2VfZGlzcGF0Y2hlci5hZGRMaXN0ZW5lcihcInJlbG9hZF9kYXRhXCIsIHRoaXMubG9hZERhdGEuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMuZGJfdXBkYXRlX2xpc3RlbmVyID0gbWVzc2FnZV9kaXNwYXRjaGVyLmFkZExpc3RlbmVyKFwiZGJfdXBkYXRlXCIsIHRoaXMucmVsb2FkRnJvbVN0b3JhZ2UuYmluZCh0aGlzKSk7XG4gICAgICAgIHRoaXMubG9hZERhdGEoKTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIG1lc3NhZ2VfZGlzcGF0Y2hlci5yZW1vdmVMaXN0ZW5lcih0aGlzLnJlbG9hZF9saXN0ZW5lcik7XG4gICAgICAgIG1lc3NhZ2VfZGlzcGF0Y2hlci5yZW1vdmVMaXN0ZW5lcih0aGlzLmRiX3VwZGF0ZV9saXN0ZW5lcik7XG4gICAgICAgIHN0b3JhZ2UuZGVsRG9tYWluKGBwYXJ0aWNpcGFudHNfJHt0aGlzLnByb3BzLmRpc2NpcGxpbmVfaWR9YCk7XG4gICAgfVxuICAgIHJlbG9hZEZyb21TdG9yYWdlKCkge1xuICAgICAgICB2YXIgU0NIRU1BID0ge1xuICAgICAgICAgICAgY29tcGV0aXRpb246IHtcbiAgICAgICAgICAgICAgICBjbHViczoge30sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcGFydGljaXBhbnRzOiB7XG4gICAgICAgICAgICAgICAgY2x1Yjoge30sXG4gICAgICAgICAgICAgICAgcHJvZ3JhbXM6IHt9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgICAgbGV0IHNlcmlhbGl6ZWQgPSB0aGlzLnN0b3JhZ2UuZ2V0KFwiRGlzY2lwbGluZVwiKVxuICAgICAgICAgICAgLmJ5X2lkKHRoaXMucHJvcHMuZGlzY2lwbGluZV9pZClcbiAgICAgICAgICAgIC5zZXJpYWxpemUoU0NIRU1BKTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZShzZXJpYWxpemVkKTtcbiAgICB9XG4gICAgbG9hZERhdGEoKSB7XG4gICAgICAgIEFwaShcImRpc2NpcGxpbmUuZ2V0XCIsIHtcbiAgICAgICAgICAgIGRpc2NpcGxpbmVfaWQ6IHRoaXMucHJvcHMuZGlzY2lwbGluZV9pZCxcbiAgICAgICAgICAgIGNoaWxkcmVuOiB7XG4gICAgICAgICAgICAgICAgY29tcGV0aXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgY2x1YnM6IHt9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcGFydGljaXBhbnRzOiB7XG4gICAgICAgICAgICAgICAgICAgIGNsdWI6IHt9LFxuICAgICAgICAgICAgICAgICAgICBwcm9ncmFtczoge30sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLmFkZFRvREIoXCJEaXNjaXBsaW5lXCIsIHRoaXMucHJvcHMuZGlzY2lwbGluZV9pZCwgdGhpcy5zdG9yYWdlKVxuICAgICAgICAub25TdWNjZXNzKHRoaXMucmVsb2FkRnJvbVN0b3JhZ2UuYmluZCh0aGlzKSlcbiAgICAgICAgLnNlbmQoKTtcbiAgICB9XG4gICAgcmVuZGVyVGFibGUoKSB7XG4gICAgICAgIGxldCByb3dzID0gdGhpcy5zdGF0ZS5wYXJ0aWNpcGFudHMubWFwKChwYXJ0aWNpcGFudCkgPT5cbiAgICAgICAgICAgIDxQYXJ0aWNpcGFudFJvd1xuICAgICAgICAgICAgICAgIGtleT17IHBhcnRpY2lwYW50LmlkIH1cbiAgICAgICAgICAgICAgICBwYXJ0aWNpcGFudD17IHBhcnRpY2lwYW50IH1cbiAgICAgICAgICAgICAgICBjbHVicz17IHRoaXMuc3RhdGUuY29tcGV0aXRpb24uY2x1YnMgfSAvPlxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJtYW5hZ2UtcGFydGljaXBhbnRzXCI+XG4gICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwidGFibGUgdGFibGUtc3RyaXBlZFwiPlxuICAgICAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cIm51bWJlclwiPnsgXyhcIm1vZGVscy5wYXJ0aWNpcGFudC5udW1iZXJcIikgfTwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwibmFtZVwiPnsgXyhcIm1vZGVscy5wYXJ0aWNpcGFudC5uYW1lXCIpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImNsdWItbmFtZVwiPnsgXyhcIm1vZGVscy5wYXJ0aWNpcGFudC5jbHViX25hbWVcIikgfTwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwiY2x1Yi1jaXR5XCI+eyBfKFwibW9kZWxzLnBhcnRpY2lwYW50LmNsdWJfY2l0eVwiKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJkZWxldGVcIj48L3RoPlxuICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICB7IHJvd3MgfVxuICAgICAgICAgICAgICAgICAgICA8UGFydGljaXBhbnRDcmVhdGlvblJvd1xuICAgICAgICAgICAgICAgICAgICAgICAgY2x1YnM9eyB0aGlzLnN0YXRlLmNvbXBldGl0aW9uLmNsdWJzIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc2NpcGxpbmVfaWQ9eyB0aGlzLnByb3BzLmRpc2NpcGxpbmVfaWQgfSAvPlxuICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0b3RhbC1wYXJ0aWNpcGFudHNcIj5cbiAgICAgICAgICAgICAgICB7IF8oXCJhZG1pbi5waHJhc2VzLnRvdGFsX25fcGFydGljaXBhbnRzXCIsIHRoaXMuc3RhdGUucGFydGljaXBhbnRzLmxlbmd0aCkgfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlLm5hbWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiA8TG9hZGVyIC8+XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiYXBwLWNvbnRlbnRcIj5cbiAgICAgICAgICAgIDxoZWFkZXIgY2xhc3NOYW1lPVwiYXBwLWhlYWRlclwiPlxuICAgICAgICAgICAgICAgIDxoMT57IHRoaXMuc3RhdGUubmFtZSB9PC9oMT5cbiAgICAgICAgICAgICAgICA8aDI+eyBfKFwiYWRtaW4uaGVhZGVycy5wYXJ0aWNpcGFudHNfbWFuYWdlbWVudFwiKSB9PC9oMj5cbiAgICAgICAgICAgIDwvaGVhZGVyPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhcHAtYm9keVwiPlxuICAgICAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJUYWJsZSgpIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG5cbmNsYXNzIENsdWJzU2VsZWN0b3IgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlckxpc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3BzLmNsdWJzLm1hcCgoY2x1YikgPT5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9eyBjbHViLmlkIH0ga2V5PXsgY2x1Yi5pZCB9PnsgY2x1Yi5uYW1lIH08L29wdGlvbj5cbiAgICAgICAgKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPHNlbGVjdFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXsgdGhpcy5wcm9wcy5jbHViX2lkIH1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMucHJvcHMub25DaGFuZ2UgfT5cbiAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJMaXN0KCkgfVxuICAgICAgICA8L3NlbGVjdD5cbiAgICB9XG59XG5cbmNsYXNzIFBhcnRpY2lwYW50RWRpdG9yUm93R2VuZXJhbEluZm8gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGdlbk9uQ2hhbmdlKGZpZWxkKSB7XG4gICAgICAgIHJldHVybiAoZXZlbnQpID0+IHRoaXMucHJvcHMub25DaGFuZ2UoZmllbGQsIGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIDxkaXY+XG4gICAgICAgICAgICA8aDQ+eyBfKFwibW9kZWxzLnBhcnRpY2lwYW50LmdlbmVyYWxfaW5mb1wiKSB9PC9oND5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXsgXyhcIm1vZGVscy5wYXJ0aWNpcGFudC5udW1iZXJcIikgfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXsgdGhpcy5wcm9wcy5wYXJ0aWNpcGFudC5udW1iZXIgfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5nZW5PbkNoYW5nZShcIm51bWJlclwiKSB9IC8+XG4gICAgICAgICAgICA8Q2x1YnNTZWxlY3RvclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgIHBhcnRpY2lwYW50PXsgdGhpcy5wcm9wcy5wYXJ0aWNpcGFudCB9XG4gICAgICAgICAgICAgICAgY2x1Yl9pZD17IHRoaXMucHJvcHMucGFydGljaXBhbnQuY2x1Yl9pZCB9XG4gICAgICAgICAgICAgICAgY2x1YnM9eyB0aGlzLnByb3BzLmNsdWJzIH1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMuZ2VuT25DaGFuZ2UoXCJjbHViX2lkXCIpIH0gLz5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXsgXyhcIm1vZGVscy5wYXJ0aWNpcGFudC5jb2FjaGVzXCIpIH1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmdWxsLXdpZHRoXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMucGFydGljaXBhbnQuY29hY2hlcyB9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLmdlbk9uQ2hhbmdlKFwiY29hY2hlc1wiKSB9IC8+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17IF8oXCJtb2RlbHMucGFydGljaXBhbnQuZm9ybWF0aW9uX25hbWVcIikgfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXsgdGhpcy5wcm9wcy5wYXJ0aWNpcGFudC5mb3JtYXRpb25fbmFtZSB9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLmdlbk9uQ2hhbmdlKFwiZm9ybWF0aW9uX25hbWVcIikgfSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG5cbmNsYXNzIFBhcnRpY2lwYW50RWRpdG9yUm93U3BvcnRzbWFuIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBnZW5PbkNoYW5nZShmaWVsZCkge1xuICAgICAgICByZXR1cm4gZXZlbnQgPT4gdGhpcy5wcm9wcy5vbkNoYW5nZShmaWVsZCwgZXZlbnQudGFyZ2V0LnZhbHVlKTtcbiAgICB9XG4gICAgZ2VuT25TdWJzdGl0dXRlQ2hhbmdlKCkge1xuICAgICAgICByZXR1cm4gZXZlbnQgPT4gdGhpcy5wcm9wcy5vbkNoYW5nZShcInN1YnN0aXR1dGVcIiwgZXZlbnQudGFyZ2V0LnZhbHVlID09PSBcIllcIik7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwic3BvcnRzbWFuXCI+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibGFzdC1uYW1lXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17IF8oXCJtb2RlbHMucGFydGljaXBhbnQubGFzdF9uYW1lXCIpIH1cbiAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuc3BvcnRzbWFuLmxhc3RfbmFtZSB9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLmdlbk9uQ2hhbmdlKFwibGFzdF9uYW1lXCIpIH0gLz5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmaXJzdC1uYW1lXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17IF8oXCJtb2RlbHMucGFydGljaXBhbnQuZmlyc3RfbmFtZVwiKSB9XG4gICAgICAgICAgICAgICAgdmFsdWU9eyB0aGlzLnByb3BzLnNwb3J0c21hbi5maXJzdF9uYW1lIH1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMuZ2VuT25DaGFuZ2UoXCJmaXJzdF9uYW1lXCIpIH0gLz5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ5b2JcIlxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXsgXyhcIm1vZGVscy5wYXJ0aWNpcGFudC55b2JcIikgfVxuICAgICAgICAgICAgICAgIHZhbHVlPXsgdGhpcy5wcm9wcy5zcG9ydHNtYW4ueWVhcl9vZl9iaXJ0aCB9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLmdlbk9uQ2hhbmdlKFwieWVhcl9vZl9iaXJ0aFwiKSB9IC8+XG4gICAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImdlbmRlclwiXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXsgdGhpcy5wcm9wcy5zcG9ydHNtYW4uZ2VuZGVyIH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLmdlbk9uQ2hhbmdlKFwiZ2VuZGVyXCIpIH0+XG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIkZcIj57IF8oXCJtb2RlbHMucGFydGljaXBhbnQuZ2VuZGVyX2ZcIikgfTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJNXCI+eyBfKFwibW9kZWxzLnBhcnRpY2lwYW50LmdlbmRlcl9tXCIpIH08L29wdGlvbj5cbiAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzdWJzdGl0dXRlXCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9eyB0aGlzLnByb3BzLnNwb3J0c21hbi5zdWJzdGl0dXRlID8gXCJZXCIgOiBcIk5cIiB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5nZW5PblN1YnN0aXR1dGVDaGFuZ2UoKSB9PlxuICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJOXCI+eyBfKFwibW9kZWxzLnBhcnRpY2lwYW50LnN1YnN0aXR1dGVfblwiKSB9PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIllcIj57IF8oXCJtb2RlbHMucGFydGljaXBhbnQuc3Vic3RpdHV0ZV95XCIpIH08L29wdGlvbj5cbiAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImRlbCBidG4gYnRuLWRhbmdlclwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17IHRoaXMucHJvcHMub25TcG9ydHNtYW5SZW1vdmUgfT5YPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbn1cblxuY2xhc3MgUGFydGljaXBhbnRFZGl0b3JSb3dTcG9ydHNtZW5MaXN0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBnZW5PbkNoYW5nZShpZHgpIHtcbiAgICAgICAgcmV0dXJuIChmaWVsZCwgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIGxldCBsaXN0ID0gY2xvbmUodGhpcy5wcm9wcy5zcG9ydHNtZW4pO1xuICAgICAgICAgICAgbGlzdFtpZHhdW2ZpZWxkXSA9IHZhbHVlO1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZShcInNwb3J0c21lblwiLCBsaXN0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhZGRTcG9ydHNtYW4oKSB7XG4gICAgICAgIGxldCBsaXN0ID0gY2xvbmUodGhpcy5wcm9wcy5zcG9ydHNtZW4pO1xuICAgICAgICBsaXN0LnB1c2goe1xuICAgICAgICAgICAgXCJsYXN0X25hbWVcIjogXCJcIixcbiAgICAgICAgICAgIFwiZmlyc3RfbmFtZVwiOiBcIlwiLFxuICAgICAgICAgICAgXCJ5ZWFyX29mX2JpcnRoXCI6IFwiMFwiLFxuICAgICAgICAgICAgXCJnZW5kZXJcIjogXCJGXCIsXG4gICAgICAgICAgICBcInN1YnN0aXR1dGVcIjogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKFwic3BvcnRzbWVuXCIsIGxpc3QpO1xuICAgIH1cbiAgICByZW1vdmVTcG9ydHNtYW4oaWR4KSB7XG4gICAgICAgIGxldCBsaXN0ID0gY2xvbmUodGhpcy5wcm9wcy5zcG9ydHNtZW4pO1xuICAgICAgICBsaXN0LnNwbGljZShpZHgsIDEpO1xuICAgICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKFwic3BvcnRzbWVuXCIsIGxpc3QpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2PlxuICAgICAgICAgICAgPGg0PnsgXyhcIm1vZGVscy5wYXJ0aWNpcGFudC5zcG9ydHNtZW5cIikgfTwvaDQ+XG4gICAgICAgICAgICB7IHRoaXMucHJvcHMuc3BvcnRzbWVuLm1hcCgoc3AsIGlkeCkgPT5cbiAgICAgICAgICAgICAgICA8UGFydGljaXBhbnRFZGl0b3JSb3dTcG9ydHNtYW5cbiAgICAgICAgICAgICAgICAgICAga2V5PXsgaWR4IH1cbiAgICAgICAgICAgICAgICAgICAgc3BvcnRzbWFuPXsgc3AgfVxuICAgICAgICAgICAgICAgICAgICBvblNwb3J0c21hblJlbW92ZT17IHRoaXMucmVtb3ZlU3BvcnRzbWFuLmJpbmQodGhpcywgaWR4KSB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5nZW5PbkNoYW5nZShpZHgpIH0gLz5cbiAgICAgICAgICAgICkgfVxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGggYnRuIGJ0bi1zbSBidG4tZGVmYXVsdFwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17IHRoaXMuYWRkU3BvcnRzbWFuLmJpbmQodGhpcykgfT57IF8oXCJnbG9iYWwuYnV0dG9ucy5hZGRcIikgfTwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG5cbmNsYXNzIFBhcnRpY2lwYW50RWRpdG9yUm93UHJvZ3JhbUVkaXRvckVsZW1lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGdlbk9uQ2hhbmdlKGZpZWxkKSB7XG4gICAgICAgIHJldHVybiAoZXZlbnQpID0+IHRoaXMucHJvcHMub25DaGFuZ2UoZmllbGQsIGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiYWNyb2JhdGljXCI+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZGVzY3JpcHRpb25cIlxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXsgXyhcIm1vZGVscy5wYXJ0aWNpcGFudC5hY3JvX2Rlc2NyaXB0aW9uXCIpIH1cbiAgICAgICAgICAgICAgICB2YWx1ZT17IHRoaXMucHJvcHMuZWxlbWVudC5kZXNjcmlwdGlvbiB9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLmdlbk9uQ2hhbmdlKFwiZGVzY3JpcHRpb25cIikgfSAvPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInNjb3JlXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17IF8oXCJtb2RlbHMucGFydGljaXBhbnQuYWNyb19zY29yZVwiKSB9XG4gICAgICAgICAgICAgICAgdmFsdWU9eyB0aGlzLnByb3BzLmVsZW1lbnQuc2NvcmUgfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsgdGhpcy5nZW5PbkNoYW5nZShcInNjb3JlXCIpIH0gLz5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJkZWwgYnRuIGJ0bi1kYW5nZXJcIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnByb3BzLm9uRWxlbWVudFJlbW92ZSB9Plg8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgfVxufVxuXG5jbGFzcyBQYXJ0aWNpcGFudEVkaXRvclJvd1Byb2dyYW1FZGl0b3JFbGVtZW50cyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZWxlbWVudHM6IGNsb25lKHRoaXMucHJvcHMuZWxlbWVudHMpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjaGFuZ2VFbGVtZW50cyhmdW5jKSB7XG4gICAgICAgIGxldCBlbGVtZW50cyA9IGNsb25lKHRoaXMuc3RhdGUuZWxlbWVudHMpO1xuICAgICAgICBlbGVtZW50cyA9IGZ1bmMoZWxlbWVudHMpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtlbGVtZW50c30pO1xuICAgIH1cbiAgICBvbkNoYW5nZShpZHgsIGZpZWxkLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLmNoYW5nZUVsZW1lbnRzKChlbGVtZW50cykgPT4ge1xuICAgICAgICAgICAgZWxlbWVudHNbaWR4XVtmaWVsZF0gPSB2YWx1ZTtcbiAgICAgICAgICAgIHJldHVybiBlbGVtZW50cztcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFkZEVsZW1lbnQoKSB7XG4gICAgICAgIHRoaXMuY2hhbmdlRWxlbWVudHMoKGVsZW1lbnRzKSA9PiB7XG4gICAgICAgICAgICBlbGVtZW50cy5wdXNoKHtcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcbiAgICAgICAgICAgICAgICBzY29yZTogMCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnRzO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVtb3ZlRWxlbWVudChpZHgpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VFbGVtZW50cygoZWxlbWVudHMpID0+IHtcbiAgICAgICAgICAgIGVsZW1lbnRzLnNwbGljZShpZHgsIDEpO1xuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnRzO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgbG9hZChkYXRhKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWxlbWVudHM6IGRhdGEubWFwKGUgPT4gKHtcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZVswXSxcbiAgICAgICAgICAgICAgICBzY29yZTogZVsxXSxcbiAgICAgICAgICAgIH0pKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuZWxlbWVudHMubWFwKGVsZW1lbnQgPT4gKHtcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBlbGVtZW50LmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgc2NvcmU6IHBhcnNlRmxvYXQoZWxlbWVudC5zY29yZSkgfHwgMCxcbiAgICAgICAgfSkpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImVsZW1lbnRzXCI+XG4gICAgICAgICAgICB7IHRoaXMuc3RhdGUuZWxlbWVudHMubWFwKChlbGVtZW50LCBpZHgpID0+XG4gICAgICAgICAgICAgICAgPFBhcnRpY2lwYW50RWRpdG9yUm93UHJvZ3JhbUVkaXRvckVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAga2V5PXsgaWR4IH1cbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudD17IGVsZW1lbnQgfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzLCBpZHgpIH1cbiAgICAgICAgICAgICAgICAgICAgb25FbGVtZW50UmVtb3ZlPXsgdGhpcy5yZW1vdmVFbGVtZW50LmJpbmQodGhpcywgaWR4KSB9Lz5cbiAgICAgICAgICAgICkgfVxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1zbSBidG4tZGVmYXVsdCBmdWxsLXdpZHRoXCIgb25DbGljaz17IHRoaXMuYWRkRWxlbWVudC5iaW5kKHRoaXMpIH0+XG4gICAgICAgICAgICAgICAgeyBfKFwiZ2xvYmFsLmJ1dHRvbnMuYWRkXCIpIH1cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG5cbmNsYXNzIFBhcnRpY2lwYW50RWRpdG9yUm93UHJvZ3JhbUVkaXRvciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgbG9hZEFjcm9iYXRpY3MoKSB7XG4gICAgICAgIHN3YWwoe1xuICAgICAgICAgICAgdGl0bGU6IF8oXCJhZG1pbi5oZWFkZXJzLmxvYWRfYWNyb2JhdGljc1wiKSxcbiAgICAgICAgICAgIHRleHQ6IF8oXCJhZG1pbi5sYWJlbHMucGFzdGVfYWNyb1wiKSxcbiAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsXG4gICAgICAgICAgICBjbG9zZU9uQ29uZmlybTogZmFsc2UsXG4gICAgICAgICAgICB0eXBlOiBcImlucHV0XCIsXG4gICAgICAgICAgICBhbmltYXRpb246IGZhbHNlLFxuICAgICAgICB9LCB2YWx1ZSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxldCBkYXRhID0gSlNPTi5wYXJzZSh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5yZWZzLmVsZW1lbnRzX2VkaXRvci5sb2FkKGRhdGEpO1xuICAgICAgICAgICAgICAgIHN3YWwuY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChTeW50YXhFcnJvcikge1xuICAgICAgICAgICAgICAgIHNob3dFcnJvcihfKFwiZXJyb3JzLmFkbWluLmxvYWRfc3ludGF4X2Vycm9yXCIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMucmVmcy5uYW1lLnZhbHVlLFxuICAgICAgICAgICAgZGVmYXVsdF9mb3I6IHRoaXMucmVmcy5kZWZhdWx0X2Zvci52YWx1ZSxcbiAgICAgICAgICAgIGFjcm9iYXRpY3M6IHRoaXMucmVmcy5lbGVtZW50c19lZGl0b3Iuc2VyaWFsaXplKCksXG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgY2xhc3NlcyA9IFtcInByb2dyYW0tZWRpdG9yXCJdO1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5jcmVhdGluZykge1xuICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKFwiY3JlYXRlXCIpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxmb3JtIGNsYXNzTmFtZT17IGNsYXNzZXMuam9pbihcIiBcIikgfSBvblN1Ym1pdD17IGUgPT4geyBlLnByZXZlbnREZWZhdWx0KCk7IHRoaXMucHJvcHMub25TdWJtaXQodGhpcy5zZXJpYWxpemUoKSkgfSB9PlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgcmVmPVwibmFtZVwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibmFtZVwiXG4gICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXsgdGhpcy5wcm9wcy5wcm9ncmFtLm5hbWUgfHwgXCJcIiB9XG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9eyBfKFwibW9kZWxzLnByb2dyYW0ubmFtZVwiKSB9IC8+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICByZWY9XCJkZWZhdWx0X2ZvclwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZGVmYXVsdC1mb3JcIlxuICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17IHRoaXMucHJvcHMucHJvZ3JhbS5kZWZhdWx0X2ZvciB8fCBcIlwiIH1cbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17IF8oXCJtb2RlbHMucHJvZ3JhbS5kZWZhdWx0X2ZvclwiKSB9IC8+XG4gICAgICAgICAgICA8UGFydGljaXBhbnRFZGl0b3JSb3dQcm9ncmFtRWRpdG9yRWxlbWVudHNcbiAgICAgICAgICAgICAgICByZWY9XCJlbGVtZW50c19lZGl0b3JcIlxuICAgICAgICAgICAgICAgIGVsZW1lbnRzPXsgdGhpcy5wcm9wcy5wcm9ncmFtLmFjcm9iYXRpY3MgfHwgW10gfSAvPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwdWxsLXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1zbSBidG4tZGVmYXVsdFwiIG9uQ2xpY2s9eyB0aGlzLmxvYWRBY3JvYmF0aWNzLmJpbmQodGhpcykgfT5cbiAgICAgICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4uYnV0dG9ucy5sb2FkX2Fjcm9cIikgfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tc20gYnRuLXByaW1hcnlcIj5cbiAgICAgICAgICAgICAgICB7IF8oXCJnbG9iYWwuYnV0dG9ucy5zdWJtaXRcIikgfVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJidG4gYnRuLXNtIGJ0bi1kYW5nZXJcIiBvbkNsaWNrPXsgdGhpcy5wcm9wcy5vblN0b3BFZGl0aW5nIH0+XG4gICAgICAgICAgICAgICAgeyBfKFwiZ2xvYmFsLmJ1dHRvbnMuZGlzY2FyZFwiKSB9XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9mb3JtPlxuICAgIH1cbn1cblxuY2xhc3MgUGFydGljaXBhbnRFZGl0b3JSb3dQcm9ncmFtQ3JlYXRvciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RvcEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGFydEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIG9uU3VibWl0KGRhdGEpIHtcbiAgICAgICAgQXBpKFwicHJvZ3JhbS5jcmVhdGVcIiwgeyBwYXJ0aWNpcGFudF9pZDogdGhpcy5wcm9wcy5wYXJ0aWNpcGFudF9pZCwgZGF0YTogZGF0YSB9KVxuICAgICAgICAgICAgLm9uU3VjY2Vzcyh0aGlzLnN0b3BFZGl0aW5nLmJpbmQodGhpcykpXG4gICAgICAgICAgICAuc2VuZCgpO1xuICAgIH1cbiAgICByZW5kZXJCb2R5KCkge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5lZGl0aW5nKSB7XG4gICAgICAgICAgICByZXR1cm4gPFBhcnRpY2lwYW50RWRpdG9yUm93UHJvZ3JhbUVkaXRvclxuICAgICAgICAgICAgICAgIGNyZWF0aW5nXG4gICAgICAgICAgICAgICAgb25TdWJtaXQ9eyB0aGlzLm9uU3VibWl0LmJpbmQodGhpcykgfVxuICAgICAgICAgICAgICAgIG9uU3RvcEVkaXRpbmc9eyB0aGlzLnN0b3BFZGl0aW5nLmJpbmQodGhpcykgfVxuICAgICAgICAgICAgICAgIHByb2dyYW09eyB7fSB9IC8+XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzTmFtZT1cImJ0biBidG4tc20gYnRuLWRlZmF1bHQgZnVsbC13aWR0aFwiIG9uQ2xpY2s9eyB0aGlzLnN0YXJ0RWRpdGluZy5iaW5kKHRoaXMpIH0+XG4gICAgICAgICAgICB7IF8oXCJnbG9iYWwuYnV0dG9ucy5hZGRcIikgfVxuICAgICAgICA8L2J1dHRvbj5cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJwcm9ncmFtLWNyZWF0b3JcIj5cbiAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJCb2R5KCkgfVxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG5cbmNsYXNzIFBhcnRpY2lwYW50RWRpdG9yUm93UHJvZ3JhbSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RvcEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGFydEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIG9uRGVsQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgc2hvd0NvbmZpcm0oXyhcImFkbWluLmNvbmZpcm1zLmRlbGV0ZV9wcm9ncmFtXCIpLCAoKSA9PiB7XG4gICAgICAgICAgICBBcGkoXCJwcm9ncmFtLmRlbGV0ZVwiLCB7IHByb2dyYW1faWQ6IHRoaXMucHJvcHMucHJvZ3JhbS5pZCB9KS5vblN1Y2Nlc3MoKCkgPT4gc3dhbC5jbG9zZSgpKS5zZW5kKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBvblN1Ym1pdChkYXRhKSB7XG4gICAgICAgIEFwaShcInByb2dyYW0uc2V0XCIsIHsgcHJvZ3JhbV9pZDogdGhpcy5wcm9wcy5wcm9ncmFtLmlkLCBkYXRhOiBkYXRhIH0pXG4gICAgICAgICAgICAub25TdWNjZXNzKHRoaXMuc3RvcEVkaXRpbmcuYmluZCh0aGlzKSlcbiAgICAgICAgICAgIC5zZW5kKCk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuZWRpdGluZykge1xuICAgICAgICAgICAgcmV0dXJuIDxQYXJ0aWNpcGFudEVkaXRvclJvd1Byb2dyYW1FZGl0b3JcbiAgICAgICAgICAgICAgICBvblN1Ym1pdD17IHRoaXMub25TdWJtaXQuYmluZCh0aGlzKSB9XG4gICAgICAgICAgICAgICAgb25TdG9wRWRpdGluZz17IHRoaXMuc3RvcEVkaXRpbmcuYmluZCh0aGlzKSB9XG4gICAgICAgICAgICAgICAgey4uLnRoaXMucHJvcHN9IC8+XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxkaXY+XG4gICAgICAgICAgICA8aDU+XG4gICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLnByb2dyYW0ubmFtZSB9XG4gICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLnByb2dyYW0uZGVmYXVsdF9mb3IgPyA8ZW0+Jm5ic3A7KHsgdGhpcy5wcm9wcy5wcm9ncmFtLmRlZmF1bHRfZm9yIH0pPC9lbT4gOiBudWxsIH1cbiAgICAgICAgICAgICAgICAmbmJzcDsvJm5ic3A7PGEgaHJlZj1cIiNcIiBvbkNsaWNrPXsgKGUpID0+IHsgZS5wcmV2ZW50RGVmYXVsdCgpOyB0aGlzLnN0YXJ0RWRpdGluZygpOyB9IH0+0KDQtdC00LDQutGC0LjRgNC+0LLQsNGC0Yw8L2E+XG4gICAgICAgICAgICAgICAgJm5ic3A7LyZuYnNwOzxhIGhyZWY9XCIjXCIgb25DbGljaz17IHRoaXMub25EZWxDbGljay5iaW5kKHRoaXMpIH0+0KPQtNCw0LvQuNGC0Yw8L2E+XG4gICAgICAgICAgICA8L2g1PlxuICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGggcHJvZ3JhbVwiPjx0Ym9keT5cbiAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5wcm9ncmFtLmFjcm9iYXRpY3MubWFwKChlbGVtZW50LCBpZHgpID0+XG4gICAgICAgICAgICAgICAgPHRyIGtleT17IGlkeCB9PlxuICAgICAgICAgICAgICAgICAgICA8dGQ+eyBlbGVtZW50LmRlc2NyaXB0aW9uIH08L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwidGV4dC1yaWdodFwiPnsgZWxlbWVudC5zY29yZS50b0ZpeGVkKDEpIH08L3RkPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICApIH1cbiAgICAgICAgICAgIDwvdGJvZHk+PC90YWJsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgfVxufVxuXG5jbGFzcyBQYXJ0aWNpcGFudEVkaXRvclJvd1Byb2dyYW1zIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2PlxuICAgICAgICAgICAgPGg0PnsgXyhcIm1vZGVscy5wYXJ0aWNpcGFudC5wcm9ncmFtc1wiKSB9PC9oND5cbiAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5wcm9ncmFtcy5tYXAoKHApID0+XG4gICAgICAgICAgICAgICAgPFBhcnRpY2lwYW50RWRpdG9yUm93UHJvZ3JhbVxuICAgICAgICAgICAgICAgICAgICBrZXk9eyBwLmlkIH1cbiAgICAgICAgICAgICAgICAgICAgcHJvZ3JhbT17IHAgfSAvPlxuICAgICAgICAgICAgKSB9XG4gICAgICAgICAgICB7IHRoaXMucHJvcHMubmV3UGFydGljaXBhbnRcbiAgICAgICAgICAgICAgICA/IDxkaXYgY2xhc3NOYW1lPVwiYWxlcnQgYWxlcnQtaW5mb1wiPnsgXyhcImFkbWluLmFsZXJ0cy5hZGRfcHJvZ3JhbXNfYWZ0ZXJfY3JlYXRpb25cIikgfTwvZGl2PlxuICAgICAgICAgICAgICAgIDogPFBhcnRpY2lwYW50RWRpdG9yUm93UHJvZ3JhbUNyZWF0b3JcbiAgICAgICAgICAgICAgICAgICAgcGFydGljaXBhbnRfaWQ9eyB0aGlzLnByb3BzLnBhcnRpY2lwYW50X2lkIH0vPlxuICAgICAgICAgICAgfVxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG5cbmNsYXNzIFBhcnRpY2lwYW50RWRpdG9yUm93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIGxldCBwID0gdGhpcy5wcm9wcy5wYXJ0aWNpcGFudDtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHBhcnRpY2lwYW50OiB7XG4gICAgICAgICAgICAgICAgbnVtYmVyOiBwLm51bWJlcixcbiAgICAgICAgICAgICAgICBjbHViX2lkOiBwLmNsdWIuaWQsXG4gICAgICAgICAgICAgICAgY29hY2hlczogcC5jb2FjaGVzLFxuICAgICAgICAgICAgICAgIGZvcm1hdGlvbl9uYW1lOiBwLmZvcm1hdGlvbl9uYW1lLFxuICAgICAgICAgICAgICAgIHNwb3J0c21lbjogY2xvbmUocC5zcG9ydHNtZW4pLFxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBvbkNoYW5nZShmaWVsZCwgdmFsdWUpIHtcbiAgICAgICAgbGV0IHBhcnRpY2lwYW50ID0gY2xvbmUodGhpcy5zdGF0ZS5wYXJ0aWNpcGFudCk7XG4gICAgICAgIHBhcnRpY2lwYW50W2ZpZWxkXSA9IHZhbHVlO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHBhcnRpY2lwYW50OiBwYXJ0aWNpcGFudCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNlcnRpYWxpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLnBhcnRpY2lwYW50O1xuICAgIH1cbiAgICBvblN1Ym1pdChldmVudCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBpZiAoIXRoaXMucHJvcHMubmV3UGFydGljaXBhbnQpIHtcbiAgICAgICAgICAgIEFwaShcInBhcnRpY2lwYW50LnNldFwiLCB7XG4gICAgICAgICAgICAgICAgcGFydGljaXBhbnRfaWQ6IHRoaXMucHJvcHMucGFydGljaXBhbnQuaWQsXG4gICAgICAgICAgICAgICAgZGF0YTogdGhpcy5zZXJ0aWFsaXplKCksXG4gICAgICAgICAgICB9KS5vblN1Y2Nlc3ModGhpcy5wcm9wcy5zdG9wRWRpdGluZykuc2VuZCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgQXBpKFwicGFydGljaXBhbnQuY3JlYXRlXCIsIHtcbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2lkOiB0aGlzLnByb3BzLmRpc2NpcGxpbmVfaWQsXG4gICAgICAgICAgICAgICAgZGF0YTogdGhpcy5zZXJ0aWFsaXplKCksXG4gICAgICAgICAgICB9KS5vblN1Y2Nlc3ModGhpcy5wcm9wcy5zdG9wRWRpdGluZykuc2VuZCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIDx0ciBjbGFzc05hbWU9eyBcImVkaXRvclwiICsgKHRoaXMucHJvcHMubmV3UGFydGljaXBhbnQgPyBcIiBjcmVhdGVcIiA6IFwiXCIgKSB9PlxuICAgICAgICAgICAgPHRkIGNvbFNwYW49XCI2XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbWQtN1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gb25TdWJtaXQ9eyB0aGlzLm9uU3VibWl0LmJpbmQodGhpcykgfSBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1tZC01IGdlbmVyYWwtaW5mb1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8UGFydGljaXBhbnRFZGl0b3JSb3dHZW5lcmFsSW5mb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFydGljaXBhbnQ9eyB0aGlzLnN0YXRlLnBhcnRpY2lwYW50IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsdWJzPXsgdGhpcy5wcm9wcy5jbHVicyB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnV0dG9uc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiPnsgXyhcImdsb2JhbC5idXR0b25zLnN1Ym1pdFwiKSB9PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuIGJ0bi1kYW5nZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyB0aGlzLnByb3BzLnN0b3BFZGl0aW5nIH0+eyBfKFwiZ2xvYmFsLmJ1dHRvbnMuZGlzY2FyZFwiKSB9PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLW1kLTdcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFBhcnRpY2lwYW50RWRpdG9yUm93U3BvcnRzbWVuTGlzdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BvcnRzbWVuPXsgdGhpcy5zdGF0ZS5wYXJ0aWNpcGFudC5zcG9ydHNtZW4gfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcykgfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbWQtNVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFBhcnRpY2lwYW50RWRpdG9yUm93UHJvZ3JhbXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdQYXJ0aWNpcGFudD17IHRoaXMucHJvcHMubmV3UGFydGljaXBhbnQgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRpY2lwYW50X2lkPXsgdGhpcy5wcm9wcy5wYXJ0aWNpcGFudC5pZCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZ3JhbXM9eyB0aGlzLnByb3BzLnBhcnRpY2lwYW50LnByb2dyYW1zIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgPC90cj5cbiAgICB9XG59XG5cbmNsYXNzIFBhcnRpY2lwYW50Um93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBlZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGFydEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0b3BFZGl0aW5nKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGVkaXRpbmc6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgb25EZWxldGUoZXZlbnQpIHtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIHNob3dDb25maXJtKF8oXCJhZG1pbi5jb25maXJtcy5kZWxldGVfcGFydGljaXBhbnRcIiksICgpID0+IHtcbiAgICAgICAgICAgIEFwaShcInBhcnRpY2lwYW50LmRlbGV0ZVwiLCB7XG4gICAgICAgICAgICAgICAgcGFydGljaXBhbnRfaWQ6IHRoaXMucHJvcHMucGFydGljaXBhbnQuaWQsXG4gICAgICAgICAgICB9KS5vblN1Y2Nlc3MoKCkgPT4gc3dhbC5jbG9zZSgpKS5zZW5kKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZW5kZXJFZGl0b3IoKSB7XG4gICAgICAgIHJldHVybiA8UGFydGljaXBhbnRFZGl0b3JSb3dcbiAgICAgICAgICAgIG5ld1BhcnRpY2lwYW50PXsgZmFsc2UgfVxuICAgICAgICAgICAgc3RvcEVkaXRpbmc9eyB0aGlzLnN0b3BFZGl0aW5nLmJpbmQodGhpcykgfVxuICAgICAgICAgICAgeyAuLi50aGlzLnByb3BzIH0gLz5cbiAgICB9XG4gICAgcmVuZGVyVmlld2VyKCkge1xuICAgICAgICBsZXQgcCA9IHRoaXMucHJvcHMucGFydGljaXBhbnQ7XG4gICAgICAgIHJldHVybiA8dHIgY2xhc3NOYW1lPVwidmlld2VyXCIgb25DbGljaz17IHRoaXMuc3RhcnRFZGl0aW5nLmJpbmQodGhpcykgfT5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJudW1iZXJcIj57IHAubnVtYmVyIH08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cIm5hbWVcIj57IHAubmFtZSB9PC90ZD5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJjbHViLW5hbWVcIj57IHAuY2x1Yi5uYW1lIH08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImNsdWItY2l0eVwiPnsgcC5jbHViLmNpdHkgfTwvdGQ+XG4gICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwiZGVsZXRlXCI+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLWRhbmdlclwiIG9uQ2xpY2s9eyB0aGlzLm9uRGVsZXRlLmJpbmQodGhpcykgfT5YPC9idXR0b24+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICA8L3RyPjtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5lZGl0aW5nKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJFZGl0b3IoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlclZpZXdlcigpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5jbGFzcyBQYXJ0aWNpcGFudENyZWF0aW9uUm93IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBlZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGFydEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0b3BFZGl0aW5nKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGVkaXRpbmc6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVuZGVyRWRpdG9yKCkge1xuICAgICAgICBsZXQgZW1wdHlfZGF0YSA9IHtcbiAgICAgICAgICAgIFwiZm9ybWF0aW9uX25hbWVcIjogXCJcIixcbiAgICAgICAgICAgIFwiY29hY2hlc1wiOiBcIlwiLFxuICAgICAgICAgICAgXCJudW1iZXJcIjogXCJcIixcbiAgICAgICAgICAgIFwiY2x1YlwiOiB7IFwiaWRcIjogdGhpcy5wcm9wcy5jbHVic1swXSA/IHRoaXMucHJvcHMuY2x1YnNbMF0uaWQgOiBudWxsIH0sXG4gICAgICAgICAgICBcInNwb3J0c21lblwiOiBbXSxcbiAgICAgICAgICAgIFwiYWNyb2JhdGljc1wiOiBbXSxcbiAgICAgICAgICAgIFwicHJvZ3JhbXNcIjogW10sXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxQYXJ0aWNpcGFudEVkaXRvclJvd1xuICAgICAgICAgICAgbmV3UGFydGljaXBhbnRcbiAgICAgICAgICAgIHN0b3BFZGl0aW5nPXsgdGhpcy5zdG9wRWRpdGluZy5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgIHBhcnRpY2lwYW50PXsgZW1wdHlfZGF0YSB9XG4gICAgICAgICAgICB7IC4uLnRoaXMucHJvcHMgfSAvPjtcbiAgICB9XG4gICAgcmVuZGVyQnV0dG9uKCkge1xuICAgICAgICByZXR1cm4gPHRyPjx0ZCBjb2xTcGFuPVwiNlwiPlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tZGVmYXVsdCBmdWxsLXdpZHRoXCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsgdGhpcy5zdGFydEVkaXRpbmcuYmluZCh0aGlzKSB9PnsgXyhcImFkbWluLmJ1dHRvbnMuYWRkX3BhcnRpY2lwYW50XCIpIH08L2J1dHRvbj5cbiAgICAgICAgPC90ZD48L3RyPlxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLmVkaXRpbmcgPyB0aGlzLnJlbmRlckVkaXRvcigpIDogdGhpcy5yZW5kZXJCdXR0b24oKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBfIH0gZnJvbSBcImkxMG4vbG9hZGVyXCI7XG5pbXBvcnQgeyBBcGkgfSBmcm9tIFwic2VydmVyL2FwaVwiO1xuaW1wb3J0IHsgc3RvcmFnZSB9IGZyb20gXCJzZXJ2ZXIvc3RvcmFnZVwiO1xuaW1wb3J0IHsgbWVzc2FnZV9kaXNwYXRjaGVyIH0gZnJvbSBcInNlcnZlci9tZXNzYWdlX2Rpc3BhdGNoZXJcIjtcbmltcG9ydCB7IExvYWRlciB9IGZyb20gXCJ1aS9jb21wb25lbnRzXCI7XG5pbXBvcnQgeyBQcmludGFibGUgfSBmcm9tIFwidWkvcHJpbnRhYmxlXCI7XG5pbXBvcnQgeyBEb2N4IH0gZnJvbSBcImNvbW1vbi9kb2N4XCI7XG5pbXBvcnQgeyBDbXBDaGFpbiB9IGZyb20gXCJjb21tb24vdG9vbHNcIjtcblxuY2xhc3MgUGFydGljaXBhbnROdW1iZXJzTnVtYmVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cInBhcnRpY2lwYW50XCI+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJzcGFjZXItdG9wXCI+Jm5ic3A7PC9wPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb21wZXRpdGlvblwiPjxwPnsgdGhpcy5wcm9wcy5jb21wZXRpdGlvbl9uYW1lIH0mbmJzcDs8L3A+PC9kaXY+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJzcGFjZXItdG9wMlwiPiZuYnNwOzwvcD5cbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm51bWJlclwiPnsgdGhpcy5wcm9wcy5wYXJ0aWNpcGFudC5udW1iZXIgfTwvcD5cbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm5hbWVcIj57IHRoaXMucHJvcHMucGFydGljaXBhbnQubmFtZSB9Jm5ic3A7PC9wPlxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiZGlzY2lwbGluZVwiPnsgdGhpcy5wcm9wcy5wYXJ0aWNpcGFudC5kaXNjaXBsaW5lX25hbWUgfSZuYnNwOzwvcD5cbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cImNsdWJcIj57IHRoaXMucHJvcHMucGFydGljaXBhbnQuY2x1Yi5uYW1lIH0gJm1kYXNoOyB7IHRoaXMucHJvcHMucGFydGljaXBhbnQuY2x1Yi5jaXR5IH08L3A+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJzcGFjZXItYm90dG9tXCI+Jm5ic3A7PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG5cbmNsYXNzIFBhcnRpY2lwYW50TnVtYmVycyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgbWFrZVBhcnRpY2lwYW50c0xpc3QoKSB7XG4gICAgICAgIGxldCByZXMgPSBbXTtcbiAgICAgICAgdGhpcy5wcm9wcy5kaXNjaXBsaW5lcy5mb3JFYWNoKChkaXNjaXBsaW5lLCBpZHgpID0+XG4gICAgICAgICAgICByZXMgPSByZXMuY29uY2F0KGRpc2NpcGxpbmUucGFydGljaXBhbnRzLm1hcCgocGFydGljaXBhbnQpID0+ICh7XG4gICAgICAgICAgICAgICAgaWQ6IHBhcnRpY2lwYW50LmlkLFxuICAgICAgICAgICAgICAgIG51bWJlcjogcGFydGljaXBhbnQubnVtYmVyLFxuICAgICAgICAgICAgICAgIG5hbWU6IHBhcnRpY2lwYW50Lm5hbWUsXG4gICAgICAgICAgICAgICAgY2x1YjogcGFydGljaXBhbnQuY2x1YixcbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2lkeDogaWR4LFxuICAgICAgICAgICAgICAgIGRpc2NpcGxpbmVfbmFtZTogZGlzY2lwbGluZS5uYW1lLFxuICAgICAgICAgICAgfSkpKVxuICAgICAgICApO1xuICAgICAgICByZXMuc29ydCgoYSwgYikgPT4gQ21wQ2hhaW4oKVxuICAgICAgICAgICAgLmNtcChhLmNsdWIuY2l0eSwgYi5jbHViLmNpdHkpXG4gICAgICAgICAgICAuY21wKGEuY2x1Yi5uYW1lLCBiLmNsdWIubmFtZSlcbiAgICAgICAgICAgIC5jbXAoYS5kaXNjaXBsaW5lX2lkeCwgYi5kaXNjaXBsaW5lX2lkeClcbiAgICAgICAgICAgIC5jbXAoYS5udW1iZXIsIGIubnVtYmVyKVxuICAgICAgICAgICAgLmVuZCgpXG4gICAgICAgIClcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gICAgcmVuZGVyKCkgeyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSByZWFjdC9zb3J0LWNvbXBcbiAgICAgICAgcmV0dXJuIDxkaXYgcmVmPVwiY29udGVudFwiIGNsYXNzTmFtZT1cInByaW50LW9ubHlcIj5cbiAgICAgICAgICAgIHsgdGhpcy5tYWtlUGFydGljaXBhbnRzTGlzdCgpLm1hcCgocGFydGljaXBhbnQpID0+XG4gICAgICAgICAgICAgICAgPFBhcnRpY2lwYW50TnVtYmVyc051bWJlclxuICAgICAgICAgICAgICAgICAgICBwYXJ0aWNpcGFudD17IHBhcnRpY2lwYW50IH1cbiAgICAgICAgICAgICAgICAgICAgY29tcGV0aXRpb25fbmFtZT17IHRoaXMucHJvcHMuY29tcGV0aXRpb25fbmFtZSB9XG4gICAgICAgICAgICAgICAgICAgIGtleT17IHBhcnRpY2lwYW50LmlkIH0gLz5cbiAgICAgICAgICAgICkgfVxuICAgICAgICA8L2Rpdj5cbiAgICB9XG4gICAgY3JlYXRlRG9jeChmaWxlbmFtZT1cIm51bWJlcnMuZG9jeFwiKSB7XG4gICAgICAgIERvY3goZmlsZW5hbWUpXG4gICAgICAgICAgICAuc2V0TWFyZ2lucyhbMCwgMTAsIDAsIDEwXSlcbiAgICAgICAgICAgIC5zZXRCb2R5KHRoaXMucmVmcy5jb250ZW50LmlubmVySFRNTClcbiAgICAgICAgICAgIC5hZGRTdHlsZShcImRpdlwiLCBcIm1hcmdpblwiLCBcIjBcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcImRpdlwiLCBcInBhZGRpbmdcIiwgXCIwXCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCJwXCIsIFwibXNvLWxpbmUtaGVpZ2h0LXJ1bGVcIiwgXCJleGFjdGx5XCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCJkaXZcIiwgXCJtc28tbGluZS1oZWlnaHQtcnVsZVwiLCBcImV4YWN0bHlcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5wYXJ0aWNpcGFudFwiLCBcInRleHQtYWxpZ25cIiwgXCJjZW50ZXJcIilcblxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLnNwYWNlci10b3BcIiwgXCJsaW5lLWhlaWdodFwiLCBcIjIwcHRcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5jb21wZXRpdGlvblwiLCBcImxpbmUtaGVpZ2h0XCIsIFwiMTVwdFwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLnNwYWNlci10b3AyXCIsIFwibGluZS1oZWlnaHRcIiwgXCIzMHB0XCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIubnVtYmVyXCIsIFwibGluZS1oZWlnaHRcIiwgXCIzMDBwdFwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLm5hbWVcIiwgXCJsaW5lLWhlaWdodFwiLCBcIjEwcHRcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5jbHViXCIsIFwibGluZS1oZWlnaHRcIiwgXCIxMHB0XCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuZGlzY2lwbGluZVwiLCBcImxpbmUtaGVpZ2h0XCIsIFwiMTBwdFwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLnNwYWNlci1ib3R0b21cIiwgXCJsaW5lLWhlaWdodFwiLCBcIjE2cHRcIilcblxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLm51bWJlclwiLCBcImZvbnQtc2l6ZVwiLCBcIjM1MHB0XCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIubnVtYmVyXCIsIFwibGV0dGVyLXNwYWNpbmc6XCIsIFwiLTIwLjBwdFwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLmNvbXBldGl0aW9uXCIsIFwiZm9udC1zaXplXCIsIFwiMTJwdFwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLmNvbXBldGl0aW9uXCIsIFwiZm9udC13ZWlnaHRcIiwgXCJib2xkXCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuY29tcGV0aXRpb25cIiwgXCJib3JkZXItYm90dG9tXCIsIFwiMXB0IHNvbGlkIGJsYWNrXCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIubmFtZVwiLCBcImZvbnQtc2l6ZVwiLCBcIjEycHRcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5uYW1lXCIsIFwiZm9udC13ZWlnaHRcIiwgXCJib2xkXCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuY2x1YlwiLCBcImZvbnQtc2l6ZVwiLCBcIjEycHRcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5kaXNjaXBsaW5lXCIsIFwiZm9udC1zaXplXCIsIFwiMTJwdFwiKVxuICAgICAgICAgICAgLnNhdmUoKTtcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTdGFydExpc3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIG5hbWU6IG51bGwsXG4gICAgICAgICAgICBpbmNsdWRlX2Zvcm1hdGlvbl9zcG9ydHNtZW46IGZhbHNlLFxuICAgICAgICAgICAgaW5jbHVkZV9hY3JvYmF0aWNzOiBmYWxzZSxcbiAgICAgICAgfVxuICAgICAgICBtZXNzYWdlX2Rpc3BhdGNoZXIuYWRkTGlzdGVuZXIoXCJkYl91cGRhdGVcIiwgdGhpcy5yZWxvYWRGcm9tU3RvcmFnZS5iaW5kKHRoaXMpKTtcbiAgICAgICAgbWVzc2FnZV9kaXNwYXRjaGVyLmFkZExpc3RlbmVyKFwicmVsb2FkX2RhdGFcIiwgdGhpcy5sb2FkRGF0YS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBzdG9yYWdlLmdldERvbWFpbihcInN0YXJ0X2xpc3RfXCIgKyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkKTtcbiAgICAgICAgdGhpcy5yZWxvYWRfbGlzdGVuZXIgPSBtZXNzYWdlX2Rpc3BhdGNoZXIuYWRkTGlzdGVuZXIoXCJyZWxvYWRfZGF0YVwiLCB0aGlzLmxvYWREYXRhLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmRiX3VwZGF0ZV9saXN0ZW5lciA9IG1lc3NhZ2VfZGlzcGF0Y2hlci5hZGRMaXN0ZW5lcihcImRiX3VwZGF0ZVwiLCB0aGlzLnJlbG9hZEZyb21TdG9yYWdlLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLmxvYWREYXRhKCk7XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICBtZXNzYWdlX2Rpc3BhdGNoZXIucmVtb3ZlTGlzdGVuZXIodGhpcy5yZWxvYWRfbGlzdGVuZXIpO1xuICAgICAgICBtZXNzYWdlX2Rpc3BhdGNoZXIucmVtb3ZlTGlzdGVuZXIodGhpcy5kYl91cGRhdGVfbGlzdGVuZXIpO1xuICAgICAgICBzdG9yYWdlLmRlbERvbWFpbihcInN0YXJ0X2xpc3RfXCIgKyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkKTtcbiAgICB9XG4gICAgcmVsb2FkRnJvbVN0b3JhZ2UoKSB7XG4gICAgICAgIHZhciBTQ0hFTUEgPSB7XG4gICAgICAgICAgICBkaXNjaXBsaW5lczoge1xuICAgICAgICAgICAgICAgIHBhcnRpY2lwYW50czoge1xuICAgICAgICAgICAgICAgICAgICBjbHViOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgcHJvZ3JhbXM6IHt9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnNldFN0YXRlKFxuICAgICAgICAgICAgdGhpcy5zdG9yYWdlLmdldChcIkNvbXBldGl0aW9uXCIpXG4gICAgICAgICAgICAgICAgLmJ5X2lkKHRoaXMucHJvcHMuY29tcGV0aXRpb25faWQpXG4gICAgICAgICAgICAgICAgLnNlcmlhbGl6ZShTQ0hFTUEpKTtcbiAgICB9XG4gICAgbG9hZERhdGEoKSB7XG4gICAgICAgIEFwaShcImNvbXBldGl0aW9uLmdldFwiLCB7XG4gICAgICAgICAgICBjb21wZXRpdGlvbl9pZDogdGhpcy5wcm9wcy5jb21wZXRpdGlvbl9pZCxcbiAgICAgICAgICAgIGNoaWxkcmVuOiB7XG4gICAgICAgICAgICAgICAgZGlzY2lwbGluZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgcGFydGljaXBhbnRzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbHViOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2dyYW1zOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuYWRkVG9EQihcIkNvbXBldGl0aW9uXCIsIHRoaXMucHJvcHMuY29tcGV0aXRpb25faWQsIHRoaXMuc3RvcmFnZSlcbiAgICAgICAgLm9uU3VjY2Vzcyh0aGlzLnJlbG9hZEZyb21TdG9yYWdlLmJpbmQodGhpcykpXG4gICAgICAgIC5zZW5kKCk7XG4gICAgfVxuICAgIG9uQ2JDaGFuZ2UoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgaW5jbHVkZV9hY3JvYmF0aWNzOiB0aGlzLnJlZnMuY2JfYWNyby5jaGVja2VkLFxuICAgICAgICAgICAgaW5jbHVkZV9mb3JtYXRpb25fc3BvcnRzbWVuOiB0aGlzLnJlZnMuY2JfZm9ybXMuY2hlY2tlZCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIG9uRGlzY2lwbGluZUNiQ2hhbmdlKGRpc2NpcGxpbmVfaWQsIGV2ZW50KSB7XG4gICAgICAgIGxldCB1cGQgPSB7fVxuICAgICAgICB1cGRbXCJoaWRlX1wiICsgZGlzY2lwbGluZV9pZF0gPSAhZXZlbnQudGFyZ2V0LmNoZWNrZWQ7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUodXBkKTtcbiAgICB9XG4gICAgc2V0QWxsRGlzY2lwbGluZXMoc2VsZWN0ZWQsIGV2ZW50KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGxldCB1cGQgPSB7fVxuICAgICAgICB0aGlzLnN0YXRlLmRpc2NpcGxpbmVzLmZvckVhY2goKGQpID0+IHVwZFtcImhpZGVfXCIgKyBkLmlkXSA9IHNlbGVjdGVkKTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh1cGQpO1xuICAgIH1cbiAgICByZW5kZXJEaXNjaXBsaW5lKGljKSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlW1wiaGlkZV9cIiArIGljLmlkXSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxkaXYga2V5PXsgaWMuaWQgfT5cbiAgICAgICAgICAgIDxoNT48cD57IGljLm5hbWUgfTwvcD48L2g1PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkaXNjaXBsaW5lXCI+XG4gICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cImJvcmRlcmVkLXRhYmxlXCI+PHRoZWFkPlxuICAgICAgICAgICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwidy04IG51bWJlclwiPjxwPnsgXyhcIm1vZGVscy5wYXJ0aWNpcGFudC5udW1iZXJcIikgfTwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInctMjcgbmFtZVwiPjxwPnsgXyhcIm1vZGVscy5wYXJ0aWNpcGFudC5zcG9ydHNtZW5cIikgfTwvcD48L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInctOSB5ZWFyLW9mLWJpcnRoXCI+PHA+eyBfKFwibW9kZWxzLnBhcnRpY2lwYW50LnNwb3J0c21lbl95ZWFyX29mX2JpcnRoXCIpIH08L3A+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJ3LTI4IGNsdWJcIj48cD57IF8oXCJtb2RlbHMucGFydGljaXBhbnQuY2x1Yl9uYW1lXCIpIH08L3A+PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJ3LTI4IGNvYWNoZXNcIj48cD57IF8oXCJtb2RlbHMucGFydGljaXBhbnQuY29hY2hlc1wiKSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgPC90aGVhZD48dGJvZHk+XG4gICAgICAgICAgICAgICAgICAgIHsgaWMucGFydGljaXBhbnRzLm1hcCgocCkgPT4gW1xuICAgICAgICAgICAgICAgICAgICAgICAgPHRyIGtleT17IHAuaWQgfSBjbGFzc05hbWU9eyAhdGhpcy5zdGF0ZS5pbmNsdWRlX2Fjcm9iYXRpY3MgfHwgcC5wcm9ncmFtcy5sZW5ndGggPT09IDAgPyBcIlwiIDogXCJoYXMtYWNyb1wiIH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctOCBudW1iZXJcIj48cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPnsgcC5udW1iZXIgfTwvcD48L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJ3LTM2IG5hbWVcIiBjb2xTcGFuPVwiMlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwiaW5uZXJcIj48dGJvZHk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHAuZm9ybWF0aW9uX25hbWUgPyA8dHI+PHRoIGNvbFNwYW49XCIyXCI+PHAgY2xhc3NOYW1lPVwidGV4dC1sZWZ0XCI+eyBwLmZvcm1hdGlvbl9uYW1lIH08L3A+PC90aD48L3RyPiA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnN0YXRlLmluY2x1ZGVfZm9ybWF0aW9uX3Nwb3J0c21lbiB8fCAhcC5mb3JtYXRpb25fbmFtZSA/IHAuc3BvcnRzbWVuLm1hcCgocywgaWR4KSA9PiA8dHIga2V5PXsgaWR4IH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctNzVcIj48cD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzLmxhc3RfbmFtZSArIFwiIFwiICsgcy5maXJzdF9uYW1lIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzLnN1YnN0aXR1dGUgPyA8aT4gKHsgXyhcImFkbWluLmxhYmVscy5zdWJcIikgfS4pPC9pPiA6IG51bGwgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD48L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJ3LTI1XCI+PHAgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj57IHMueWVhcl9vZl9iaXJ0aCB9PC9wPjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPiApIDogbnVsbCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+PC90YWJsZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJ3LTI4IGNsdWJcIj48cD57IHAuY2x1Yi5uYW1lIH08L3A+PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwidy0yOCBjb2FjaGVzXCI+PHA+eyBwLmNvYWNoZXMuc3BsaXQoXCIsXCIpLm1hcCgoYykgPT4gW2MudHJpbSgpLCA8YnIga2V5PVwiWFwiIC8+XSkgfTwvcD48L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4sXG4gICAgICAgICAgICAgICAgICAgICAgICAhdGhpcy5zdGF0ZS5pbmNsdWRlX2Fjcm9iYXRpY3MgfHwgcC5wcm9ncmFtcy5sZW5ndGggPT09IDAgPyBudWxsIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIga2V5PXsgXCJBY3JvXCIgKyBwLmlkIH0gPjx0ZCBjbGFzc05hbWU9XCJhY3JvXCIgY29sU3Bhbj1cIjVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cImlubmVyXCI+PHRib2R5PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBwLnByb2dyYW1zLm1hcCgocHIsIHByX2lkeCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbPHRyIGtleT17IFwiSFwiICsgcHJfaWR4IH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjb2xTcGFuPVwiMlwiPjxwIGNsYXNzTmFtZT1cInRleHQtbGVmdFwiPnsgcHIubmFtZSB9PC9wPjwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5dLmNvbmNhdChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHIuYWNyb2JhdGljcy5tYXAoKGEsIGFfaWR4KSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIGtleT17IGBBXyR7cHJfaWR4fV8ke2FfaWR4fWAgfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwidy05M1wiPjxwIGNsYXNzTmFtZT1cInRleHQtbGVmdFwiPnsgYS5kZXNjcmlwdGlvbiB9PC9wPjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInctN1wiPjxwIGNsYXNzTmFtZT1cInRleHQtcmlnaHRcIj57IGEuc2NvcmUudG9GaXhlZCgxKSB9PC9wPjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+PC90YWJsZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPjwvdHI+XG4gICAgICAgICAgICAgICAgICAgIF0gKSB9XG4gICAgICAgICAgICAgICAgPC90Ym9keT48L3RhYmxlPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtcmlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz57IF8oXCJhZG1pbi5waHJhc2VzLnRvdGFsX25fcGFydGljaXBhbnRzXCIsIGljLnBhcnRpY2lwYW50cy5sZW5ndGgpIH08L3N0cm9uZz5cbiAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+O1xuICAgIH1cbiAgICByZW5kZXIoKSB7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHJlYWN0L3NvcnQtY29tcFxuICAgICAgICBpZiAodGhpcy5zdGF0ZS5uYW1lID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gPExvYWRlciAvPlxuICAgICAgICB9XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImFwcC1jb250ZW50XCI+XG4gICAgICAgICAgICA8aGVhZGVyIGNsYXNzTmFtZT1cImFwcC1oZWFkZXJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRyb2xzXCI+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5XCIgb25DbGljaz17ICgpID0+IHRoaXMuY3JlYXRlRG9jeCgpIH0+RE9DWDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiIG9uQ2xpY2s9eyAoKSA9PiB0aGlzLnJlZnMubnVtYmVycy5jcmVhdGVEb2N4KCkgfT57IF8oXCJhZG1pbi5idXR0b25zLmRvY3hfbnVtYmVyc1wiKSB9PC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGgxPnsgXyhcImFkbWluLmhlYWRlcnMuc3RhcnRfbGlzdFwiKSB9PC9oMT5cbiAgICAgICAgICAgIDwvaGVhZGVyPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhcHAtYm9keSBzdGFydC1saXN0XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250cm9sc1wiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbWQtNlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5zdGF0ZS5kaXNjaXBsaW5lcy5tYXAoKGQpID0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3dpdGNoXCIga2V5PXsgZC5pZCB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXsgIXRoaXMuc3RhdGVbXCJoaWRlX1wiICsgZC5pZF0gfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17IHRoaXMub25EaXNjaXBsaW5lQ2JDaGFuZ2UuYmluZCh0aGlzLCBkLmlkKSB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBkLm5hbWUgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cIiNcIiBvbkNsaWNrPXsgdGhpcy5zZXRBbGxEaXNjaXBsaW5lcy5iaW5kKHRoaXMsIGZhbHNlKSB9PnsgXyhcImdsb2JhbC5idXR0b25zLnNlbGVjdF9hbGxcIikgfTwvYT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiI1wiIG9uQ2xpY2s9eyB0aGlzLnNldEFsbERpc2NpcGxpbmVzLmJpbmQodGhpcywgdHJ1ZSkgfT57IF8oXCJnbG9iYWwuYnV0dG9ucy5kZXNlbGVjdF9hbGxcIikgfTwvYT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbWQtNlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3dpdGNoXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiByZWY9XCJjYl9hY3JvXCIgb25DaGFuZ2U9eyB0aGlzLm9uQ2JDaGFuZ2UuYmluZCh0aGlzKSB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IF8oXCJhZG1pbi5sYWJlbHMuaW5jbHVkZV9hY3JvYmF0aWNzXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN3aXRjaFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgcmVmPVwiY2JfZm9ybXNcIiBvbkNoYW5nZT17IHRoaXMub25DYkNoYW5nZS5iaW5kKHRoaXMpIH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgXyhcImFkbWluLmxhYmVscy5pbmNsdWRlX2Zvcm1hdGlvbl9zcG9ydHNtZW5cIikgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxQcmludGFibGVcbiAgICAgICAgICAgICAgICAgICAgcmVmPVwicHJpbnRhYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyPXsgdGhpcy5zdGF0ZS5uYW1lICsgXCIsIFwiICsgdGhpcy5zdGF0ZS5kYXRlIH1cbiAgICAgICAgICAgICAgICAgICAgdGl0bGUxPXsgXyhcImFkbWluLmhlYWRlcnMuc3RhcnRfbGlzdFwiKSB9XG4gICAgICAgICAgICAgICAgICAgIGJvZHk9eyB0aGlzLnN0YXRlLmRpc2NpcGxpbmVzLm1hcCgoZGlzKSA9PiB0aGlzLnJlbmRlckRpc2NpcGxpbmUoZGlzKSkgfSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8UGFydGljaXBhbnROdW1iZXJzXG4gICAgICAgICAgICAgICAgY29tcGV0aXRpb25fbmFtZT17IHRoaXMuc3RhdGUubmFtZSB9XG4gICAgICAgICAgICAgICAgZGlzY2lwbGluZXM9eyB0aGlzLnN0YXRlLmRpc2NpcGxpbmVzLmZpbHRlcigoZGlzKSA9PiAhdGhpcy5zdGF0ZVtcImhpZGVfXCIgKyBkaXMuaWRdKSB9XG4gICAgICAgICAgICAgICAgcmVmPVwibnVtYmVyc1wiIC8+XG4gICAgICAgIDwvZGl2PjtcbiAgICB9XG4gICAgY3JlYXRlRG9jeChmaWxlbmFtZT1cInN0YXJ0LWxpc3QuZG9jeFwiKSB7XG4gICAgICAgIERvY3goZmlsZW5hbWUpXG4gICAgICAgICAgICAuc2V0TWFyZ2lucyhbMTAsIDE1LCAxMCwgMjVdKVxuICAgICAgICAgICAgLnNldEhlYWRlcih0aGlzLnN0YXRlLm5hbWUgKyBcIiwgXCIgKyB0aGlzLnN0YXRlLmRhdGUpXG4gICAgICAgICAgICAuc2V0VGl0bGUxKF8oXCJhZG1pbi5oZWFkZXJzLnN0YXJ0X2xpc3RcIikpXG4gICAgICAgICAgICAuc2V0Qm9keSh0aGlzLnJlZnMucHJpbnRhYmxlLmZldGNoUHJpbnRhYmxlRGF0YSgpKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLmJvcmRlcmVkLXRhYmxlIC5pbm5lciB0ZCwgLmJvcmRlcmVkLXRhYmxlIC5pbm5lciB0aFwiLCBcImJvcmRlclwiLCBcIm5vbmVcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5ib3JkZXJlZC10YWJsZSAuaW5uZXIgdGQsIC5ib3JkZXJlZC10YWJsZSAuaW5uZXIgdGhcIiwgXCJwYWRkaW5nXCIsIFwiMFwiKVxuICAgICAgICAgICAgLmFkZFN0eWxlKFwiLmlubmVyXCIsIFwid2lkdGhcIiwgXCIxMDAlXCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuYWNyb1wiLCBcImJvcmRlci10b3BcIiwgXCJub25lICFpbXBvcnRhbnRcIilcbiAgICAgICAgICAgIC5hZGRTdHlsZShcIi5oYXMtYWNybyB0ZFwiLCBcImJvcmRlci1ib3R0b21cIiwgXCIxcHggc29saWQgIzU1NSAhaW1wb3J0YW50XCIpXG4gICAgICAgICAgICAuYWRkU3R5bGUoXCIuaGFzLWFjcm8gdGQgdGRcIiwgXCJib3JkZXItYm90dG9tXCIsIFwibm9uZSAhaW1wb3J0YW50XCIpXG4gICAgICAgICAgICAuc2F2ZSgpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IF8sIHRvdXJfbmFtZXMgfSBmcm9tIFwiaTEwbi9sb2FkZXJcIjtcbmltcG9ydCB7IEFwaSB9IGZyb20gXCJzZXJ2ZXIvYXBpXCI7XG5pbXBvcnQgeyBHTCB9IGZyb20gXCJjb21tb24vZGVmaW5pdGlvbnNcIjtcbmltcG9ydCB7IHNob3dDb25maXJtIH0gZnJvbSBcInVpL2RpYWxvZ3NcIjtcbmltcG9ydCB7IGNsb25lIH0gZnJvbSBcImNvbW1vbi90b29sc1wiO1xuXG5cbmV4cG9ydCBjbGFzcyBUb3VycyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbmV3X3RvdXJfYWZ0ZXJfaWQ6IC0xLFxuICAgICAgICB9XG4gICAgfVxuICAgIGFkZFRvdXJBZnRlcih0b3VyX2lkKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbmV3X3RvdXJfYWZ0ZXJfaWQ6IHRvdXJfaWQsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZW5kZXJUb3VyQ3JlYXRpb24oYWZ0ZXJfaWQsIG5leHRfdG91cikge1xuICAgICAgICBpZiAobmV4dF90b3VyICYmIG5leHRfdG91ci5maW5hbGl6ZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhZnRlcl9pZCA9PT0gdGhpcy5zdGF0ZS5uZXdfdG91cl9hZnRlcl9pZCkge1xuICAgICAgICAgICAgcmV0dXJuIDxUb3VyQ3JlYXRpbmdVSVxuICAgICAgICAgICAgICAgIGRpc2NpcGxpbmVfaWQ9eyB0aGlzLnByb3BzLmRpc2NpcGxpbmUuaWQgfVxuICAgICAgICAgICAgICAgIGFkZF9hZnRlcj17IGFmdGVyX2lkIH1cbiAgICAgICAgICAgICAgICBzdG9wRWRpdGluZz17IHRoaXMuYWRkVG91ckFmdGVyLmJpbmQodGhpcywgLTEpIH0gLz5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tZGVmYXVsdCBmdWxsLXdpZHRoXCIgb25DbGljaz17IHRoaXMuYWRkVG91ckFmdGVyLmJpbmQodGhpcywgYWZ0ZXJfaWQpIH0+XG4gICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4uYnV0dG9ucy5hZGRfdG91clwiKSB9XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXJUb3VycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMuZGlzY2lwbGluZS50b3Vycy5tYXAoZnVuY3Rpb24odG91ciwgaWR4LCBhcnIpIHtcbiAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgPFRvdXJFZGl0aW5nVUkgdG91cj17IHRvdXIgfSBrZXk9eyB0b3VyLmlkIH0gLz4sXG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJUb3VyQ3JlYXRpb24odG91ci5pZCwgYXJyW2lkeCArIDFdKVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJhcHAtY29udGVudFwiPlxuICAgICAgICAgICAgPGhlYWRlciBjbGFzc05hbWU9XCJhcHAtaGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgPGgxPnsgdGhpcy5wcm9wcy5kaXNjaXBsaW5lLm5hbWUgfTwvaDE+XG4gICAgICAgICAgICA8L2hlYWRlcj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYXBwLWJvZHkgaWMtbWFuYWdlbWVudC11aVwiPlxuICAgICAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJUb3VyQ3JlYXRpb24obnVsbCwgdGhpcy5wcm9wcy5kaXNjaXBsaW5lLnRvdXJzWzBdKSB9XG4gICAgICAgICAgICAgICAgeyB0aGlzLnJlbmRlclRvdXJzKCkgfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGF0YWxpc3QgaWQ9XCJkbF90b3Vyc1wiPlxuICAgICAgICAgICAgICAgIHsgdG91cl9uYW1lcy5tYXAoKG4sIGlkeCkgPT4gPG9wdGlvbiBrZXk9eyBpZHggfSB2YWx1ZT17IG4gfSAvPikgfVxuICAgICAgICAgICAgPC9kYXRhbGlzdD5cbiAgICAgICAgICAgIDxkYXRhbGlzdCBpZD1cImRsX3Byb2dyYW1zXCI+XG4gICAgICAgICAgICAgICAgeyBHTC5zdWdnZXN0ZWRfcHJvZ3JhbXMubWFwKChuLCBpZHgpID0+IDxvcHRpb24ga2V5PXsgaWR4IH0gdmFsdWU9eyBuIH0gLz4pIH1cbiAgICAgICAgICAgIDwvZGF0YWxpc3Q+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbn1cblxuY2xhc3MgVG91cklucHV0Rm9ybSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3VibWl0VG91cihldmVudCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLnByb3BzLnN1Ym1pdFRvdXIodGhpcy5zZXJpYWxpemUoKSk7XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMucmVmcy5uYW1lLnZhbHVlLFxuICAgICAgICAgICAgcGFydGljaXBhbnRzX3Blcl9oZWF0OiB0aGlzLnJlZnMucGFydGljaXBhbnRzX3Blcl9oZWF0LnZhbHVlLFxuICAgICAgICAgICAgZGVmYXVsdF9wcm9ncmFtOiB0aGlzLnJlZnMuZGVmYXVsdF9wcm9ncmFtLnZhbHVlLFxuICAgICAgICB9O1xuICAgICAgICBpZiAoIXRoaXMucHJvcHMudG91ciB8fCAhdGhpcy5wcm9wcy50b3VyLmZpbmFsaXplZCkge1xuICAgICAgICAgICAgcmVzdWx0W1wibnVtX2FkdmFuY2VzXCJdID0gdGhpcy5yZWZzLm51bV9hZHZhbmNlcy52YWx1ZTtcbiAgICAgICAgICAgIHJlc3VsdFtcInNjb3Jpbmdfc3lzdGVtX25hbWVcIl0gPSB0aGlzLnJlZnMuc2NvcmluZ19zeXN0ZW1fbmFtZS52YWx1ZTtcbiAgICAgICAgICAgIHJlc3VsdFtcImhvcGVfdG91clwiXSA9IHRoaXMucmVmcy5ob3BlX3RvdXIuY2hlY2tlZDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBjbGFzc2VzID0gW1widG91clwiLCBcIlwiXS5jb25jYXQodGhpcy5wcm9wcy5jbGFzc2VzIHx8IFtdKS5qb2luKFwiIFwiKTtcbiAgICAgICAgbGV0IHRvdXIgPSB0aGlzLnByb3BzLnRvdXIgfHwgeyBpZDogXCJuZXdcIiB9XG4gICAgICAgIHJldHVybiA8Zm9ybSBjbGFzc05hbWU9eyBjbGFzc2VzIH0ga2V5PXsgdG91ci5pZCB9IG9uU3VibWl0PXsgdGhpcy5zdWJtaXRUb3VyLmJpbmQodGhpcykgfT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbWQtNlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXAgZm9ybS1ncm91cC1zbVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImNvbnRyb2wtbGFiZWxcIj57IF8oXCJtb2RlbHMudG91ci5uYW1lXCIpIH08L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdD1cImRsX3RvdXJzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9XCJuYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9eyB0b3VyLm5hbWUgfSAvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWdyb3VwIGZvcm0tZ3JvdXAtc20gcm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1sZy00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImNvbnRyb2wtbGFiZWxcIj57IF8oXCJtb2RlbHMudG91ci5udW1fYWR2YW5jZXNcIikgfTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPVwibnVtX2FkdmFuY2VzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9eyB0b3VyLmZpbmFsaXplZCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17IHRvdXIubnVtX2FkdmFuY2VzIH0gIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLWxnLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiY29udHJvbC1sYWJlbFwiPnsgXyhcIm1vZGVscy50b3VyLnBhcnRpY2lwYW50c19wZXJfaGVhdFwiKSB9PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9XCJwYXJ0aWNpcGFudHNfcGVyX2hlYXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9eyB0b3VyLnBhcnRpY2lwYW50c19wZXJfaGVhdCB8fCAyIH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkaXYgY2xhc3NOYW1lPVwiY29sLWxnLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiY29udHJvbC1sYWJlbFwiPnsgXyhcIm1vZGVscy50b3VyLmlzX2hvcGVfdG91clwiKSB9PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNoZWNrYm94XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPVwiaG9wZV90b3VyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17IHRvdXIuZmluYWxpemVkIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q2hlY2tlZD17IHRvdXIuaG9wZV90b3VyIH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1tZC02XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cCBmb3JtLWdyb3VwLXNtXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiY29udHJvbC1sYWJlbFwiPnsgXyhcIm1vZGVscy50b3VyLnNjb3Jpbmdfc3lzdGVtX25hbWVcIikgfTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9XCJzY29yaW5nX3N5c3RlbV9uYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17IHRvdXIuZmluYWxpemVkIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9eyB0b3VyLnNjb3Jpbmdfc3lzdGVtX25hbWUgfHwgR0wuc2NvcmluZ19zeXN0ZW1zWzBdIH0gPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgR0wuc2NvcmluZ19zeXN0ZW1zLm1hcCgoc24pID0+IDxvcHRpb24ga2V5PXsgc24gfSB2YWx1ZT17IHNuIH0+eyBfKFwic2NvcmluZ19zeXN0ZW1zX25hbWVzLlwiICsgc24pIH08L29wdGlvbj4pIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWdyb3VwIGZvcm0tZ3JvdXAtc20gcm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1sZy02XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImNvbnRyb2wtbGFiZWxcIj57IF8oXCJtb2RlbHMudG91ci5kZWZhdWx0X3Byb2dyYW1cIikgfTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdD1cImRsX3Byb2dyYW1zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPVwiZGVmYXVsdF9wcm9ncmFtXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlPXsgdG91ci5kZWZhdWx0X3Byb2dyYW0gfHwgXCJcIiB9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLWxnLTZcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiY29udHJvbC1sYWJlbFwiPiZuYnNwOzwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1zbVwiIHR5cGU9XCJzdWJtaXRcIj57IF8oXCJnbG9iYWwuYnV0dG9ucy5zdWJtaXRcIikgfTwvYnV0dG9uPiZuYnNwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBidG4tc21cIiB0eXBlPVwiYnV0dG9uXCIgb25DbGljaz17IHRoaXMucHJvcHMuc3RvcEVkaXRpbmcgfT57IF8oXCJnbG9iYWwuYnV0dG9ucy5kaXNjYXJkXCIpIH08L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Zvcm0+XG4gICAgfVxufVxuXG5jbGFzcyBUb3VyRWRpdGluZ1VJIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBlZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGFydEVkaXRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWRpdGluZzogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0b3BFZGl0aW5nKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGVkaXRpbmc6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVuZGVyRWRpdG9yKCkge1xuICAgICAgICByZXR1cm4gPFRvdXJJbnB1dEZvcm1cbiAgICAgICAgICAgIHRvdXI9eyB0aGlzLnByb3BzLnRvdXIgfVxuICAgICAgICAgICAgc3VibWl0VG91cj17IHRoaXMuc3VibWl0VG91ci5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgIHN0b3BFZGl0aW5nPXsgdGhpcy5zdG9wRWRpdGluZy5iaW5kKHRoaXMpIH0gLz5cbiAgICB9XG4gICAgcmVuZGVyVmlld2VyKCkge1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJ0b3VyXCIga2V5PXsgdGhpcy5wcm9wcy50b3VyLmlkIH0+XG4gICAgICAgICAgICA8aDM+eyB0aGlzLnByb3BzLnRvdXIubmFtZSB9PC9oMz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbWQtNVwiPlxuICAgICAgICAgICAgICAgICAgICA8cD48c3Ryb25nPnsgXyhcIm1vZGVscy50b3VyLm51bV9hZHZhbmNlc1wiKSB9Ojwvc3Ryb25nPiB7IHRoaXMucHJvcHMudG91ci5udW1fYWR2YW5jZXMgfSA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc+eyBfKFwibW9kZWxzLnRvdXIucGFydGljaXBhbnRzX3Blcl9oZWF0XCIpIH06PC9zdHJvbmc+IHsgdGhpcy5wcm9wcy50b3VyLnBhcnRpY2lwYW50c19wZXJfaGVhdCB9IDwvcD5cbiAgICAgICAgICAgICAgICAgICAgPHA+PHN0cm9uZz57IF8oXCJtb2RlbHMudG91ci5pc19ob3BlX3RvdXJcIikgfTo8L3N0cm9uZz4geyB0aGlzLnByb3BzLnRvdXIuaG9wZV90b3VyID8gXyhcImdsb2JhbC5sYWJlbHMueWVzXCIpIDogIF8oXCJnbG9iYWwubGFiZWxzLm5vXCIpIH0gPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLW1kLTVcIj5cbiAgICAgICAgICAgICAgICAgICAgPHA+PHN0cm9uZz57IF8oXCJtb2RlbHMudG91ci5zY29yaW5nX3N5c3RlbV9uYW1lXCIpIH06PC9zdHJvbmc+IHsgXyhcInNjb3Jpbmdfc3lzdGVtc19uYW1lcy5cIiArIHRoaXMucHJvcHMudG91ci5zY29yaW5nX3N5c3RlbV9uYW1lKSB9IDwvcD5cbiAgICAgICAgICAgICAgICAgICAgPHA+PHN0cm9uZz57IF8oXCJtb2RlbHMudG91ci5kZWZhdWx0X3Byb2dyYW1cIikgfTo8L3N0cm9uZz4geyB0aGlzLnByb3BzLnRvdXIuZGVmYXVsdF9wcm9ncmFtIH0gPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLW1kLTJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJmdWxsLXdpZHRoIGJ0biBidG4tcHJpbWFyeSBidG4tc21cIiBvbkNsaWNrPXsgdGhpcy5zdGFydEVkaXRpbmcuYmluZCh0aGlzKSB9PnsgXyhcImdsb2JhbC5idXR0b25zLmVkaXRcIikgfTwvYnV0dG9uPjxiciAvPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGggYnRuIGJ0bi1kYW5nZXIgYnRuLXNtXCIgb25DbGljaz17IHRoaXMuZGVsZXRlVG91ci5iaW5kKHRoaXMpIH0+eyBfKFwiZ2xvYmFsLmJ1dHRvbnMuZGVsZXRlXCIpIH08L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG4gICAgc3VibWl0VG91cihkYXRhKSB7XG4gICAgICAgIEFwaShcInRvdXIuc2V0XCIsIHtcbiAgICAgICAgICAgIHRvdXJfaWQ6IHRoaXMucHJvcHMudG91ci5pZCxcbiAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgIH0pLm9uU3VjY2VzcyhmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgdGhpcy5zdG9wRWRpdGluZygpO1xuICAgICAgICB9LmJpbmQodGhpcykpLnNlbmQoKTtcbiAgICB9XG4gICAgZGVsZXRlVG91cigpIHtcbiAgICAgICAgc2hvd0NvbmZpcm0oXyhcImFkbWluLmNvbmZpcm1zLmRlbGV0ZV90b3VyXCIpLCAoKSA9PiB7XG4gICAgICAgICAgICBBcGkoXCJ0b3VyLmRlbGV0ZVwiLCB7IHRvdXJfaWQ6IHRoaXMucHJvcHMudG91ci5pZCB9KS5vblN1Y2Nlc3MoKCkgPT4gc3dhbC5jbG9zZSgpKS5zZW5kKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLmVkaXRpbmcgPyB0aGlzLnJlbmRlckVkaXRvcigpIDogdGhpcy5yZW5kZXJWaWV3ZXIoKTtcbiAgICB9XG59XG5cbmNsYXNzIFRvdXJDcmVhdGluZ1VJIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdWJtaXRUb3VyKGRhdGEpIHtcbiAgICAgICAgQXBpKFwidG91ci5jcmVhdGVcIiwge1xuICAgICAgICAgICAgZGlzY2lwbGluZV9pZDogdGhpcy5wcm9wcy5kaXNjaXBsaW5lX2lkLFxuICAgICAgICAgICAgYWRkX2FmdGVyOiB0aGlzLnByb3BzLmFkZF9hZnRlcixcbiAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgIH0pLm9uU3VjY2VzcyhmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5zdG9wRWRpdGluZygpO1xuICAgICAgICB9LmJpbmQodGhpcykpLnNlbmQoKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPFRvdXJJbnB1dEZvcm1cbiAgICAgICAgICAgIGNsYXNzZXM9eyBbXCJ0b3VyLWNyZWF0ZVwiXSB9XG4gICAgICAgICAgICBzdWJtaXRUb3VyPXsgdGhpcy5zdWJtaXRUb3VyLmJpbmQodGhpcykgfVxuICAgICAgICAgICAgc3RvcEVkaXRpbmc9eyB0aGlzLnByb3BzLnN0b3BFZGl0aW5nIH0gLz5cblxuICAgIH1cbn1cbiIsImltcG9ydCB7IF8gfSBmcm9tIFwiaTEwbi9sb2FkZXJcIjtcbmltcG9ydCB7IExvYWRlciB9IGZyb20gXCJ1aS9jb21wb25lbnRzXCI7XG5cblxuZXhwb3J0IGNsYXNzIEF1dG9QcmludGVyU3RhdHVzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBhdmFpbGFibGU6IG51bGwsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBsZXQgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICAgIHhoci5vcGVuKFwiR0VUXCIsIFwiaHR0cDovLzEyNy4wLjAuMTo1OTQ5XCIsIHRydWUpO1xuICAgICAgICB4aHIub25sb2FkID0gKCkgPT4gdGhpcy5zZXRTdGF0ZSh7IGF2YWlsYWJsZTogdHJ1ZSB9KTsgIC8vZXNsaW50LWRpc2FibGUtbGluZSByZWFjdC9uby1kaWQtbW91bnQtc2V0LXN0YXRlXG4gICAgICAgIHhoci5vbmVycm9yID0gKCkgPT4gdGhpcy5zZXRTdGF0ZSh7IGF2YWlsYWJsZTogZmFsc2UgfSk7ICAvL2VzbGludC1kaXNhYmxlLWxpbmUgcmVhY3Qvbm8tZGlkLW1vdW50LXNldC1zdGF0ZVxuICAgICAgICB4aHIuc2VuZCgpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlLmF2YWlsYWJsZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIDxMb2FkZXIgLz5cbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuc3RhdGUuYXZhaWxhYmxlKSB7XG4gICAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJhbGVydCBhbGVydC1kYW5nZXJcIj5cbiAgICAgICAgICAgICAgICA8cD57IF8oXCJhZG1pbi5hbGVydHMuYXV0b19wcmludGVyX25vdF9hdmFpbGFibGVcIikgfTwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICB9XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImFsZXJ0IGFsZXJ0LXN1Y2Nlc3NcIj5cbiAgICAgICAgICAgIDxwPnsgXyhcImFkbWluLmFsZXJ0cy5hdXRvX3ByaW50ZXJfYXZhaWxhYmxlXCIpIH08L3A+PGJyIC8+XG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tZGVmYXVsdFwiXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsgKCkgPT4gd2luZG93LnByaW50ZXJfd2luZG93ID8gd2luZG93LnByaW50ZXJfd2luZG93LmZvY3VzKCkgOlxuICAgICAgICAgICAgICAgICAgICAgICAgKHdpbmRvdy5wcmludGVyX3dpbmRvdyA9IHdpbmRvdy5vcGVuKGAvcHJpbnRlci8keyB0aGlzLnByb3BzLmNvbXBldGl0aW9uX2lkIH1gLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJpbnRlclwiLCBcInJlc2l6YWJsZT15ZXMsbG9jYXRpb249bm9cIikpIH0+XG4gICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4uYnV0dG9ucy5sYXVuY2hfYXV0b19wcmludGVyXCIpIH1cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICB9XG59XG4iLCJpbXBvcnQgeyBfIH0gZnJvbSBcImkxMG4vbG9hZGVyXCI7XG5pbXBvcnQgeyBBcGkgfSBmcm9tIFwic2VydmVyL2FwaVwiO1xuaW1wb3J0IHsgc2hvd0NvbmZpcm0gfSBmcm9tIFwidWkvZGlhbG9nc1wiO1xuaW1wb3J0IHsgQXV0b1ByaW50ZXJTdGF0dXMgfSBmcm9tIFwiLi9hdXRvX3ByaW50ZXJfc3RhdHVzXCI7XG5cblxuZXhwb3J0IGNsYXNzIFNlcnZpY2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG4gICAgcmVsb2FkQ2xpZW50cygpIHtcbiAgICAgICAgc2hvd0NvbmZpcm0oXyhcImFkbWluLmNvbmZpcm1zLnJlbG9hZF9jbGllbnRzXCIpLCAoKSA9PiB7XG4gICAgICAgICAgICBBcGkoXCJzZXJ2aWNlLnJlbG9hZF9jbGllbnRzXCIsIHt9KS5vblN1Y2Nlc3MoKCkgPT4gc3dhbC5jbG9zZSgpKS5zZW5kKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZWZyZXNoQ2xpZW50cygpIHtcbiAgICAgICAgc2hvd0NvbmZpcm0oXyhcImFkbWluLmNvbmZpcm1zLnJlZnJlc2hfY2xpZW50c1wiKSwgKCkgPT4ge1xuICAgICAgICAgICAgQXBpKFwic2VydmljZS5yZWZyZXNoX2NsaWVudHNcIiwge30pLm9uU3VjY2VzcygoKSA9PiBzd2FsLmNsb3NlKCkpLnNlbmQoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHVuZmluYWxpemVUb3VyKGV2ZW50KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGxldCBwYXNzY29kZSA9IHN3YWwoe1xuICAgICAgICAgICAgdGl0bGU6IF8oXCJhZG1pbi5oZWFkZXJzLnVuZmluYWxpemVfdG91clwiKSxcbiAgICAgICAgICAgIHRleHQ6IF8oXCJhZG1pbi5jb25maXJtcy51bmZpbmFsaXplX3RvdXJcIiksXG4gICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLFxuICAgICAgICAgICAgY2xvc2VPbkNvbmZpcm06IGZhbHNlLFxuICAgICAgICAgICAgdHlwZTogXCJpbnB1dFwiLFxuICAgICAgICAgICAgYW5pbWF0aW9uOiBmYWxzZSxcbiAgICAgICAgfSwgKHZhbHVlKSA9PiB7XG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IFwidW5maW5hbGl6ZVwiKSB7XG4gICAgICAgICAgICAgICAgc3dhbC5zaG93SW5wdXRFcnJvcihfKFwiYWRtaW4ubWVzc2FnZXMuaW52YWxpZF9wYXNzY29kZVwiKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQXBpKFwidG91ci51bmZpbmFsaXplXCIsIHtcbiAgICAgICAgICAgICAgICB0b3VyX2lkOiB0aGlzLl9zZWxlY3RfdW5maW5hbGl6ZS52YWx1ZSxcbiAgICAgICAgICAgIH0pLm9uU3VjY2VzcyhmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgICAgIHN3YWwoe1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogXyhcImdsb2JhbC5tZXNzYWdlcy5zdWNjZXNzXCIpLFxuICAgICAgICAgICAgICAgICAgICBhbmltYXRpb246IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInN1Y2Nlc3NcIixcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pLnNlbmQoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlbmRlclVuZmluYWxpemUoKSB7XG4gICAgICAgIGxldCBlbGlnaWJsZV90b3VycyA9IFtdO1xuICAgICAgICB0aGlzLnByb3BzLmRpc2NpcGxpbmVzLmZvckVhY2goZnVuY3Rpb24oaWMpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGlkeCA9IGljLnRvdXJzLmxlbmd0aCAtIDE7IGlkeCA+PSAwOyAtLWlkeCkge1xuICAgICAgICAgICAgICAgIGxldCB0b3VyID0gaWMudG91cnNbaWR4XTtcbiAgICAgICAgICAgICAgICBpZiAodG91ci5maW5hbGl6ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZWxpZ2libGVfdG91cnMucHVzaChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9eyB0b3VyLmlkIH0ga2V5PXsgdG91ci5pZCB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgaWMubmFtZSB9ICZtZGFzaDsgeyB0b3VyLm5hbWUgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9vcHRpb24+KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGVsaWdpYmxlX3RvdXJzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiYWxlcnQgYWxlcnQtZGFuZ2VyXCI+XG4gICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4uYWxlcnRzLm5vX2ZpbmFsaXplZFwiKSB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPGRpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWxlcnQgYWxlcnQtZGFuZ2VyXCI+XG4gICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4uYWxlcnRzLnVuZmluYWxpemVfd2FybmluZ1wiKSB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxmb3JtIGNsYXNzTmFtZT1cInVuZmluYWxpemF0aW9uXCIgb25TdWJtaXQ9eyB0aGlzLnVuZmluYWxpemVUb3VyLmJpbmQodGhpcykgfT5cbiAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzTmFtZT1cImZvcm0tY29udHJvbFwiIHJlZj17IGMgPT4gdGhpcy5fc2VsZWN0X3VuZmluYWxpemUgPSBjIH0+XG4gICAgICAgICAgICAgICAgICAgIHsgZWxpZ2libGVfdG91cnMgfVxuICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5XCIgdHlwZT1cInN1Ym1pdFwiPnsgXyhcImFkbWluLmJ1dHRvbnMudW5maW5hbGl6ZVwiKSB9PC9idXR0b24+XG4gICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImFwcFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhcHAtY29udGVudFwiPlxuICAgICAgICAgICAgICAgIDxoZWFkZXIgY2xhc3NOYW1lPVwiYXBwLWhlYWRlclwiPlxuICAgICAgICAgICAgICAgICAgICA8aDE+eyBfKFwiYWRtaW4uaGVhZGVycy5zZXJ2aWNlX21lbnVcIikgfTwvaDE+XG4gICAgICAgICAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZXJ2aWNlLW1lbnUgYXBwLWJvZHlcIj5cbiAgICAgICAgICAgICAgICAgICAgPGgzPnsgXyhcImFkbWluLmhlYWRlcnMuY2xpZW50c19tYW5hZ2VtZW50XCIpIH08L2gzPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSBjb250cm9sLWJ0blwiIG9uQ2xpY2s9eyB0aGlzLnJlbG9hZENsaWVudHMuYmluZCh0aGlzKSB9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgXyhcImFkbWluLmJ1dHRvbnMucmVsb2FkX2NsaWVudHNcIikgfVxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXByaW1hcnkgY29udHJvbC1idG5cIiBvbkNsaWNrPXsgdGhpcy5yZWZyZXNoQ2xpZW50cy5iaW5kKHRoaXMpIH0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7IF8oXCJhZG1pbi5idXR0b25zLnJlZnJlc2hfY2xpZW50c1wiKSB9XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8aDM+eyBfKFwiYWRtaW4uaGVhZGVycy51bmZpbmFsaXplX3RvdXJcIikgfTwvaDM+XG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJVbmZpbmFsaXplKCkgfVxuICAgICAgICAgICAgICAgICAgICA8aDM+eyBfKFwiYWRtaW4uaGVhZGVycy5hdXRvX3ByaW50ZXJcIikgfTwvaDM+XG4gICAgICAgICAgICAgICAgICAgIDxBdXRvUHJpbnRlclN0YXR1cyBjb21wZXRpdGlvbl9pZD17IHRoaXMucHJvcHMuY29tcGV0aXRpb25faWQgfSAvPlxuICAgICAgICAgICAgICAgICAgICA8aDM+eyBfKFwiYWRtaW4uaGVhZGVycy5hYm91dFwiKSB9PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgeyBfKFwiYWRtaW4uYWxlcnRzLmFib3V0XCIsIFwidjEuMFwiLCBcIjIyINGE0LXQstGA0LDQu9GPIDIwMTbQsy5cIikgfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIH1cbn1cbiIsImV4cG9ydCB2YXIgR0wgPSB7XG4gICAgXCJqdWRnZV9yb2xlc1wiOiBbXG4gICAgICAgIFwiZGFuY2VfanVkZ2VcIixcbiAgICAgICAgXCJhY3JvX2p1ZGdlXCIsXG4gICAgICAgIFwiaGVhZF9qdWRnZVwiLFxuICAgICAgICBcInRlY2hfanVkZ2VcIixcbiAgICBdLFxuICAgIFwic2NvcmluZ19zeXN0ZW1zXCI6IFtcbiAgICAgICAgXCJyb3NmYXJyLm5vX2Fjcm9cIixcbiAgICAgICAgXCJyb3NmYXJyLmFjcm9cIixcbiAgICAgICAgXCJyb3NmYXJyLmZvcm1hdGlvblwiLFxuICAgICAgICBcInJvc2ZhcnIuZm9ybWF0aW9uX2Fjcm9cIixcbiAgICAgICAgXCJyb3NmYXJyLnNpbXBsaWZpZWRcIixcbiAgICAgICAgXCJyb3NmYXJyLmFtX2ZpbmFsX2Z3XCIsXG4gICAgICAgIFwicm9zZmFyci5hbV9maW5hbF9hY3JvXCIsXG4gICAgXSxcbiAgICBcInN1Z2dlc3RlZF9wcm9ncmFtc1wiOiBbXG4gICAgICAgIFwiZGVmYXVsdFwiLFxuICAgICAgICBcInF1YWxpZmljYXRpb25cIixcbiAgICAgICAgXCJxdWFydGVyZmluYWxcIixcbiAgICAgICAgXCJmaW5hbFwiLFxuICAgIF0sXG59XG4iLCJjbGFzcyBEb2N4SW1wbCB7XG4gICAgY29uc3RydWN0b3IoZmlsZW5hbWUpIHtcbiAgICAgICAgdGhpcy5maWxlbmFtZSA9IGZpbGVuYW1lO1xuICAgICAgICB0aGlzLmhlYWRlciA9IG51bGw7XG4gICAgICAgIHRoaXMudGl0bGUxID0gbnVsbDtcbiAgICAgICAgdGhpcy50aXRsZTIgPSBudWxsO1xuICAgICAgICB0aGlzLnRpdGxlMyA9IG51bGw7XG4gICAgICAgIHRoaXMubWFyZ2lucyA9IG51bGw7XG4gICAgICAgIHRoaXMuYm9keSA9IFwiXCI7XG4gICAgICAgIHRoaXMub3JpZW50YXRpb24gPSBcInBvcnRyYWl0XCI7XG4gICAgICAgIHRoaXMuc3R5bGVzID0ge1xuICAgICAgICAgICAgXCJib2R5XCI6IHtcbiAgICAgICAgICAgICAgICBcImZvbnQtc2l6ZVwiOiBcIjEwcHRcIixcbiAgICAgICAgICAgICAgICBcImZvbnQtZmFtaWx5XCI6IFwiQ2FsaWJyaSwgVGFob21hLCBBcmlhbCwgc2Fucy1zZXJpZlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwidGFibGVcIjoge1xuICAgICAgICAgICAgICAgIFwiYm9yZGVyLWNvbGxhcHNlXCI6IFwiY29sbGFwc2VcIixcbiAgICAgICAgICAgICAgICBcIndpZHRoXCI6IFwiMTAwJVwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwidHJcIjoge1xuICAgICAgICAgICAgICAgIFwicGFnZS1icmVhay1pbnNpZGVcIjogXCJhdm9pZFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwidGQsIHRoXCI6IHtcbiAgICAgICAgICAgICAgICBcInBhZGRpbmdcIjogXCIxcHQgM3B0XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJoMSwgaDIsIGgzLCBoNCwgaDUsIGg2XCI6IHtcbiAgICAgICAgICAgICAgICBcInBhZ2UtYnJlYWstYWZ0ZXJcIjogXCJhdm9pZFwiLFxuICAgICAgICAgICAgICAgIFwibWFyZ2luLWJvdHRvbVwiOiAwLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiaDFcIjoge1xuICAgICAgICAgICAgICAgIFwiZm9udC1zaXplXCI6IFwiMjBwdFwiLFxuICAgICAgICAgICAgICAgIFwiZm9udC13ZWlnaHRcIjogXCJib2xkXCIsXG4gICAgICAgICAgICAgICAgXCJ0ZXh0LWFsaWduXCI6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgXCJtYXJnaW4tdG9wXCI6IFwiMTBwdFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiaDJcIjoge1xuICAgICAgICAgICAgICAgIFwiZm9udC1zaXplXCI6IFwiMTZwdFwiLFxuICAgICAgICAgICAgICAgIFwiZm9udC13ZWlnaHRcIjogXCJib2xkXCIsXG4gICAgICAgICAgICAgICAgXCJ0ZXh0LWFsaWduXCI6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgXCJtYXJnaW4tdG9wXCI6IFwiNnB0XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJoM1wiOiB7XG4gICAgICAgICAgICAgICAgXCJmb250LXNpemVcIjogXCIxNnB0XCIsXG4gICAgICAgICAgICAgICAgXCJmb250LXdlaWdodFwiOiBcImJvbGRcIixcbiAgICAgICAgICAgICAgICBcInRleHQtYWxpZ25cIjogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICBcIm1hcmdpbi10b3BcIjogXCI0cHRcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImg0IHBcIjoge1xuICAgICAgICAgICAgICAgIFwiZm9udC1zaXplXCI6IFwiMTRwdFwiLFxuICAgICAgICAgICAgICAgIFwiZm9udC13ZWlnaHRcIjogXCJib2xkXCIsXG4gICAgICAgICAgICAgICAgXCJtYXJnaW5cIjogXCIxMHB0IDAgNnB0XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJoNSBwXCI6IHtcbiAgICAgICAgICAgICAgICBcImZvbnQtc2l6ZVwiOiBcIjEycHRcIixcbiAgICAgICAgICAgICAgICBcImZvbnQtd2VpZ2h0XCI6IFwiYm9sZFwiLFxuICAgICAgICAgICAgICAgIFwibWFyZ2luXCI6IFwiNnB0IDBcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIi5oZWFkZXJcIjoge1xuICAgICAgICAgICAgICAgIFwiYm9yZGVyLWJvdHRvbVwiOiBcIjFweCBzb2xpZCBibGFja1wiLFxuICAgICAgICAgICAgICAgIFwiZm9udC1zaXplXCI6IFwiMTBwdFwiLFxuICAgICAgICAgICAgICAgIFwiZm9udC13ZWlnaHRcIjogXCJib2xkXCIsXG4gICAgICAgICAgICAgICAgXCJtYXJnaW5cIjogMCxcbiAgICAgICAgICAgICAgICBcInBhZGRpbmctYm90dG9tXCI6IFwiMnB0XCIsXG4gICAgICAgICAgICAgICAgXCJtYXJnaW4tYm90dG9tXCI6IFwiMjBwdFwiLFxuICAgICAgICAgICAgICAgIFwidGV4dC1hbGlnblwiOiBcImNlbnRlclwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwicFwiOiB7XG4gICAgICAgICAgICAgICAgXCJtYXJnaW5cIjogMCxcbiAgICAgICAgICAgICAgICBcInBhZGRpbmdcIjogMCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIi5zcGFjZXJcIjoge1xuICAgICAgICAgICAgICAgIFwiZm9udC1zaXplXCI6IFwiMTRwdFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiLnZhLXRvcFwiOiB7XG4gICAgICAgICAgICAgICAgXCJ2ZXJ0aWNhbC1hbGlnblwiOiBcInRvcFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiLnRleHQtbGVmdFwiOiB7IFwidGV4dC1hbGlnblwiOiBcImxlZnRcIiB9LFxuICAgICAgICAgICAgXCIudGV4dC1yaWdodFwiOiB7IFwidGV4dC1hbGlnblwiOiBcInJpZ2h0XCIgfSxcbiAgICAgICAgICAgIFwiLnRleHQtY2VudGVyXCI6IHsgXCJ0ZXh0LWFsaWduXCI6IFwiY2VudGVyXCIgfSxcbiAgICAgICAgICAgIFwiLmJvcmRlcmVkLXRhYmxlIHRkLCAuYm9yZGVyZWQtdGFibGUgdGhcIjoge1xuICAgICAgICAgICAgICAgIFwiYm9yZGVyXCI6IFwiMXB0IHNvbGlkIGJsYWNrXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9XG4gICAgICAgIHRoaXMuYWRkV2lkdGhDc3MoKTtcbiAgICB9XG4gICAgYWRkV2lkdGhDc3MoKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IDEwMDsgKytpKSB7XG4gICAgICAgICAgICB0aGlzLmFkZFN0eWxlKFwiLnctXCIgKyBpLCBcIndpZHRoXCIsIGkgKyBcIiVcIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhZGRTdHlsZShzZWxlY3Rvciwga2V5LCB2YWx1ZSkge1xuICAgICAgICBpZiAoIXRoaXMuc3R5bGVzW3NlbGVjdG9yXSkge1xuICAgICAgICAgICAgdGhpcy5zdHlsZXNbc2VsZWN0b3JdID0ge307XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdHlsZXNbc2VsZWN0b3JdW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEhlYWRlcihoZWFkZXIpIHtcbiAgICAgICAgdGhpcy5oZWFkZXIgPSBoZWFkZXI7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXRUaXRsZTEodGl0bGUxKSB7XG4gICAgICAgIHRoaXMudGl0bGUxID0gdGl0bGUxO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0VGl0bGUyKHRpdGxlMikge1xuICAgICAgICB0aGlzLnRpdGxlMiA9IHRpdGxlMjtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldFRpdGxlMyh0aXRsZTMpIHtcbiAgICAgICAgdGhpcy50aXRsZTMgPSB0aXRsZTM7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXRNYXJnaW5zKG1hcmdpbnMpIHtcbiAgICAgICAgdGhpcy5tYXJnaW5zID0gbWFyZ2lucztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEJvZHkoYm9keSkge1xuICAgICAgICB0aGlzLmJvZHkgPSBib2R5O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0T3JpZW50YXRpb24ob3JpZW50YXRpb24pIHtcbiAgICAgICAgdGhpcy5vcmllbnRhdGlvbiA9IG9yaWVudGF0aW9uO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICByZW5kZXJTdHlsZUJsb2NrKHNlbGVjdG9yLCBkYXRhKSB7XG4gICAgICAgIGxldCBjc3NfcGFpcnMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhkYXRhKS5tYXAoKGtleSkgPT4ga2V5ICsgJzogJyArIGRhdGFba2V5XSArICc7ICcpXG4gICAgICAgIHJldHVybiBzZWxlY3RvciArIFwiIHsgXCIgKyBjc3NfcGFpcnMuam9pbihcIiBcIikgKyBcIiB9XCI7XG4gICAgfVxuICAgIHJlbmRlclN0eWxlcygpIHtcbiAgICAgICAgbGV0IGNzc19ibG9ja3MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzLnN0eWxlcykubWFwKChcbiAgICAgICAgICAgIChzZWxlY3RvcikgPT4gdGhpcy5yZW5kZXJTdHlsZUJsb2NrKHNlbGVjdG9yLCB0aGlzLnN0eWxlc1tzZWxlY3Rvcl0pXG4gICAgICAgICkuYmluZCh0aGlzKSk7XG4gICAgICAgIHJldHVybiBjc3NfYmxvY2tzLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJlbmRlckhUTUwoKSB7XG4gICAgICAgIGxldCBjc3MgPSB0aGlzLnJlbmRlclN0eWxlcygpO1xuICAgICAgICBsZXQgaGVhZGVyID0gdGhpcy5oZWFkZXIgPyAnPHAgY2xhc3M9XCJoZWFkZXJcIj4nICsgdGhpcy5oZWFkZXIgKyAnPC9wPicgOiBcIlwiO1xuICAgICAgICBsZXQgdGl0bGUxID0gdGhpcy50aXRsZTEgPyAnPGgxPicgKyB0aGlzLnRpdGxlMSArICc8L2gxPicgOiBcIlwiO1xuICAgICAgICBsZXQgdGl0bGUyID0gdGhpcy50aXRsZTIgPyAnPGgyPicgKyB0aGlzLnRpdGxlMiArICc8L2gyPicgOiBcIlwiO1xuICAgICAgICBsZXQgdGl0bGUzID0gdGhpcy50aXRsZTMgPyAnPGgzPicgKyB0aGlzLnRpdGxlMyArICc8L2gzPicgOiBcIlwiO1xuICAgICAgICBsZXQgc3BhY2VyID0gKGhlYWRlciB8fCB0aXRsZTEgfHwgdGl0bGUyIHx8IHRpdGxlMykgPyAnPHAgY2xhc3M9XCJzcGFjZXJcIj4mbmJzcDs8L3A+JyA6IFwiXCI7XG4gICAgICAgIHJldHVybiBcIjwhRE9DVFlQRSBodG1sPlxcblwiICtcbiAgICAgICAgICAgIFwiPGh0bWw+PGhlYWQ+XCIgK1xuICAgICAgICAgICAgICAgIFwiPG1ldGEgY2hhcnNldD1cXFwidXRmLThcXFwiPlwiICtcbiAgICAgICAgICAgICAgICBcIjxzdHlsZT5cXG5cIiArIGNzcyArIFwiXFxuPC9zdHlsZT5cXG5cIiArXG4gICAgICAgICAgICBcIjwvaGVhZD48Ym9keT5cXG5cIiArXG4gICAgICAgICAgICAgICAgaGVhZGVyICtcbiAgICAgICAgICAgICAgICB0aXRsZTEgK1xuICAgICAgICAgICAgICAgIHRpdGxlMiArXG4gICAgICAgICAgICAgICAgdGl0bGUzICtcbiAgICAgICAgICAgICAgICBzcGFjZXIgK1xuICAgICAgICAgICAgICAgIHRoaXMuYm9keSArXG4gICAgICAgICAgICBcIjwvYm9keT48L2h0bWw+XCI7XG4gICAgfVxuXG4gICAgc2F2ZSgpIHtcbiAgICAgICAgbGV0IGh0bWwgPSB0aGlzLnJlbmRlckhUTUwoKTtcbiAgICAgICAgbGV0IG1hcmdpbnMgPSB0aGlzLm1hcmdpbnMgfHwgKHRoaXMub3JpZW50YXRpb24gPT09IFwicG9ydHJhaXRcIiA/IFsxMCwgMTUsIDEwLCAxNV0gOiBbNywgMTAsIDcsIDEwXSk7XG4gICAgICAgIGxldCBjb252ZXJ0ZWQgPSBodG1sRG9jeC5hc0Jsb2IoaHRtbCwge1xuICAgICAgICAgICAgb3JpZW50YXRpb246IHRoaXMub3JpZW50YXRpb24sXG4gICAgICAgICAgICBtYXJnaW5zOiB7XG4gICAgICAgICAgICAgICAgdG9wOiAgICBNYXRoLmZsb29yKG1hcmdpbnNbMF0gKiA1Ni42NTkpLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgcmlnaHQ6ICBNYXRoLmZsb29yKG1hcmdpbnNbMV0gKiA1Ni42NTkpLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgYm90dG9tOiBNYXRoLmZsb29yKG1hcmdpbnNbMl0gKiA1Ni42NTkpLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgbGVmdDogICBNYXRoLmZsb29yKG1hcmdpbnNbM10gKiA1Ni42NTkpLnRvU3RyaW5nKCksXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBzYXZlQXMoY29udmVydGVkLCB0aGlzLmZpbGVuYW1lKTtcbiAgICB9XG59XG5cblxuZXhwb3J0IHZhciBEb2N4ID0gKGZuKSA9PiBuZXcgRG9jeEltcGwoZm4pO1xuIiwiZXhwb3J0IGNsYXNzIFJ1blNjb3Jlc1dyYXBwZXIge1xuICAgIGNvbnN0cnVjdG9yKHJ1biwgZGlzY2lwbGluZV9qdWRnZXMpIHtcbiAgICAgICAgdGhpcy5ydW4gPSBydW47XG4gICAgICAgIHRoaXMuZGlzY2lwbGluZV9qdWRnZXMgPSBkaXNjaXBsaW5lX2p1ZGdlcztcbiAgICAgICAgdGhpcy5zY29yZXNfYnlfZGlzY2lwbGluZV9qdWRnZV9pZCA9IHt9XG4gICAgICAgIHJ1bi5zY29yZXMuZm9yRWFjaChmdW5jdGlvbihzY29yZSkge1xuICAgICAgICAgICAgbGV0IGRqX2lkID0gc2NvcmUuZGlzY2lwbGluZV9qdWRnZV9pZDtcbiAgICAgICAgICAgIHRoaXMuc2NvcmVzX2J5X2Rpc2NpcGxpbmVfanVkZ2VfaWRbZGpfaWRdID0gc2NvcmU7XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgfVxuICAgIGdldFNjb3Jlc0J5SnVkZ2VJZHMoZGlzY2lwbGluZV9qdWRnZV9pZHMpIHtcbiAgICAgICAgcmV0dXJuIGRpc2NpcGxpbmVfanVkZ2VfaWRzLm1hcCgoKGRqX2lkKSA9PiB0aGlzLnNjb3Jlc19ieV9kaXNjaXBsaW5lX2p1ZGdlX2lkW2RqX2lkXSkuYmluZCh0aGlzKSk7XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgVG91clNjb3Jlc1dyYXBwZXIge1xuICAgIGNvbnN0cnVjdG9yKHRvdXIsIHJlc3VsdHMpIHtcbiAgICAgICAgdGhpcy5ydW5fd3JhcHBlcnMgPSB0b3VyLnJ1bnMubWFwKChydW4pID0+IG5ldyBSdW5TY29yZXNXcmFwcGVyKHJ1biwgdG91ci5kaXNjaXBsaW5lX2p1ZGdlcykpO1xuICAgICAgICB0aGlzLmRpc2NpcGxpbmVfanVkZ2VzID0gdG91ci5kaXNjaXBsaW5lLmRpc2NpcGxpbmVfanVkZ2VzO1xuICAgICAgICB0aGlzLmRpc2NpcGxpbmVfanVkZ2VzX2J5X3JvbGVzID0ge307XG4gICAgICAgIHRoaXMuZGlzY2lwbGluZV9qdWRnZXMuZm9yRWFjaChmdW5jdGlvbihkaiwgaWR4KSB7XG4gICAgICAgICAgICBsZXQgYXJyID0gdGhpcy5kaXNjaXBsaW5lX2p1ZGdlc19ieV9yb2xlc1tkai5yb2xlXSB8fCBbXTtcbiAgICAgICAgICAgIGFyci5wdXNoKHtcbiAgICAgICAgICAgICAgICBpZHg6IGlkeCxcbiAgICAgICAgICAgICAgICBkaXNjaXBsaW5lX2p1ZGdlOiBkaixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5kaXNjaXBsaW5lX2p1ZGdlc19ieV9yb2xlc1tkai5yb2xlXSA9IGFycjtcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgaWYgKHJlc3VsdHMpIHtcbiAgICAgICAgICAgIGxldCByZXN1bHRzX2J5X3J1bl9pZHMgPSB7fTtcbiAgICAgICAgICAgIHJlc3VsdHMuZm9yRWFjaCgocmVzKSA9PlxuICAgICAgICAgICAgICAgIHJlc3VsdHNfYnlfcnVuX2lkc1tyZXMucnVuX2lkXSA9IHJlcyk7XG4gICAgICAgICAgICB0aGlzLnJ1bl93cmFwcGVycy5mb3JFYWNoKCh3KSA9PlxuICAgICAgICAgICAgICAgIHcucmVzdWx0c19pbmZvID0gcmVzdWx0c19ieV9ydW5faWRzW3cucnVuLmlkXSk7XG4gICAgICAgICAgICB0aGlzLnJ1bl93cmFwcGVycy5zb3J0KChhLCBiKSA9PiBhLnJlc3VsdHNfaW5mby5wbGFjZSAtIGIucmVzdWx0c19pbmZvLnBsYWNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXREaXNjaXBsaW5lSnVkZ2VzQnlSb2xlcygpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRpc2NpcGxpbmVfanVkZ2VzX2J5X3JvbGVzW2FyZ3VtZW50c1swXV1cbiAgICAgICAgICAgICAgICA/IHRoaXMuZGlzY2lwbGluZV9qdWRnZXNfYnlfcm9sZXNbYXJndW1lbnRzWzBdXS5tYXAoKGIpID0+IGIuZGlzY2lwbGluZV9qdWRnZSlcbiAgICAgICAgICAgICAgICA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIGxldCByZXMgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIHJlcyA9IHJlcy5jb25jYXQodGhpcy5kaXNjaXBsaW5lX2p1ZGdlc19ieV9yb2xlc1thcmd1bWVudHNbaV1dIHx8IFtdKTtcbiAgICAgICAgfVxuICAgICAgICByZXMuc29ydCgoYSwgYikgPT4gYS5pZHggLSBiLmlkeCk7XG4gICAgICAgIHJldHVybiByZXMubWFwKChiKSA9PiBiLmRpc2NpcGxpbmVfanVkZ2UpO1xuICAgIH1cbiAgICBnZXRTY29yZXNUYWJsZUJ5Um9sZXMoKSB7XG4gICAgICAgIGxldCBkaXNjaXBsaW5lX2p1ZGdlX2lkcyA9IHRoaXMuZ2V0RGlzY2lwbGluZUp1ZGdlc0J5Um9sZXMoLi4uYXJndW1lbnRzKS5tYXAoKGRqKSA9PiBkai5pZCk7XG4gICAgICAgIHJldHVybiB0aGlzLnJ1bl93cmFwcGVycy5tYXAoKHcpID0+IHcuZ2V0U2NvcmVzQnlKdWRnZUlkcyhkaXNjaXBsaW5lX2p1ZGdlX2lkcykpO1xuICAgIH1cbiAgICBnZXRSZXN1bHRzSW5mbygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucnVuX3dyYXBwZXJzLm1hcCgodykgPT4gdy5yZXN1bHRzX2luZm8pO1xuICAgIH1cbiAgICBnZXRSdW5zKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ydW5fd3JhcHBlcnMubWFwKCh3KSA9PiB3LnJ1bik7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGFydGljaXBhbnREaXNwbGF5KHBhcnRpY2lwYW50KSB7XG4gICAgaWYgKHBhcnRpY2lwYW50LmZvcm1hdGlvbl9uYW1lICE9PSBcIlwiKSB7XG4gICAgICAgIHJldHVybiA8cD57IHBhcnRpY2lwYW50LmZvcm1hdGlvbl9uYW1lIH08L3A+O1xuICAgIH1cbiAgICByZXR1cm4gcGFydGljaXBhbnQuc3BvcnRzbWVuLm1hcCgocywgaWR4KSA9PiA8cCBrZXk9eyBpZHggfT57IHMubGFzdF9uYW1lICsgXCIgXCIgKyBzLmZpcnN0X25hbWUgfTwvcD4pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2NvcmluZ1R5cGUoZGlzY2lwbGluZV9qdWRnZSwgc2NvcmluZ19zeXN0ZW1fbmFtZSkge1xuICAgIHN3aXRjaCAoZGlzY2lwbGluZV9qdWRnZS5yb2xlKSB7XG4gICAgY2FzZSBcImRhbmNlX2p1ZGdlXCI6XG4gICAgICAgIHN3aXRjaCAoc2NvcmluZ19zeXN0ZW1fbmFtZSkge1xuICAgICAgICBjYXNlIFwicm9zZmFyci5mb3JtYXRpb25cIjpcbiAgICAgICAgICAgIHJldHVybiBcImZvcm1hdGlvblwiO1xuICAgICAgICBjYXNlIFwicm9zZmFyci5mb3JtYXRpb25fYWNyb1wiOlxuICAgICAgICAgICAgcmV0dXJuIFwiZm9ybWF0aW9uX2Fjcm9cIjtcbiAgICAgICAgY2FzZSBcInJvc2ZhcnIuc2ltcGxpZmllZFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwic2ltcGxpZmllZFwiO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIFwiZGFuY2VcIjtcbiAgICAgICAgfVxuICAgIGNhc2UgXCJhY3JvX2p1ZGdlXCI6XG4gICAgICAgIHN3aXRjaCAoc2NvcmluZ19zeXN0ZW1fbmFtZSkge1xuICAgICAgICBjYXNlIFwicm9zZmFyci5hbV9maW5hbF9md1wiOlxuICAgICAgICAgICAgcmV0dXJuIFwiZGFuY2VcIjtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBcImFjcm9cIjtcbiAgICAgICAgfVxuICAgIGNhc2UgXCJ0ZWNoX2p1ZGdlXCI6XG4gICAgICAgIHJldHVybiBcInRlY2hcIjtcbiAgICBjYXNlIFwiaGVhZF9qdWRnZVwiOlxuICAgICAgICByZXR1cm4gXCJoZWFkXCI7XG4gICAgfVxufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGNsb25lKG9iaikge1xuICAgIGlmICh0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG9iaikpO1xufVxuXG5jbGFzcyBDbXBDaGFpbkltcGwge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnJlc3VsdCA9IDA7XG4gICAgfVxuICAgIGNtcChhLCBiKSB7XG4gICAgICAgIGlmICh0aGlzLnJlc3VsdCA9PT0gMCkge1xuICAgICAgICAgICAgaWYgKGEgPCBiKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZXN1bHQgPSAtMTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoYSA+IGIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlc3VsdCA9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGVuZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVzdWx0O1xuICAgIH1cbn1cblxuZXhwb3J0IHZhciBDbXBDaGFpbiA9ICgpID0+IG5ldyBDbXBDaGFpbkltcGwoKTtcbiIsImltcG9ydCB7IHRyYW5zbGF0ZSwgZ2V0UG9zc2libGVUb3VyTmFtZXMgfSBmcm9tIFwiLi9ydVwiO1xuXG5leHBvcnQgdmFyIF8gPSB0cmFuc2xhdGU7XG5leHBvcnQgdmFyIHRvdXJfbmFtZXMgPSBnZXRQb3NzaWJsZVRvdXJOYW1lcygpO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHRyYW5zbGF0ZShzcmMsIGFyZykge1xuICAgIGZ1bmN0aW9uIGNob29zZUVuZGluZyhuLCBlMSwgZTIsIGU1KSB7XG4gICAgICAgIGxldCB4ID0gbiAlIDEwMDtcbiAgICAgICAgaWYgKE1hdGguZmxvb3IoeCAvIDEwKSA9PT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIGU1O1xuICAgICAgICB9XG4gICAgICAgIGlmICh4ICUgMTAgPT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiBlMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoeCAlIDEwID49IDUgfHwgeCAlIDEwID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gZTU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGUyO1xuICAgIH1cblxuICAgIGxldCBQSFJBU0VTID0ge1xuICAgICAgICBcImFkbWluXCI6IHtcbiAgICAgICAgICAgIFwiYWxlcnRzXCI6IHtcbiAgICAgICAgICAgICAgICBcImFib3V0XCI6ICh2ZXJzaW9uLCBkYXRlKSA9PiA8ZGl2IGNsYXNzTmFtZT1cImFib3V0XCI+XG4gICAgICAgICAgICAgICAgICAgIDxwPjxiPlJvY2tKdWRnZSB7dmVyc2lvbn08L2I+ICjQvtGCIHtkYXRlfSkgJm1kYXNoOyDRgdC40YHRgtC10LzQsCDQtNC70Y8g0L/QvtC00YHRh9C10YLQsCDRgNC10LfRg9C70YzRgtCw0YLQvtCyINGB0L7RgNC10LLQvdC+0LLQsNC90LjQuSDQv9C+INCw0LrRgNC+0LHQsNGC0LjRh9C10YHQutC+0LzRgyDRgNC+0Lot0L0t0YDQvtC70LvRgy48L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPtCQ0LLRgtC+0YDRgdC60LjQtSDQv9GA0LDQstCwINC90LAg0YHQuNGB0YLQtdC80YMgUm9ja0p1ZGdlINC/0L7Qu9C90L7RgdGC0YzRjiDQv9GA0LjQvdCw0LTQu9C10LbQsNGCINGA0LDQt9GA0LDQsdC+0YLRh9C40LrRgyDQkNGA0YLQtdC80YMg0JrQsNC30LDQutC+0LLRgy4g0KHQvtCw0LLRgtC+0YAg0YHQuNGB0YLQtdC80Ysg0JDQvdGC0L7QvSDQkNC80LXQu9C40L0uPC9wPlxuICAgICAgICAgICAgICAgICAgICA8cD7QodC40YHRgtC10LzQsCDRgNCw0YHQv9GA0L7RgdGC0YDQsNC90Y/QtdGC0YHRjyDQv9C+INC70LjRhtC10L3Qt9C40LggTGludW0gZC5vLm8gKGluZm9AbGludW0uaHIpLiDQlNC70Y8g0LjRgdC/0L7Qu9GM0LfQvtCy0LDQvdC40Y8g0YHQuNGB0YLQtdC80Ysg0YHRg9C00LXQudGB0YLQstCwIFJvY2tKdWRnZSDQvdC10L7QsdGF0L7QtNC40LzQviDQuCDQtNC+0YHRgtCw0YLQvtGH0L3QviDQuNC80LXRgtGMINC/0YDQsNCy0L4g0LjRgdC/0L7Qu9GM0LfQvtCy0LDQvdC40Y8g0YHQuNGB0YLQtdC80YsgTGludW0gTFBTLjwvcD5cbiAgICAgICAgICAgICAgICAgICAgPHA+0J7RhNC40YbQuNCw0LvRjNC90YvQuSDRgdCw0LnRgjogPGEgaHJlZj1cImh0dHBzOi8vcm9ja2p1ZGdlLmNvbS9cIiB0YXJnZXQ9XCJfYmxhbmtcIj5odHRwczovL3JvY2tqdWRnZS5jb20vPC9hPjwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj4sXG4gICAgICAgICAgICAgICAgXCJhZGRfcHJvZ3JhbXNfYWZ0ZXJfY3JlYXRpb25cIjogXCLQn9GA0L7Qs9GA0LDQvNC80Ysg0LzQvtC20L3QviDQsdGD0LTQtdGCINC00L7QsdCw0LLQuNGC0Ywg0YLQvtC70YzQutC+INC/0L7RgdC70LUg0YHQvtGF0YDQsNC90LXQvdC40Y8g0YPRh9Cw0YHRgtC90LjQutCwXCIsXG4gICAgICAgICAgICAgICAgXCJhdXRvX3ByaW50ZXJfYXZhaWxhYmxlXCI6IFwi0JDQstGC0L7QvNCw0YLQuNGH0LXRgdC60LDRjyDQv9C10YfQsNGC0Ywg0LrQvtGA0YDQtdC60YLQvdC+INC90LDRgdGC0YDQvtC10L3QsCDQuCDQvNC+0LbQtdGCINCx0YvRgtGMINC40YHQv9C+0LvRjNC30L7QstCw0L3QsC5cIixcbiAgICAgICAgICAgICAgICBcImF1dG9fcHJpbnRlcl9ub3RfYXZhaWxhYmxlXCI6IFwi0JDQstGC0L7QvNCw0YLQuNGH0LXRgdC60LDRjyDQv9C10YfQsNGC0Ywg0L3QtdC00L7RgdGC0YPQv9C90LAg0L3QsCDRjdGC0L7QvCDQutC+0LzQv9GM0YLQtdGA0LUuXCIsXG4gICAgICAgICAgICAgICAgXCJub19maW5hbGl6ZWRcIjogXCLQntGC0YHRg9GC0YHRgtCy0YPRjtGCINGE0LjQvdCw0LvQuNC30LjRgNC+0LLQsNC90L3Ri9C1INGC0YPRgNGLXCIsXG4gICAgICAgICAgICAgICAgXCJ1bmZpbmFsaXplX3dhcm5pbmdcIjogPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPHA+PHN0cm9uZz7QpNC40L3QsNC70LjQt9Cw0YbQuNGPINC00L7Qu9C20L3QsCDQvtGC0LzQtdC90Y/RgtGM0YHRjyDRgtC+0LvRjNC60L4g0LIg0LjRgdC60LvRjtGH0LjRgtC10LvRjNC90YvRhSDRgdC70YPRh9Cw0Y/RhSE8L3N0cm9uZz48L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPtCV0YHQu9C4INC20LUg0Y3RgtC+INC00LXQudGB0YLQstC40YLQtdC70YzQvdC+INC90LXQvtCx0YXQvtC00LjQvNC+LCDQvtCx0YDQsNGC0LjRgtC1INCy0L3QuNC80LDQvdC40LUsINGH0YLQviDQv9C+0YHQu9C1INC/0L7QstGC0L7RgNC90L7QuSDRhNC40L3QsNC70LjQt9Cw0YbQuNC4INGB0L/QuNGB0L7QuiDRg9GH0LDRgdGC0L3QuNC60L7QslxuICAgICAgICAgICAgICAgICAgICDRgdC70LXQtNGD0Y7RidC10LPQviDRgtGD0YDQsCDQsdGD0LTQtdGCINCw0LLRgtC+0LzQsNGC0LjRh9C10YHQutC4INC/0LXRgNC10YHQvtC30LTQsNC9LiDQoNC10LfRg9C70YzRgtCw0YLRiyDRg9GH0LDRgdGC0L3QuNC60L7Qsiwg0L/RgNC+0YjQtdC00YjQuNGFINCyINGB0LvQtdC00YPRjtGJ0LjQuSDRgtGD0YAg0L/QvtGB0LvQtSDQv9C10YDQstC+0LlcbiAgICAgICAgICAgICAgICAgICAg0YTQuNC90LDQu9C40LfQsNGG0LjQuCDQuCDQvdC1INC/0YDQvtGI0LXQtNGI0LjRhSDQv9C+0YHQu9C1INC/0L7QstGC0L7RgNC90L7QuSDQsdGD0LTRg9GCINCx0LXQt9Cy0L7Qt9Cy0YDQsNGC0L3QviDRg9GC0LXRgNGP0L3RiyE8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPtCYINC90LUg0LfQsNCx0YPQtNGM0YLQtSDQt9Cw0L3QvtCy0L4g0L3QsNC/0LXRh9Cw0YLQsNGC0Ywg0LLRgdC1INGC0LHQu9C40YbRiy48L3A+PC9kaXY+LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiYXV0b19wcmludGVyXCI6IHtcbiAgICAgICAgICAgICAgICBcImRpc2NpcGxpbmVcIjogXCLQlNC40YHRhtC40L/Qu9C40L3QsFwiLFxuICAgICAgICAgICAgICAgIFwiZGlzY2lwbGluZV9yZXN1bHRzXCI6IFwi0KDQtdC30YPQu9GM0YLQsNGC0Ysg0LTQuNGB0YbQuNC/0LvQuNC90YtcIixcbiAgICAgICAgICAgICAgICBcImhlYXRzXCI6IFwi0JfQsNGF0L7QtNGLINGB0LsuwqDRgtGD0YDQsFwiLFxuICAgICAgICAgICAgICAgIFwicHJpbnRfdGVzdF9wYWdlXCI6IFwi0J3QsNC/0LXRh9Cw0YLQsNGC0Ywg0YLQtdGB0YLQvtCy0YPRjiDRgdGC0YDQsNC90LjRhtGDXCIsXG4gICAgICAgICAgICAgICAgXCJxdWV1ZVwiOiBcItCe0YfQtdGA0LXQtNGMINC/0LXRh9Cw0YLQuFwiLFxuICAgICAgICAgICAgICAgIFwicXVldWVfZW1wdHlcIjogXCLQntGH0LXRgNC10LTRjCDQv9GD0YHRgtCwXCIsXG4gICAgICAgICAgICAgICAgXCJyZXN1bHRzXzFcIjogXCLQmtGA0LDRgtC60LDRjyDRgtCw0LHQu9C40YbQsFwiLFxuICAgICAgICAgICAgICAgIFwicmVzdWx0c18yXCI6IFwi0KHRgNC10LTQvdGP0Y8g0YLQsNCx0LvQuNGG0LBcIixcbiAgICAgICAgICAgICAgICBcInJlc3VsdHNfM1wiOiBcItCf0L7QtNGA0L7QsdC90LDRjyDRgtCw0LHQu9C40YbQsFwiLFxuICAgICAgICAgICAgICAgIFwicnVsZXNcIjogXCLQl9Cw0LTQsNC90LjRj1wiLFxuICAgICAgICAgICAgICAgIFwidGVzdFwiOiBcIlwiLFxuICAgICAgICAgICAgICAgIFwidGVzdF9wYWdlXCI6IFwi0KLQtdGB0YLQvtCy0LDRjyDRgdGC0YDQsNC90LjRhtCwXCIsXG4gICAgICAgICAgICAgICAgXCJ0ZXN0X3RleHRcIjogXCLQrdGC0L4g0YLQtdGB0YLQvtCy0LDRjyDRgdGC0YDQsNC90LjRhtCwIFJvY2tKdWRnZVwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiYnV0dG9uc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJhZGRfY2x1YlwiOiBcItCU0L7QsdCw0LLQuNGC0Ywg0LrQu9GD0LFcIixcbiAgICAgICAgICAgICAgICBcImFkZF9jb21wZXRpdGlvblwiOiBcItCh0L7Qt9C00LDRgtGMINGB0L7RgNC10LLQvdC+0LLQsNC90LjQtVwiLFxuICAgICAgICAgICAgICAgIFwiYWRkX2NvbXBldGl0aW9uX3BsYW5faXRlbVwiOiBcItCU0L7QsdCw0LLQuNGC0Ywg0Y3Qu9C10LzQtdC90YJcIixcbiAgICAgICAgICAgICAgICBcImFkZF9kaXNjaXBsaW5lXCI6IFwi0JTQvtCx0LDQstC40YLRjCDQtNC40YHRhtC40L/Qu9C40L3Rg1wiLFxuICAgICAgICAgICAgICAgIFwiYWRkX2p1ZGdlXCI6IFwi0JTQvtCx0LDQstC40YLRjCDRgdGD0LTRjNGOXCIsXG4gICAgICAgICAgICAgICAgXCJhZGRfcGFydGljaXBhbnRcIjogXCLQlNC+0LHQsNCy0LjRgtGMINGD0YfQsNGB0YLQvdC40LrQsFwiLFxuICAgICAgICAgICAgICAgIFwiYWRkX3RvdXJcIjogXCLQlNC+0LHQsNCy0LjRgtGMINGC0YPRgFwiLFxuICAgICAgICAgICAgICAgIFwiY29uZmlybV9zY29yZVwiOiBcItCX0LDRhNC40LrRgdC40YDQvtCy0LDRgtGMXCIsXG4gICAgICAgICAgICAgICAgXCJkb2N4X2hlYXRzXCI6IFwi0JfQsNGF0L7QtNGLINCyIERPQ1hcIixcbiAgICAgICAgICAgICAgICBcImRvY3hfbnVtYmVyc1wiOiBcItCd0L7QvNC10YDQsCDQsiBET0NYXCIsXG4gICAgICAgICAgICAgICAgXCJkb2N4X3Jlc3VsdHNcIjogXCLQoNC10LfRg9C70YzRgtCw0YLRiyDQsiBET0NYXCIsXG4gICAgICAgICAgICAgICAgXCJleHBvcnRcIjogXCLQrdC60YHQv9C+0YDRgtC40YDQvtCy0LDRgtGMXCIsXG4gICAgICAgICAgICAgICAgXCJpbXBvcnRcIjogXCLQmNC80L/QvtGA0YLQuNGA0L7QstCw0YLRjFwiLFxuICAgICAgICAgICAgICAgIFwibGF1bmNoX2F1dG9fcHJpbnRlclwiOiBcItCX0LDQv9GD0YHQuiDQsNCy0YLQvtC80LDRgtC40YfQtdGB0LrQvtC5INC/0LXRh9Cw0YLQuFwiLFxuICAgICAgICAgICAgICAgIFwibG9hZF9hY3JvXCI6IFwi0JfQsNCz0YDRg9C30LjRgtGMINCw0LrRgNC+0LHQsNGC0LjQutGDXCIsXG4gICAgICAgICAgICAgICAgXCJyZWZyZXNoX2NsaWVudHNcIjogXCLQn9C10YDQtdC30LDQs9GA0YPQt9C40YLRjCDQstGB0LUg0YPRgdGC0YDQvtC50YHRgtCy0LBcIixcbiAgICAgICAgICAgICAgICBcInJlbG9hZF9jbGllbnRzXCI6IFwi0J7QsdC90L7QstC40YLRjCDQtNCw0L3QvdGL0LUg0L3QsCDQstGB0LXRhSDRg9GB0YLRgNC+0LnRgdGC0LLQsNGFXCIsXG4gICAgICAgICAgICAgICAgXCJzd2l0Y2hfdG9fcGxhblwiOiBcItCh0L7RgNGC0LjRgNC+0LrQsCDQv9C+INC/0YDQvtCz0YDQsNC80LzQtVwiLFxuICAgICAgICAgICAgICAgIFwic3dpdGNoX3RvX2Rpc2NpcGxpbmVzXCI6IFwi0KHQvtGA0YLQuNGA0L7QutCwINC/0L4g0LTQuNGB0YbQuNC/0LvQuNC90LDQvFwiLFxuICAgICAgICAgICAgICAgIFwidG9fc3RhcnRfcGFnZVwiOiBcItCd0LAg0LPQu9Cw0LLQvdGD0Y5cIixcbiAgICAgICAgICAgICAgICBcInVuY29uZmlybV9zY29yZVwiOiBcItCe0YLQvNC10L3QsCDRhNC40LrRgdCw0YbQuNC4XCIsXG4gICAgICAgICAgICAgICAgXCJ1bmZpbmFsaXplXCI6IFwi0J7RgtC80LXQvdC40YLRjCDRhNC40L3QsNC70LjQt9Cw0YbQuNGOXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJjb25maXJtc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJkZWxldGVfY2x1YlwiOiBcItCS0Ysg0LTQtdC50YHRgtCy0LjRgtC10LvRjNC90L4g0YXQvtGC0LjRgtC1INGD0LTQsNC70LjRgtGMINGN0YLQvtGCINC60LvRg9CxP1wiLFxuICAgICAgICAgICAgICAgIFwiZGVsZXRlX2NvbXBldGl0aW9uXCI6IFwi0JLRiyDQtNC10LnRgdGC0LLQuNGC0LXQu9GM0L3QviDRhdC+0YLQuNGC0LUg0YPQtNCw0LvQuNGC0Ywg0Y3RgtC+INGB0L7RgNC10LLQvdC+0LLQsNC90LjQtT9cIixcbiAgICAgICAgICAgICAgICBcImRlbGV0ZV9kaXNjaXBsaW5lXCI6IFwi0JLRiyDQtNC10LnRgdGC0LLQuNGC0LXQu9GM0L3QviDRhdC+0YLQuNGC0LUg0YPQtNCw0LvQuNGC0Ywg0Y3RgtGDINC00LjRgdGG0LjQv9C70LjQvdGDP1wiLFxuICAgICAgICAgICAgICAgIFwiZGVsZXRlX2p1ZGdlXCI6IFwi0JLRiyDQtNC10LnRgdGC0LLQuNGC0LXQu9GM0L3QviDRhdC+0YLQuNGC0LUg0YPQtNCw0LvQuNGC0Ywg0Y3RgtC+0LPQviDRgdGD0LTRjNGOP1wiLFxuICAgICAgICAgICAgICAgIFwiZGVsZXRlX3BhcnRpY2lwYW50XCI6IFwi0JLRiyDQtNC10LnRgdGC0LLQuNGC0LXQu9GM0L3QviDRhdC+0YLQuNGC0LUg0YPQtNCw0LvQuNGC0Ywg0Y3RgtC+0LPQviDRg9GH0LDRgdGC0L3QuNC60LA/XCIsXG4gICAgICAgICAgICAgICAgXCJkZWxldGVfcHJvZ3JhbVwiOiBcItCS0Ysg0LTQtdC50YHRgtCy0LjRgtC10LvRjNC90L4g0YXQvtGC0LjRgtC1INGD0LTQsNC70LjRgtGMINGN0YLRgyDQv9GA0L7Qs9GA0LDQvNC80YM/XCIsXG4gICAgICAgICAgICAgICAgXCJkZWxldGVfdG91clwiOiBcItCS0Ysg0LTQtdC50YHRgtCy0LjRgtC10LvRjNC90L4g0YXQvtGC0LjRgtC1INGD0LTQsNC70LjRgtGMINGN0YLQvtGCINGC0YPRgD9cIixcbiAgICAgICAgICAgICAgICBcInJlZnJlc2hfY2xpZW50c1wiOiBcItCS0Ysg0LTQtdC50YHRgtCy0LjRgtC10LvRjNC90L4g0YXQvtGC0LjRgtC1INC/0LXRgNC10LfQsNCz0YDRg9C30LjRgtGMINGB0YLRgNCw0L3QuNGG0YMg0L3QsCDQstGB0LXRhSDQutC70LjQtdC90YLQsNGFP1wiLFxuICAgICAgICAgICAgICAgIFwicmVsb2FkX2NsaWVudHNcIjogXCLQktGLINC00LXQudGB0YLQstC40YLQtdC70YzQvdC+INGF0L7RgtC40YLQtSDQvtCx0L3QvtCy0LjRgtGMINC00LDQvdC90YvQtSDQvdCwINCy0YHQtdGFINC60LvQuNC10L3RgtCw0YU/XCIsXG4gICAgICAgICAgICAgICAgXCJ1bmZpbmFsaXplX3RvdXJcIjogXCLQktGLINC00LXQudGB0YLQstC40YLQtdC70YzQvdC+INGF0L7RgtC40YLQtSDQvtGC0LzQtdC90LjRgtGMINGE0LjQvdCw0LvQuNC30LDRhtC40Y4g0YLRg9GA0LA/INCS0LLQtdC00LjRgtC1IMKrdW5maW5hbGl6ZcK7LCDRh9GC0L7QsdGLINC/0YDQvtC00L7Qu9C20LjRgtGMXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJoZWFkZXJzXCI6IHtcbiAgICAgICAgICAgICAgICBcImFib3V0XCI6IFwi0J4g0L/RgNC+0LPRgNCw0LzQvNC1XCIsXG4gICAgICAgICAgICAgICAgXCJhdXRvX3ByaW50ZXJcIjogXCLQkNCy0YLQvtC80LDRgtC40YfQtdGB0LrQsNGPINC/0LXRh9Cw0YLRjFwiLFxuICAgICAgICAgICAgICAgIFwiY2xpZW50c19tYW5hZ2VtZW50XCI6IFwi0KPQv9GA0LDQstC70LXQvdC40LUg0L/QvtC00LrQu9GO0YfQtdC90L3Ri9C80Lgg0YPRgdGC0YDQvtC50YHRgtCy0LDQvNC4XCIsXG4gICAgICAgICAgICAgICAgXCJjbHVic1wiOiBcItCa0LvRg9Cx0Yst0YPRh9Cw0YHRgtC90LjQutC4XCIsXG4gICAgICAgICAgICAgICAgXCJjbHVic19tYW5hZ2VtZW50XCI6IFwi0KPQv9GA0LDQstC70LXQvdC40LUg0LrQu9GD0LHQsNC80LhcIixcbiAgICAgICAgICAgICAgICBcImNvbXBldGl0aW9uX3BsYW5cIjogXCLQn9GA0L7Qs9GA0LDQvNC80LAg0YHQvtGA0LXQstC90L7QstCw0L3QuNC5XCIsXG4gICAgICAgICAgICAgICAgXCJjb21wZXRpdGlvbl9wbGFuX21hbmFnZW1lbnRcIjogXCLQn9GA0L7Qs9GA0LDQvNC80LAg0YHQvtGA0LXQstC90L7QstCw0L3QuNC5XCIsXG4gICAgICAgICAgICAgICAgXCJjb21wZXRpdGlvbl9yZXBvcnRcIjogXCLQn9GA0L7RgtC+0LrQvtC7INGB0L7RgNC10LLQvdC+0LLQsNC90LjQuVwiLFxuICAgICAgICAgICAgICAgIFwiY29tcGV0aXRpb25fcmVzdWx0c1wiOiBcItCg0LXQt9GD0LvRjNGC0LDRgtGLINGB0L7RgNC10LLQvdC+0LLQsNC90LjQuVwiLFxuICAgICAgICAgICAgICAgIFwiY29tcGV0aXRpb25zX21hbmFnZW1lbnRcIjogXCLQo9C/0YDQsNCy0LvQtdC90LjQtSDRgdC+0YDQtdCy0L3QvtCy0LDQvdC40Y/QvNC4XCIsXG4gICAgICAgICAgICAgICAgXCJkaXNjaXBsaW5lX3Jlc3VsdHNcIjogXCLQoNC10LfRg9C70YzRgtCw0YLRiyDQtNC40YHRhtC40L/Qu9C40L3Ri1wiLFxuICAgICAgICAgICAgICAgIFwiZGlzY2lwbGluZXNfbWFuYWdlbWVudFwiOiBcItCj0L/RgNCw0LLQu9C10L3QuNC1INC00LjRgdGG0LjQv9C70LjQvdCw0LzQuFwiLFxuICAgICAgICAgICAgICAgIFwiZXhwb3J0X2NvbXBldGl0aW9uXCI6IFwi0K3QutGB0L/QvtGA0YIg0LTQsNC90L3Ri9GFINGC0YPRgNC90LjRgNCwINC4INGA0LXQt9GD0LvRjNGC0LDRgtC+0LJcIixcbiAgICAgICAgICAgICAgICBcImltcG9ydF9jb21wZXRpdGlvblwiOiBcItCY0LzQv9C+0YDRgiDQtNCw0L3QvdGL0YUg0YLRg9GA0L3QuNGA0LBcIixcbiAgICAgICAgICAgICAgICBcImltcG9ydF9leHBvcnRcIjogXCLQmNC80L/QvtGA0YIgLyDRjdC60YHQv9C+0YDRglwiLFxuICAgICAgICAgICAgICAgIFwianVkZ2VzXCI6IFwi0KHRg9C00LXQudGB0LrQsNGPINCx0YDQuNCz0LDQtNCwXCIsXG4gICAgICAgICAgICAgICAgXCJqdWRnZXNfbWFuYWdlbWVudFwiOiBcItCj0L/RgNCw0LLQu9C10L3QuNC1INGB0YPQtNGM0Y/QvNC4XCIsXG4gICAgICAgICAgICAgICAgXCJsb2FkX2Fjcm9iYXRpY3NcIjogXCLQl9Cw0LPRgNGD0LfQutCwINCw0LrRgNC+0LHQsNGC0LjQutC4XCIsXG4gICAgICAgICAgICAgICAgXCJwYXJ0aWNpcGFudHNfbWFuYWdlbWVudFwiOiBcItCj0L/RgNCw0LLQu9C10L3QuNC1INGD0YfQsNGB0YLQvdC40LrQsNC80LhcIixcbiAgICAgICAgICAgICAgICBcInNlcnZpY2VfbWVudVwiOiBcItCh0LXRgNCy0LjRgdC90L7QtSDQvNC10L3RjlwiLFxuICAgICAgICAgICAgICAgIFwic3RhcnRfbGlzdFwiOiBcItCh0YLQsNGA0YLQvtCy0YvQuSDQu9C40YHRglwiLFxuICAgICAgICAgICAgICAgIFwidG91cl9oZWF0c1wiOiBcItCX0LDRhdC+0LTRiyDRg9GH0LDRgdGC0L3QuNC60L7QslwiLFxuICAgICAgICAgICAgICAgIFwidG91cl9yZXN1bHRzXCI6IFwi0KDQtdC30YPQu9GM0YLQsNGC0Ysg0YLRg9GA0LBcIixcbiAgICAgICAgICAgICAgICBcInVuZmluYWxpemVfdG91clwiOiBcItCe0YLQvNC10L3QsCDRhNC40L3QsNC70LjQt9Cw0YbQuNC4INGC0YPRgNCwXCIsXG4gICAgICAgICAgICAgICAgXCJ1bnBpY2tlZF90b3Vyc1wiOiBcItCd0LUg0LLQutC70Y7Rh9C10L3RiyDQsiDQv9GA0L7Qs9GA0LDQvNC80YNcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImxhYmVsc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJjb21wZXRpdGlvbl9uYW1lXCI6IFwi0J3QsNC40LzQtdC90L7QstCw0L3QuNC1INGB0L7RgNC10LLQvdC+0LLQsNC90LjRj1wiLFxuICAgICAgICAgICAgICAgIFwiY29tcGV0aXRpb25fZGF0ZVwiOiBcItCU0LDRgtCwINC/0YDQvtCy0LXQtNC10L3QuNGPXCIsXG4gICAgICAgICAgICAgICAgXCJpbmNsdWRlX2Fjcm9iYXRpY3NcIjogXCLQktC60LvRjtGH0LjRgtGMINCw0LrRgNC+0LHQsNGC0LjQutGDXCIsXG4gICAgICAgICAgICAgICAgXCJpbmNsdWRlX2Zvcm1hdGlvbl9zcG9ydHNtZW5cIjogXCLQktC60LvRjtGH0LjRgtGMINGB0L7RgdGC0LDQsiDRhNC+0YDQvNC10LnRiNC90L7QslwiLFxuICAgICAgICAgICAgICAgIFwibm9fZmlsZXNfc2VsZWN0ZWRcIjogXCLQktGL0LHQtdGA0LjRgtC1INGE0LDQudC7Li4uXCIsXG4gICAgICAgICAgICAgICAgXCJwYXN0ZV9hY3JvXCI6IFwi0JLRgdGC0LDQstGM0YLQtSDQtNCw0L3QvdGL0LUg0LjQtyDQutCw0LvRjNC60YPQu9GP0YLQvtGA0LAg0LDQutGA0L7QsdCw0YLQuNC60LhcIixcbiAgICAgICAgICAgICAgICBcInN1YlwiOiBcItC30LDQv1wiLCAgLy8gc3Vic3RpdHV0ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwibWVzc2FnZXNcIjoge1xuICAgICAgICAgICAgICAgIFwiaW52YWxpZF9wYXNzY29kZVwiOiBcItCS0LLQtdC00ZHQvSDQvdC10LLQtdGA0L3Ri9C5INC60L7QtCDQv9C+0YLQstC10YDQttC00LXQvdC40Y9cIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIm1lbnVcIjoge1xuICAgICAgICAgICAgICAgIFwiY29tcGV0aXRpb25fcmVwb3J0XCI6IFwi0J/RgNC+0YLQvtC60L7QuyDRgdC+0YDQtdCy0L3QvtCy0LDQvdC40LlcIixcbiAgICAgICAgICAgICAgICBcImRpc2NpcGxpbmVfcmVzdWx0c1wiOiBcItCg0LXQt9GD0LvRjNGC0LDRgtGLINC00LjRgdGG0LjQv9C70LjQvdGLXCIsXG4gICAgICAgICAgICAgICAgXCJpbXBvcnRfZXhwb3J0XCI6IFwi0JjQvNC/0L7RgNGCIC8g0Y3QutGB0L/QvtGA0YJcIixcbiAgICAgICAgICAgICAgICBcIm1hbmFnZV9jbHVic1wiOiBcItCj0L/RgNCw0LLQu9C10L3QuNC1INC60LvRg9Cx0LDQvNC4XCIsXG4gICAgICAgICAgICAgICAgXCJtYW5hZ2VfY29tcGV0aXRpb25fcGxhblwiOiBcItCf0YDQvtCz0YDQsNC80LzQsCDRgdC+0YDQtdCy0L3QvtCy0LDQvdC40LlcIixcbiAgICAgICAgICAgICAgICBcIm1hbmFnZV9kaXNjaXBsaW5lc1wiOiBcItCj0L/RgNCw0LLQu9C10L3QuNC1INC00LjRgdGG0LjQv9C70LjQvdCw0LzQuFwiLFxuICAgICAgICAgICAgICAgIFwibWFuYWdlX2p1ZGdlc1wiOiBcItCj0L/RgNCw0LLQu9C10L3QuNC1INGB0YPQtNGM0Y/QvNC4XCIsXG4gICAgICAgICAgICAgICAgXCJtYW5hZ2Vfc3BvcnRzbWVuXCI6IFwi0KPQv9GA0LDQstC70LXQvdC40LUg0YHQv9C+0YDRgtGB0LzQtdC90LDQvNC4XCIsXG4gICAgICAgICAgICAgICAgXCJtYW5hZ2VfdG91cnNcIjogXCLQo9C/0YDQsNCy0LvQtdC90LjQtSDRgtGD0YDQsNC80LhcIixcbiAgICAgICAgICAgICAgICBcInN0YXJ0X2xpc3RcIjogXCLQodGC0LDRgNGC0L7QstGL0Lkg0LvQuNGB0YJcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcInBocmFzZXNcIjoge1xuICAgICAgICAgICAgICAgIFwidG90YWxfbl9wYXJ0aWNpcGFudHNcIjogKG4pID0+IFwi0JjRgtC+0LPQviBcIiArIG4gKyBcIiDRg9GH0LDRgdGC0L3QuNC6XCIgKyBjaG9vc2VFbmRpbmcobiwgXCJcIiwgXCLQsFwiLCBcItC+0LJcIiksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJqdWRnaW5nLXRhYnNcIjoge1xuICAgICAgICAgICAgICAgIFwidG91ci1hZG1pblwiOiBcItCj0L/RgNCw0LLQu9C10L3QuNC1XCIsXG4gICAgICAgICAgICAgICAgXCJoZWF0c1wiOiBcItCX0LDRhdC+0LTRi1wiLFxuICAgICAgICAgICAgICAgIFwicmVzdWx0cy0xXCI6IFwi0JrRgNCw0YLQutCw0Y8g0YLQsNCx0LvQuNGG0LBcIixcbiAgICAgICAgICAgICAgICBcInJlc3VsdHMtMlwiOiBcItCh0YDQtdC00L3Rj9GPINGC0LDQsdC70LjRhtCwXCIsXG4gICAgICAgICAgICAgICAgXCJyZXN1bHRzLTNcIjogXCLQn9C+0LTRgNC+0LHQvdCw0Y8g0YLQsNCx0LvQuNGG0LBcIixcbiAgICAgICAgICAgICAgICBcImRpc2NpcGxpbmUtcmVzdWx0c1wiOiBcItCg0LXQt9GD0LvRjNGC0LDRgtGLINC00LjRgdGG0LjQv9C70LjQvdGLXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBcImVycm9yc1wiOiB7XG4gICAgICAgICAgICBcImFkbWluXCI6IHtcbiAgICAgICAgICAgICAgICBcImxvYWRfc3ludGF4X2Vycm9yXCI6IFwi0J3QtdC60L7RgNGA0LXQutGC0L3Ri9C5INGE0L7RgNC80LDRgiDQtNCw0L3QvdGL0YVcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImFwaVwiOiB7XG4gICAgICAgICAgICAgICAgXCJkdXBsaWNhdGVkX2V4dGVybmFsX2lkXCI6IFwi0JIg0LTQsNC90L3Ri9GFINC40LzQtdGO0YLRgdGPINC30LDQv9C40YHQuCDRgSDQv9C+0LLRgtC+0YDRj9GO0YnQuNC80LjQvNGB0Y8gZXh0ZXJuYWxfaWRcIixcbiAgICAgICAgICAgICAgICBcInVuYWJsZV90b19nZXRcIjogKHdhbnRlZCkgPT4gXCLQndC10LLQvtC30LzQvtC20L3QviDQv9C+0LvRg9GH0LjRgtGMIFwiICsgd2FudGVkICsgXCIg0LjQtyDQt9Cw0L/RgNC+0YHQsFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiY2x1YlwiOiB7XG4gICAgICAgICAgICAgICAgXCJkZWxldGVfd2l0aF9wYXJ0aWNpcGFudHNcIjogXCLQndC10LLQvtC30LzQvtC20L3QviDRg9C00LDQu9C40YLRjCDQutC70YPQsSwg0Log0LrQvtGC0L7RgNC+0LzRgyDQv9GA0LjQstGP0LfQsNC90Ysg0YPRh9Cw0YHRgtC90LjQutC4XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJjb21wZXRpdGlvblwiOiB7XG4gICAgICAgICAgICAgICAgXCJkZWxldGVfbm9uX2VtcHR5XCI6IFwi0J3QtdCy0L7Qt9C80L7QttC90L4g0YPQtNCw0LvQuNGC0Ywg0YHQvtGA0LXQstC90L7QstCw0L3QuNC1LCDRgdC+0LTQtdGA0LbQsNGJ0LXQtSDQtNC40YHRhtC40L/Qu9C40L3Riywg0LrQu9GD0LHRiyDQuNC70Lgg0YHRg9C00LXQuVwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiY29tcGV0aXRpb25fcGxhblwiOiB7XG4gICAgICAgICAgICAgICAgXCJ0b29fbWFueV90b3Vyc1wiOiAoZCkgPT4gW1wi0J7RiNC40LHQutCwINCyINC/0YDQvtCz0YDQsNC80LzQtSDRgdC+0YDQtdCy0L3QvtCy0LDQvdC40LlcIiwgYNCSINC00LjRgdGG0LjQv9C70LjQvdC1ICR7ZH0g0YHQvtC00LXRgNC20LjRgtGB0Y8g0LHQvtC70YzRiNC1INGC0YPRgNC+0LIsINGH0LXQvCDRgdC+0LfQtNCw0L3QviDQsiDRgdC40YHRgtC10LzQtWBdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJkaXNjaXBsaW5lXCI6IHtcbiAgICAgICAgICAgICAgICBcImNoYW5nZV9qdWRnZXNfd2l0aF9maW5hbGl6ZWRfdG91clwiOiBcItCd0LXQstC+0LfQvNC+0LbQvdC+INC40LfQvNC10L3QuNGC0Ywg0YHQvtGB0YLQsNCyINGB0YPQtNC10Lkg0LTQu9GPINC00LjRgdGG0LjQv9C70LjQvdGLLCDRgdC+0LTQtdGA0LbQsNGJ0LXQuSDRhNC40L3QsNC70LjQt9C40YDQvtCy0LDQvdC90YvQtSDRgtGD0YDRiyBcIixcbiAgICAgICAgICAgICAgICBcImRlbGV0ZV93aXRoX3BhcnRpY2lwYW50c1wiOiBcItCd0LXQstC+0LfQvNC+0LbQvdC+INGD0LTQsNC70LjRgtGMINC00LjRgdGG0LjQv9C70LjQvdGDLCDRgdC+0LTQtdGA0LbQsNGJ0YPRjiDRg9GH0LDRgdGC0L3QuNC60L7QslwiLFxuICAgICAgICAgICAgICAgIFwiZGVsZXRlX3dpdGhfdG91cnNcIjogXCLQndC10LLQvtC30LzQvtC20L3QviDRg9C00LDQu9C40YLRjCDQtNC40YHRhtC40L/Qu9C40L3Rgywg0YHQvtC00LXRgNC20LDRidGD0Y4g0YLRg9GA0YtcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImRpc2NpcGxpbmVfanVkZ2VcIjoge1xuICAgICAgICAgICAgICAgIFwiZGVsZXRlX3dpdGhfZmluYWxpemVkXCI6IFwi0J3QtdCy0L7Qt9C80L7QttC90L4g0YPQtNCw0LvQuNGC0Ywg0YHRg9C00YzRjiwg0YMg0LrQvtGA0L7Qs9C+INC10YHRgtGMINGE0LjQvdCw0LvQuNC30LjRgNC+0LLQsNC90L3QtSDRgtGD0YDRi1wiLFxuICAgICAgICAgICAgICAgIFwiZGVsZXRlX3dpdGhfc2NvcmVzXCI6IFwi0J3QtdCy0L7Qt9C80L7QttC90L4g0YPQtNCw0LvQuNGC0Ywg0YHRg9C00YzRjiDQv9GA0LjQvdGP0LLRiNC10LPQviDRg9GH0LDRgdGC0LjQtSDQsiDRgdGD0LTQtdC50YHRgtCy0LUg0YXQvtGC0Y8g0LHRiyDQvtC00L3QvtCz0L4g0YLRg9GA0LBcIixcbiAgICAgICAgICAgICAgICBcInJlcGVhdGluZ19qdWRnZVwiOiAobmFtZSkgPT4gbmFtZSArIFwiINCy0YHRgtGA0LXRh9Cw0LXRgtGB0Y8g0LIg0YHQv9C40YHQutC1INGB0YPQtNC10Lkg0LHQvtC70LXQtSDQvtC00L3QvtCz0L4g0YDQsNC30LBcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImdsb2JhbFwiOiB7XG4gICAgICAgICAgICAgICAgXCJpbnRlcm5hbF9zZXJ2ZXJfZXJyb3JcIjogW1wi0J7RiNC40LHQutCwINC90LAg0YHQtdGA0LLQtdGA0LVcIiwgXCLQv9GA0L7QstC10YDRjNGC0LUg0LvQvtCz0Lgg0LTQu9GPINC40L3RhNC+0YDQvNCw0YbQuNC4XCJdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwianVkZ2VcIjoge1xuICAgICAgICAgICAgICAgIFwiZGVsZXRlX3dpdGhfZGlzY2lwbGluZXNcIjogXCLQndC10LLQvtC30LzQvtC20L3QviDRg9C00LDQu9C40YLRjCDRgdGD0LTRjNGOLCDQstGF0L7QtNGP0YnQtdCz0L4g0LIg0YHRg9C00LXQudGB0LrRg9GOINCx0YDQuNCz0LDQtNGDINGF0L7RgtGPINCx0Ysg0L7QtNC90L7QuSDQtNC40YHRhtC40L/Qu9C40L3Ri1wiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwicnVuXCI6IHtcbiAgICAgICAgICAgICAgICBcInNldF9wZXJmb3JtZWRfZmxhZ19vbl9maW5hbGl6ZWRcIjogXCLQndC10LLQvtC30LzQvtC20L3QviDQuNC30LzQtdC90LjRgtGMINGB0YLQsNGC0YPRgSDQt9Cw0YXQvtC00LAg0YTQuNC90LDQu9C40LfQuNC90L7QstCw0L3QvdC+0LPQviDRgtGD0YDQsFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwic2NvcmVcIjoge1xuICAgICAgICAgICAgICAgIFwic2NvcmVfbm90X2V4aXN0XCI6IFwi0J/QvtC/0YvRgtC60LAg0L/QvtC70YPRh9C40YLRjCDQt9C90LDRh9C10L3QuNC1INC90LXRgdGD0YnQtdGB0YLQstGD0Y7RidC10Lkg0L7RhtC10L3QutC4INGB0YPQtNGM0LhcIixcbiAgICAgICAgICAgICAgICBcInVwZGF0ZV9vbl9maW5hbGl6ZWRfdG91clwiOiBcItCd0LXQstC+0LfQvNC+0LbQvdC+INC40LfQvNC10L3QuNGC0Ywg0L7RhtC10L3QutGDINCyINGE0LjQvdCw0LvQuNC30LjRgNC+0LLQsNC90L3QvtC8INGC0YPRgNC1XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJ0b3VyXCI6IHtcbiAgICAgICAgICAgICAgICBcImFkZF9iZWZvcmVfZmluYWxpemVkXCI6IFwi0J3QtdCy0L7Qt9C80L7QttC90L4g0LTQvtCx0LDQstC40YLRjCDQvdC+0LLRi9C5INGC0YPRgCDQv9C10YDQtdC0INGE0LjQvdCw0LvQuNC30LjRgNC+0LLQsNC90L3Ri9C8XCIsXG4gICAgICAgICAgICAgICAgXCJkZWxldGVfZmluYWxpemVkXCI6IFwi0J3QtdCy0L7Qt9C80L7QttC90L4g0YPQtNCw0LvQuNGC0Ywg0YTQuNC90LDQu9C40LfQuNGA0L7QstCw0L3QvdGL0Lkg0YLRg9GAXCIsXG4gICAgICAgICAgICAgICAgXCJkZWxldGVfaW5fY29tcGV0aXRpb25fcGxhblwiOiBcItCd0LXQstC+0LfQvNC+0LbQvdC+INGD0LTQsNC70LjRgtGMINGC0YPRgCwg0L/RgNC40YHRg9GC0YHRgtCy0YPRjtGJ0LjQuSDQsiDQv9GA0L7Qs9GA0LDQvNC80LUg0YHQvtGA0LXQstC90L7QstCw0L3QuNC5XCIsXG4gICAgICAgICAgICAgICAgXCJpbml0X2ZpbmFpbHplZFwiOiBcItCd0LXQstC+0LfQvNC+0LbQvdC+INC/0LXRgNC10YHQvtC30LTQsNGC0Ywg0YTQuNC90LDQu9C40LfQuNGA0L7QstCw0L3QvdGL0Lkg0YLRg9GAXCIsXG4gICAgICAgICAgICAgICAgXCJpbnZhbGlkX2FkZF9hZnRlcl9pZFwiOiBcItCf0L7Qv9GL0YLQutCwINC00L7QsdCw0LjRgtGMINGC0YPRgCDQsiDQvdC10YHRg9GJ0LXRgdGC0LLRg9GO0YnQtdC1INC80LXRgdGC0L5cIixcbiAgICAgICAgICAgICAgICBcImxvYWRfdG9fbm9uX2VtcHR5XCI6IChkKSA9PiBbXCLQndC10LLQvtC30LzQvtC20L3QviDQt9Cw0LPRgNGD0LfQuNGC0Ywg0YLRg9GA0Ysg0LTQu9GPINC00LjRgdGG0LjQv9C70LjQvdGLXCIsIGDQlNC40YHRhtC40L/Qu9C40L3QsCAke2R9INGD0LbQtSDRgdC+0LTQtdGA0LbQuNGCINGC0YPRgNGLYF0sXG4gICAgICAgICAgICAgICAgXCJuZXh0X2lzX2ZpbmFpbHplZFwiOiBcItCh0LvQtdC00YPRjtGJ0LjQuSDRgtGD0YAg0L3QtSDQtNC+0LvQttC10L0g0LHRi9GC0Ywg0YTQuNC90LDQu9C40LfQuNGA0L7QstCw0L1cIixcbiAgICAgICAgICAgICAgICBcIm5vX25leHRfdG91clwiOiBcItCU0LDQvdC90YvQuSDRgtGD0YAg0L/QvtGB0LvQtdC00L3QuNC5INCyINC/0YDQvtCz0YDQsNC80LzQtSDRgdC+0YDQtdCy0L3QvtCy0LDQvdC40LlcIixcbiAgICAgICAgICAgICAgICBcIm5vdF9pbl9jb21wZXRpdGlvbl9wbGFuXCI6IFwi0JTQsNC90L3Ri9C5INGC0YPRgCDQvdC1INGB0L7QtNC10YDQttC40YLRgdGPINCyINC/0YDQvtCz0YDQsNC80LzQtSDRgdC+0YDQtdCy0L3QvtCy0LDQvdC40LlcIixcbiAgICAgICAgICAgICAgICBcInByZXZfbm90X2ZpbmFpbHplZFwiOiBcItCf0YDQtdC00YvQtNGD0YnQuNC5INGC0YPRgCDQtNC+0LvQttC10L0g0LHRi9GC0Ywg0YTQuNC90LDQu9C40LfQuNGA0L7QstCw0L1cIixcbiAgICAgICAgICAgICAgICBcInN0YXJ0X2ZpbmFsaXplZFwiOiBcItCd0LXQstC+0LfQvNC+0LbQvdC+INC30LDQv9GD0YHRgtC40YLRjCDRhNC40L3QsNC70LjQt9C40YDQvtCy0LDQvdC90YvQuSDRgtGD0YBcIixcbiAgICAgICAgICAgICAgICBcInVwZGF0ZV9maW5hbGl6ZWRcIjogXCLQlNC70Y8g0YTQuNC90LDQu9C40LfQuNGA0L7QstCw0L3QvdC+0LPQviDRgtGD0YDQsCDQvdC1INC00L7Qv9GD0YHQutCw0LXRgtGB0Y8g0LjQt9C80LXQvdC10L3QuNC1INC60LLQvtGC0Ysg0LLRi9Cy0L7QtNCwLCDRgtC40L/QsCDRgtGD0YDQsCDQuNC70Lgg0YHQuNGB0YLQtdC80Ysg0YHRg9C00LXQudGB0YLQstCwXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBcImdsb2JhbFwiOiB7XG4gICAgICAgICAgICBcImJ1dHRvbnNcIjoge1xuICAgICAgICAgICAgICAgIFwiYWRkXCI6IFwi0JTQvtCx0LDQstC40YLRjFwiLFxuICAgICAgICAgICAgICAgIFwiY2xvc2VcIjogXCLQl9Cw0LrRgNGL0YLRjFwiLFxuICAgICAgICAgICAgICAgIFwiZGVzZWxlY3RfYWxsXCI6IFwi0KHQvdGP0YLRjCDQstGB0LVcIixcbiAgICAgICAgICAgICAgICBcImVkaXRcIjogXCLQoNC10LTQsNC60YLQuNGA0L7QstCw0YLRjFwiLFxuICAgICAgICAgICAgICAgIFwiZGVsZXRlXCI6IFwi0KPQtNCw0LvQuNGC0YxcIixcbiAgICAgICAgICAgICAgICBcImRpc2NhcmRcIjogXCLQntGC0LzQtdC90LjRgtGMXCIsXG4gICAgICAgICAgICAgICAgXCJsb2FkXCI6IFwi0JfQsNCz0YDRg9C30LjRgtGMXCIsXG4gICAgICAgICAgICAgICAgXCJzYXZlXCI6IFwi0KHQvtGF0YDQsNC90LjRgtGMXCIsXG4gICAgICAgICAgICAgICAgXCJzZWxlY3RfYWxsXCI6IFwi0JLRi9Cx0YDQsNGC0Ywg0LLRgdC1XCIsXG4gICAgICAgICAgICAgICAgXCJzdWJtaXRcIjogXCLQodC+0YXRgNCw0L3QuNGC0YxcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImxhYmVsc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJicm93c2VcIjogXCLQntCx0LfQvtGALi4uXCIsXG4gICAgICAgICAgICAgICAgXCJ5ZXNcIjogXCLQlNCwXCIsXG4gICAgICAgICAgICAgICAgXCJub1wiOiBcItCd0LXRglwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwibWVzc2FnZXNcIjoge1xuICAgICAgICAgICAgICAgIFwiY29ubmVjdGlvbl9lcnJvclwiOiBcItCf0L7RhdC+0LbQtSwg0LjQvNC10Y7RgtGB0Y8g0L/RgNC+0LHQu9C10LzRiyDRgSDRgdC10YLRjNGOXCIsXG4gICAgICAgICAgICAgICAgXCJlcnJvcl9oZWFkZXJcIjogXCLQntGI0LjQsdC60LBcIixcbiAgICAgICAgICAgICAgICBcInN1Y2Nlc3NcIjogXCLQntC/0LXRgNCw0YbQuNGPINGD0YHQv9C10YjQvdC+INC30LDQstC10YDRiNC10L3QsFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwicGhyYXNlc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJoZWF0X25cIjogKG4pID0+IFwi0JfQsNGF0L7QtCDihJZcIiArIG4udG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICBcImp1ZGdlX25cIjogKG4pID0+IFwi0JvQuNC90LXQudC90YvQuSDRgdGD0LTRjNGPIOKEllwiICsgbi50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgIFwicGFydGljaXBhbnRfblwiOiAobiwgbmFtZSwgbl9zcCkgPT5cbiAgICAgICAgICAgICAgICAgICAgKG5fc3AgPiAyXG4gICAgICAgICAgICAgICAgICAgICAgICA/IFwi0KTQvtGA0LzQtdC50YjQvSDihJZcIiArIG4udG9TdHJpbmcoKSArIChuYW1lID8gXCI6IFwiICsgbmFtZSA6IFwiXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IChuX3NwID09PSAyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcItCf0LDRgNCwIOKEllwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcItCj0YfQsNGB0YLQvdC40Log4oSWXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICkgKyBuLnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXCJqdWRnaW5nXCI6IHtcbiAgICAgICAgICAgIFwiYnV0dG9uc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJjb25maXJtX3Njb3JlXCI6IFwi0JfQsNGE0LjQutGB0LjRgNC+0LLQsNGC0YxcIixcbiAgICAgICAgICAgICAgICBcImluaXRfdG91clwiOiBcItCf0LXRgNC10YHQvtC30LTQsNGC0Ywg0YLRg9GAXCIsXG4gICAgICAgICAgICAgICAgXCJmaW5hbGl6ZV90b3VyXCI6IFwi0KTQuNC90LDQu9C40LfQuNGA0L7QstCw0YLRjFwiLFxuICAgICAgICAgICAgICAgIFwicmVzZXRfYWNyb2JhdGljX292ZXJyaWRlXCI6IFwi0KHQsdGA0L7RgVwiLFxuICAgICAgICAgICAgICAgIFwic2h1ZmZsZV9oZWF0c1wiOiBcItCf0LXRgNC10LzQtdGI0LDRgtGMINC30LDRhdC+0LTRi1wiLFxuICAgICAgICAgICAgICAgIFwic3RhcnRfdG91clwiOiBcItCd0LDRh9Cw0YLRjCDRgtGD0YBcIixcbiAgICAgICAgICAgICAgICBcInN0b3BfdG91clwiOiBcItCe0YHRgtCw0L3QvtCy0LjRgtGMINGC0YPRgFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiY29uZmlybXNcIjoge1xuICAgICAgICAgICAgICAgIFwiZmluYWxpemVfdG91clwiOiBcItCS0Ysg0LTQtdC50YHRgtCy0LjRgtC10LvRjNC90L4g0YXQvtGC0LjRgtC1INGE0LjQvdCw0LvQuNC30LjRgNC+0LLQsNGC0Ywg0Y3RgtC+0YIg0YLRg9GAP1wiLFxuICAgICAgICAgICAgICAgIFwiaW5pdF90b3VyXCI6IFwi0JLRiyDQtNC10LnRgdGC0LLQuNGC0LXQu9GM0L3QviDRhdC+0YLQuNGC0LUg0L/QtdGA0LXRgdC+0LfQtNCw0YLRjCDRjdGC0L7RgiDRgtGD0YA/XCIsXG4gICAgICAgICAgICAgICAgXCJsb2FkX3Byb2dyYW1cIjogXCLQktGLINC00LXQudGB0YLQstC40YLQtdC70YzQvdC+INGF0L7RgtC40YLQtSDQv9C10YDQtdC30LDQs9GA0YPQt9C40YLRjCDQv9GA0L7Qs9GA0LDQvNC80YMg0LTQu9GPINGN0YLQvtCz0L4g0YPRh9Cw0YHRgtC90LjQutCwP1wiLFxuICAgICAgICAgICAgICAgIFwic2h1ZmZsZV9oZWF0c1wiOiBcItCS0Ysg0LTQtdC50YHRgtCy0LjRgtC10LvRjNC90L4g0YXQvtGC0LjRgtC1INC/0LXRgNC10LzQtdGI0LDRgtGMINC30LDRhdC+0LTRiz9cIixcbiAgICAgICAgICAgICAgICBcInN0b3BfdG91clwiOiBcItCS0Ysg0LTQtdC50YHRgtCy0LjRgtC10LvRjNC90L4g0YXQvtGC0LjRgtC1INC+0YHRgtCw0L3QvtCy0LjRgtGMINGN0YLQvtGCINGC0YPRgD9cIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImhlYWRlcnNcIjoge1xuICAgICAgICAgICAgICAgIFwiYWNyb2JhdGljX292ZXJyaWRlc1wiOiBcItCa0L7RgNGA0LXQutGC0LjRgNC+0LLQutC4INCx0LDQt9C+0LLRi9GFINC+0YbQtdC90L7QuiDQsNC60YDQvtCx0LDRgtC40LrQuFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwibGFiZWxzXCI6IHtcbiAgICAgICAgICAgICAgICBcImFjcm9fZGVzY3JpcHRpb25cIjogXCLQntC/0LjRgdCw0L3QuNC1INGC0YDRjtC60LBcIixcbiAgICAgICAgICAgICAgICBcImFjcm9faWR4XCI6IFwi4oSWINGC0YDRjtC60LBcIixcbiAgICAgICAgICAgICAgICBcImFjcm9iYXRpY3NcIjogXCLQkNC60YDQvtCx0LDRgtC40LrQsFwiLFxuICAgICAgICAgICAgICAgIFwiY2x1YlwiOiBcItCa0LvRg9CxXCIsXG4gICAgICAgICAgICAgICAgXCJjb25maXJtZWRcIjogXCLQl9Cw0YTQuNC60YHQuNGA0L7QstCw0L3QvlwiLFxuICAgICAgICAgICAgICAgIFwiaGVhdFwiOiBcItCX0LDRhdC+0LRcIixcbiAgICAgICAgICAgICAgICBcIm5ld19zY29yZVwiOiBcItCa0L7RgNGALlwiLFxuICAgICAgICAgICAgICAgIFwibnVtYmVyXCI6IFwi4oSWXCIsXG4gICAgICAgICAgICAgICAgXCJvbGRfc2NvcmVcIjogXCLQkdCw0LfQsFwiLFxuICAgICAgICAgICAgICAgIFwicGFydGljaXBhbnRfbmFtZVwiOiBcItCj0YfQsNGB0YLQvdC40LpcIixcbiAgICAgICAgICAgICAgICBcInBlcmZvcm1lZFwiOiBcItCSXCIsXG4gICAgICAgICAgICAgICAgXCJ0b3RhbF9zY29yZVwiOiBcItCh0YPQvNC80LAg0LHQsNC70LvQvtCyXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBcIm1vZGVsc1wiOiB7XG4gICAgICAgICAgICBcImNsdWJcIjoge1xuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcItCd0LDQt9Cy0LDQvdC40LUg0LrQu9GD0LHQsFwiLFxuICAgICAgICAgICAgICAgIFwiY2l0eVwiOiBcItCT0L7RgNC+0LRcIixcbiAgICAgICAgICAgICAgICBcImV4dGVybmFsX2lkXCI6IFwi0JLQvdC10YjQvdC40LkgSURcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImNvbXBldGl0aW9uXCI6IHtcbiAgICAgICAgICAgICAgICBcImFjdGl2ZVwiOiBcItCQ0LrRgtC40LLQvdC+XCIsXG4gICAgICAgICAgICAgICAgXCJkYXRlXCI6IFwi0JTQsNGC0LBcIixcbiAgICAgICAgICAgICAgICBcImluZm9cIjogXCLQlNC+0L/QvtC70L3QuNGC0LXQu9GM0L3QsNGPINC40L3RhNC+0YDQvNCw0YbQuNGPINC00LvRjyDQv9GA0L7RgtC+0LrQvtC70LBcIixcbiAgICAgICAgICAgICAgICBcImluZm9faXRlbV90aXRsZVwiOiBcItCX0LDQs9C+0LvQvtCy0L7QulwiLFxuICAgICAgICAgICAgICAgIFwiaW5mb19pdGVtX3ZhbHVlXCI6IFwi0JfQvdCw0YfQtdC90LjQtVwiLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcItCd0LDQt9Cy0LDQvdC40LVcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImNvbXBldGl0aW9uX3BsYW5faXRlbVwiOiB7XG4gICAgICAgICAgICAgICAgXCJkaXNjaXBsaW5lXCI6IFwi0JTQuNGB0YbQuNC/0LvQuNC90LBcIixcbiAgICAgICAgICAgICAgICBcImVzdGltYXRlZF9iZWdpbm5pbmdcIjogXCLQndCw0YfQsNC70L5cIixcbiAgICAgICAgICAgICAgICBcImVzdGltYXRlZF9kdXJhdGlvblwiOiBcItCU0LvQuNGC0LXQu9GM0L3QvtGB0YLRjFwiLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcItCd0LDQt9Cy0LDQvdC40LVcIixcbiAgICAgICAgICAgICAgICBcInNwXCI6IFwi0J/RgNC40L7RgNC40YLQtdGCXCIsXG4gICAgICAgICAgICAgICAgXCJ0b3VyXCI6IFwi0KLRg9GAXCIsXG4gICAgICAgICAgICAgICAgXCJ2ZXJib3NlX25hbWVcIjogXCLQndCw0LfQstCw0L3QuNC1XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJkaXNjaXBsaW5lXCI6IHtcbiAgICAgICAgICAgICAgICBcImRpc2NpcGxpbmVfanVkZ2VzXCI6IFwi0KHRg9C00YzQuFwiLFxuICAgICAgICAgICAgICAgIFwiZXh0ZXJuYWxfaWRcIjogXCLQktC90LXRiNC90LjQuSBJRFwiLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcItCd0LDQt9Cy0LDQvdC40LUg0LTQuNGB0YbQuNC/0LvQuNC90YtcIixcbiAgICAgICAgICAgICAgICBcInNwXCI6IFwi0J/RgNC40L7RgNC40YLQtdGCXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJqdWRnZVwiOiB7XG4gICAgICAgICAgICAgICAgXCJjYXRlZ29yeVwiOiBcItCa0LDRgtC10LPQvtGA0LjRj1wiLFxuICAgICAgICAgICAgICAgIFwiZXh0ZXJuYWxfaWRcIjogXCLQktC9LiBJRFwiLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcItCkLiDQmC4g0J4uXCIsXG4gICAgICAgICAgICAgICAgXCJudW1iZXJcIjogXCLQndC+0LzQtdGAXCIsXG4gICAgICAgICAgICAgICAgXCJyb2xlXCI6IFwi0KDQvtC70Ywg0LIg0YHRg9C00LXQudGB0YLQstC1XCIsXG4gICAgICAgICAgICAgICAgXCJyb2xlX2Rlc2NyaXB0aW9uXCI6IFwi0JTQvtC70LbQvdC+0YHRgtGMXCIsXG4gICAgICAgICAgICAgICAgXCJzcFwiOiBcItCf0YDQuNC+0YDQuNGC0LXRglwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwicGFydGljaXBhbnRcIjoge1xuICAgICAgICAgICAgICAgIFwiYWNyb19kZXNjcmlwdGlvblwiOiBcItCe0L/QuNGB0LDQvdC40LUg0YLRgNGO0LrQsFwiLFxuICAgICAgICAgICAgICAgIFwiYWNyb19kZXNjcmlwdGlvbnNcIjogXCLQntC/0LjRgdCw0L3QuNC1INGC0YDRjtC60L7QslwiLFxuICAgICAgICAgICAgICAgIFwiYWNyb19zY29yZVwiOiBcItCe0YbQtdC90LrQsFwiLFxuICAgICAgICAgICAgICAgIFwiYWNyb2JhdGljc1wiOiBcItCQ0LrRgNC+0LHQsNGC0LjQutCwXCIsXG4gICAgICAgICAgICAgICAgXCJjbHViX25hbWVcIjogXCLQmtC70YPQsVwiLFxuICAgICAgICAgICAgICAgIFwiY2x1Yl9jaXR5XCI6IFwi0JPQvtGA0L7QtFwiLFxuICAgICAgICAgICAgICAgIFwiY29hY2hlc1wiOiBcItCi0YDQtdC90LXRgNGLXCIsXG4gICAgICAgICAgICAgICAgXCJmaXJzdF9uYW1lXCI6IFwi0JjQvNGPXCIsXG4gICAgICAgICAgICAgICAgXCJnZW5kZXJcIjogXCLQn9C+0LtcIixcbiAgICAgICAgICAgICAgICBcImdlbmRlcl9mXCI6IFwi0JZcIixcbiAgICAgICAgICAgICAgICBcImdlbmRlcl9tXCI6IFwi0JxcIixcbiAgICAgICAgICAgICAgICBcImdlbmVyYWxfaW5mb1wiOiBcItCe0YHQvdC+0LLQvdCw0Y8g0LjQvdGE0L7RgNC80LDRhtC40Y9cIixcbiAgICAgICAgICAgICAgICBcImZvcm1hdGlvbl9uYW1lXCI6IFwi0J3QsNC30LLQsNC90LjQtSDQutC+0LzQsNC90LTRiyDRhNC+0YDQvNC10LnRiNC9XCIsXG4gICAgICAgICAgICAgICAgXCJsYXN0X25hbWVcIjogXCLQpNCw0LzQuNC70LjRj1wiLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcItCj0YfQsNGB0YLQvdC40LpcIixcbiAgICAgICAgICAgICAgICBcIm51bWJlclwiOiBcItCd0L7QvNC10YBcIixcbiAgICAgICAgICAgICAgICBcInByb2dyYW1zXCI6IFwi0J/RgNC+0LPRgNCw0LzQvNGLXCIsXG4gICAgICAgICAgICAgICAgXCJzcG9ydHNtZW5cIjogXCLQodC/0L7RgNGC0YHQvNC10L3Ri1wiLFxuICAgICAgICAgICAgICAgIFwic3BvcnRzbWVuX3llYXJfb2ZfYmlydGhcIjogXCLQky7RgC5cIixcbiAgICAgICAgICAgICAgICBcInN1YnN0aXR1dGVfblwiOiBcItCe0YHQvS5cIixcbiAgICAgICAgICAgICAgICBcInN1YnN0aXR1dGVfeVwiOiBcItCX0LDQvy5cIixcbiAgICAgICAgICAgICAgICBcInllYXJfb2ZfYmlydGhcIjogXCLQk9C+0LQg0YDQvtC20LTQtdC90LjRj1wiLFxuICAgICAgICAgICAgICAgIFwieW9iXCI6IFwi0JMu0YAuXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJwcm9ncmFtXCI6IHtcbiAgICAgICAgICAgICAgICBcImRlZmF1bHRfZm9yXCI6IFwi0J/QviDRg9C80L7Qu9GH0LDQvdC40Y5cIixcbiAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCLQndCw0LfQstCw0L3QuNC1INC/0YDQvtCz0YDQsNC80LzRi1wiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwidG91clwiOiB7XG4gICAgICAgICAgICAgICAgXCJkZWZhdWx0X3Byb2dyYW1cIjogXCLQkNC60YDQvtCx0LDRgtC40LrQsCDQv9C+INGD0LzQvtC70YfQsNC90LjRjlwiLFxuICAgICAgICAgICAgICAgIFwiaXNfaG9wZV90b3VyXCI6IFwi0KLRg9GAIMKr0J3QsNC00LXQttC00YvCu1wiLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcItCd0LDQt9Cy0LDQvdC40LUg0YLRg9GA0LBcIixcbiAgICAgICAgICAgICAgICBcIm51bV9hZHZhbmNlc1wiOiBcItCa0LLQvtGC0LAg0LLRi9Cy0L7QtNCwXCIsXG4gICAgICAgICAgICAgICAgXCJwYXJ0aWNpcGFudHNfcGVyX2hlYXRcIjogXCLQo9GH0LDRgdGC0L3QuNC60L7QsiDQsiDQt9Cw0YXQvtC00LVcIixcbiAgICAgICAgICAgICAgICBcInNjb3Jpbmdfc3lzdGVtX25hbWVcIjogXCLQodC40YHRgtC10LzQsCDRgdGD0LTQtdC50YHRgtCy0LBcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIFwic2NyZWVuX29wZXJhdG9yXCI6IHtcbiAgICAgICAgICAgIFwiYnV0dG9uc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJyZXNldF9oZWF0XCI6IFwi0KHQsdGA0L7RgSDQvdC+0LzQtdGA0LAg0LfQsNGF0L7QtNCwXCIsXG4gICAgICAgICAgICAgICAgXCJyZXNldF9wbGFjZVwiOiBcItCh0LHRgNC+0YEg0LzQtdGB0YLQsFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiaGVhZGVyc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJkaXNjaXBsaW5lXCI6IFwi0JTQuNGB0YbQuNC/0LvQuNC90LBcIixcbiAgICAgICAgICAgICAgICBcImhlYXRcIjogXCLQl9Cw0YXQvtC0XCIsXG4gICAgICAgICAgICAgICAgXCJwbGFjZXNcIjogXCLQnNC10YHRgtCwINC00LvRjyDQstGL0LLQvtC00LBcIixcbiAgICAgICAgICAgICAgICBcInRvdXJcIjogXCLQotGD0YBcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImxhYmVsc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJwbGFjZVwiOiBcItC80LXRgdGC0L5cIixcbiAgICAgICAgICAgICAgICBcImhlYXRcIjogXCLQt9Cw0YXQvtC0XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBcInByZXNlbnRlclwiOiB7XG4gICAgICAgICAgICBcImhlYWRlcnNcIjoge1xuICAgICAgICAgICAgICAgIFwiY2x1YnNcIjogXCLQmtC70YPQsdGLLdGD0YfQsNGB0YLQvdC40LrQuFwiLFxuICAgICAgICAgICAgICAgIFwiaGVhdHNcIjogXCLQl9Cw0YXQvtC00YtcIixcbiAgICAgICAgICAgICAgICBcImluZm9cIjogXCLQmNC90YTQvtGA0LzQsNGG0LjRj1wiLFxuICAgICAgICAgICAgICAgIFwianVkZ2VzXCI6IFwi0KHRg9C00YzQuFwiLFxuICAgICAgICAgICAgICAgIFwicmVzdWx0c1wiOiBcItCg0LXQt9GD0LvRjNGC0LDRgtGLXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJsYWJlbHNcIjoge1xuICAgICAgICAgICAgICAgIFwibm9fYWN0aXZlX3RvdXJcIjogXCLQndC10YIg0LDQutGC0LjQstC90L7Qs9C+INGC0YPRgNCwXCIsXG4gICAgICAgICAgICAgICAgXCJwbGFjZVwiOiBcItC80LXRgdGC0L5cIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIFwicmVzdWx0c1wiOiB7XG4gICAgICAgICAgICBcImFsZXJ0c1wiOiB7XG4gICAgICAgICAgICAgICAgXCJub3RfZmluYWxpemVkXCI6IFwi0JTQsNC90L3Ri9C1INGA0LXQt9GD0LvRjNGC0LDRgtGLINC90LUg0Y/QstC70Y/RjtGC0YHRjyDQvtC60L7QvdGH0LDRgtC10LvRjNC90YvQvNC4LlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiYnV0dG9uc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJwcmludFwiOiBcItCf0LXRh9Cw0YLRjFwiLFxuICAgICAgICAgICAgICAgIFwic2ltcGxlX3ZpZXdcIjogXCLQo9C/0YDQvtGJ0LXQvdC90LDRjyDRgtCw0LHQu9C40YbQsFwiLFxuICAgICAgICAgICAgICAgIFwidmVyYm9zZV92aWV3XCI6IFwi0J/QvtC00YDQvtCx0L3QsNGPINGC0LDQsdC70LjRhtCwXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBcInN0YXJ0X3BhZ2VcIjoge1xuICAgICAgICAgICAgXCJoZWFkZXJzXCI6IHtcbiAgICAgICAgICAgICAgICBcInNlbGVjdF9jb21wZXRpdGlvblwiOiBcItCS0YvQsdC10YDQuNGC0LUg0YHQvtGA0LXQstC90L7QstCw0L3QuNC1INC00LvRjyDQv9GA0L7QtNC+0LvQttC10L3QuNGPXCIsXG4gICAgICAgICAgICAgICAgXCJzZWxlY3Rfcm9sZVwiOiBcItCS0YvQsdC10YDQuNGC0LUg0YHQstC+0Y4g0YDQvtC70YxcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIm1lc3NhZ2VzXCI6IHtcbiAgICAgICAgICAgICAgICBcIm5vX2NvbXBldGl0aW9uc1wiOiBcItCd0LXRgiDQsNC60YLQuNCy0L3Ri9GFINGB0L7RgNC10LLQvdC+0LLQsNC90LjQuVwiLFxuICAgICAgICAgICAgICAgIFwiY29tcGV0aXRpb25zX21hbmFnZW1lbnRfbGlua1wiOiAobGluaykgPT4gPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgINCj0L/RgNCw0LLQu9C10L3QuNC1INGB0L7RgNC10LLQvdC+0LLQsNC90LjRj9C80Lgg0L3QsNGF0L7QtNC40YLRgdGPINC/0L4g0LDQtNGA0LXRgdGDJm5ic3A7XG4gICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9eyBsaW5rIH0+eyBsaW5rIH08L2E+XG4gICAgICAgICAgICAgICAgPC9zcGFuPixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcInJvbGVzXCI6IHtcbiAgICAgICAgICAgICAgICBcImFkbWluaXN0cmF0b3JcIjogXCLQkNC00LzQuNC90LjRgdGC0YDQsNGC0L7RgFwiLFxuICAgICAgICAgICAgICAgIFwicHJlc2VudGVyXCI6IFwi0JLQtdC00YPRidC40LlcIixcbiAgICAgICAgICAgICAgICBcInNjcmVlblwiOiBcItCt0LrRgNCw0L1cIixcbiAgICAgICAgICAgICAgICBcInNjcmVlbl9vcGVyYXRvclwiOiBcItCe0L/QtdGA0LDRgtC+0YAg0Y3QutGA0LDQvdCwXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBcInRhYmxldFwiOiB7XG4gICAgICAgICAgICBcImJ1dHRvbnNcIjoge1xuICAgICAgICAgICAgICAgIFwiZmluYWxpemVfdG91clwiOiBcItCk0LjQvdCw0LvQuNC30LjRgNC+0LLQsNGC0Ywg0YLRg9GAXCIsXG4gICAgICAgICAgICAgICAgXCJmaW5hbGl6ZV90b3VyX2FuZF9zdGFydF9uZXh0XCI6IFwi0KTQuNC90LDQu9C40LfQuNGA0L7QstCw0YLRjCDRgtGD0YAg0Lgg0L/QtdGA0LXQudGC0Lgg0Log0YHQu9C10LTRg9GO0YnQtdC80YNcIixcbiAgICAgICAgICAgICAgICBcIm5leHRfaGVhdFwiOiBcItCh0LvQtdC0LiDQt9Cw0YXQvtC0XCIsXG4gICAgICAgICAgICAgICAgXCJub3RfcGVyZm9ybWVkXCI6IFwi0J3QtdCy0YvRhdC+0LQg0L3QsCDQv9C70L7RidCw0LTQutGDXCIsXG4gICAgICAgICAgICAgICAgXCJwZXJmb3JtZWRcIjogXCLQntGC0LzQtdC90LAg0L3QtdCy0YvRhdC+0LTQsCDQvdCwINC/0LvQvtGJ0LDQtNC60YNcIixcbiAgICAgICAgICAgICAgICBcInByZXZfaGVhdFwiOiBcItCf0YDQtdC0LiDQt9Cw0YXQvtC0XCIsXG4gICAgICAgICAgICAgICAgXCJyZXNldF9zdG9wd2F0Y2hcIjogXCLQodCx0YDQvtGBXCIsXG4gICAgICAgICAgICAgICAgXCJzdGFydF9zdG9wd2F0Y2hcIjogXCLQodGC0LDRgNGCXCIsXG4gICAgICAgICAgICAgICAgXCJzdG9wX3N0b3B3YXRjaFwiOiBcItCh0YLQvtC/XCIsXG4gICAgICAgICAgICAgICAgXCJzdG9wX3RvdXJcIjogXCLQl9Cw0LLQtdGA0YjQuNGC0Ywg0YLRg9GAXCIsXG4gICAgICAgICAgICAgICAgXCJzdG9wX3RvdXJfYW5kX3N0YXJ0X25leHRcIjogXCLQn9C10YDQtdC50YLQuCDQuiDRgdC70LXQtNGD0Y7RidC10LzRgyDRgtGD0YDRg1wiLFxuICAgICAgICAgICAgICAgIFwidG9fc3RhcnRfcGFnZVwiOiBcItCd0LAg0LPQu9Cw0LLQvdGD0Y5cIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcImNvbmZpcm1zXCI6IHtcbiAgICAgICAgICAgICAgICBcImZpbmFsaXplX3RvdXJcIjogXCLQktGLINC00LXQudGB0YLQstC40YLQtdC70YzQvdC+INGF0L7RgtC40YLQtSDRhNC40L3QsNC70LjQt9C40YDQvtCy0LDRgtGMINGN0YLQvtGCINGC0YPRgD9cIixcbiAgICAgICAgICAgICAgICBcImZpbmFsaXplX3RvdXJfYW5kX3N0YXJ0X25leHRcIjogXCLQktGLINC00LXQudGB0YLQstC40YLQtdC70YzQvdC+INGF0L7RgtC40YLQtSDRhNC40L3QsNC70LjQt9C40YDQvtCy0LDRgtGMINGN0YLQvtGCINGC0YPRgCDQuCDQv9C10YDQtdC50YLQuCDQuiDRgdC70LXQtNGD0Y7RidC10LzRgyDRgtGD0YDRgz9cIixcbiAgICAgICAgICAgICAgICBcInN0b3BfdG91clwiOiBcItCS0Ysg0LTQtdC50YHRgtCy0LjRgtC10LvRjNC90L4g0YXQvtGC0LjRgtC1INC+0YHRgtCw0L3QvtCy0LjRgtGMINGN0YLQvtGCINGC0YPRgD9cIixcbiAgICAgICAgICAgICAgICBcInN0b3BfdG91cl9hbmRfc3RhcnRfbmV4dFwiOiBcItCS0Ysg0LTQtdC50YHRgtCy0LjRgtC10LvRjNC90L4g0YXQvtGC0LjRgtC1INC/0LXRgNC10LnRgtC4INC6INGB0LvQtdC00YPRjtGJ0LXQvNGDINGC0YPRgNGDP1wiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiaGVhZGVyc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJhY3JvX25cIjogKG4pID0+IFwi0JDQutGA0L7QsdCw0YLQuNC60LAg4oSWXCIgKyAobiArIDEpLFxuICAgICAgICAgICAgICAgIFwiaGVhdFwiOiBcItCX0LDRhdC+0LRcIixcbiAgICAgICAgICAgICAgICBcInByZXNlbnRlclwiOiBcItCS0LXQtNGD0YnQuNC5XCIsXG4gICAgICAgICAgICAgICAgXCJzZWxlY3RfcGFnZVwiOiBcItCh0YLRgNCw0L3QuNGG0LBcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIm1lc3NhZ2VzXCI6IHtcbiAgICAgICAgICAgICAgICBcIm5vdF9qdWRnaW5nX2Rpc2NpcGxpbmVcIjogXCLQktGLINC90LUg0YPRh9Cw0YHRgtCy0YPQtdGC0LUg0LIg0YHRg9C00LXQudGB0YLQstC1INC00LDQvdC90L7QuSDQtNC40YHRhtC40L/Qu9C40L3Ri1wiLFxuICAgICAgICAgICAgICAgIFwibm90X2p1ZGdpbmdfcGFydGljaXBhbnRcIjogXCLQktGLINC90LUg0L7RhtC10L3QuNCy0LDQtdGC0LUg0Y3RgtC+0LPQviDRg9GH0LDRgdGC0L3QuNC60LBcIixcbiAgICAgICAgICAgICAgICBcIm5vdF9qdWRnaW5nX3RvdXJcIjogXCLQktGLINC90LUg0L7RhtC10L3QuNCy0LDQtdGC0LUg0Y3RgtC+0YIg0YLRg9GAXCIsXG4gICAgICAgICAgICAgICAgXCJub3RfcGVyZm9ybWluZ1wiOiBcItCd0LUg0LLRi9GB0YLRg9C/0LDQtdGCXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJwYWdlc1wiOiB7XG4gICAgICAgICAgICAgICAgXCJhY3JvYmF0aWNzXCI6IFwi0JDQutGA0L7QsdCw0YLQuNC60LBcIixcbiAgICAgICAgICAgICAgICBcImFjdGlvbnNcIjogXCLQlNC10LnRgdGC0LLQuNGPXCIsXG4gICAgICAgICAgICAgICAgXCJkYW5jZVwiOiBcItCi0LDQvdC10YZcIixcbiAgICAgICAgICAgICAgICBcImhlYXRzXCI6IFwi0JfQsNGF0L7QtNGLXCIsXG4gICAgICAgICAgICAgICAgXCJyZXN1bHRzXCI6IFwi0KDQtdC30YPQu9GM0YLQsNGC0YtcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG5cbiAgICAgICAgXCJzY29yaW5nX3N5c3RlbXNcIjoge1xuICAgICAgICAgICAgXCJyb3NmYXJyXCI6IHtcbiAgICAgICAgICAgICAgICBcInRhYmxldFwiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiYWNyb19qdWRnZVwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcImZhbGxfZG93blwiOiBcItCf0LDQtNC10L3QuNGPICgtMzApXCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwiZGFuY2VfanVkZ2VcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJhY3JvYmF0aWNzXCI6IFwi0JDQutGA0L7QsdCw0YLQuNC60LBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiYmlnX21pc3Rha2VzXCI6IFwi0JHQvtC70YzRiNC40LUg0L7RiNC40LHQutC4ICgtMzApXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImNvbXBvc2l0aW9uXCI6IFwi0JrQvtC80L/QvtC30LjRhtC40Y9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZGFuY2VfZmlnc1wiOiBcItCi0LDQvdGG0LXQstCw0LvRjNC90YvQtSDRhNC40LPRg9GA0YtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZGFuY2VfdGVjaFwiOiBcItCi0LXRhdC90LjQutCwINGC0LDQvdGG0LXQstCw0L3QuNGPXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImZvcm1fZmFsbF9kb3duXCI6IFwi0J/QsNC00LXQvdC40Y8gKC0zKVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJmb3JtX21pc3Rha2VzXCI6IFwi0J7RiNC40LHQutC4ICgtMilcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZm9ybV9zbWFsbF9taXN0YWtlc1wiOiBcItCc0LDQu9C10L3RjNC60LjQtSDQvtGI0LjQsdC60LggKC0yKVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJmb3JtX2JpZ19taXN0YWtlc1wiOiBcItCR0L7Qu9GM0YjQuNC1INC+0YjQuNCx0LrQuCAoLTMpXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImZ3X21hblwiOiBcItCe0YHQvdC+0LLQvdC+0Lkg0YXQvtC0LCDQv9Cw0YDRgtC90ZHRgCAo0YHQsdCw0LLQutCwINCyICUpXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImZ3X3dvbWFuXCI6IFwi0J7RgdC90L7QstC90L7QuSDRhdC+0LQsINC/0LDRgNGC0L3RkdGA0YjQsCAo0YHQsdCw0LLQutCwINCyICUpXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImltcHJlc3Npb25cIjogXCLQntCx0YnQtdC1INCy0L/QtdGH0LDRgtC70LXQvdC40LVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicG9pbnRzXCI6IFwi0J7RhtC10L3QutCwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInNtYWxsX21pc3Rha2VzXCI6IFwi0JzQsNC70LXQvdGM0LrQuNC1INC+0YjQuNCx0LrQuCAoLTUpXCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwiZ2xvYmFsXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidG90YWxfc2NvcmVcIjogXCLQodGD0LzQvNCwINCx0LDQu9C70L7QslwiLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcImhlYWRfanVkZ2VcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJhY3JvYmF0aWNfb3ZlcnJpZGVzXCI6IFwi0JrQvtGA0YDQtdC60YLQuNGA0L7QstC60Lgg0LDQutGA0L7QsdCw0YLQuNC60LhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiYmxhY2tfY2FyZFwiOiBcIi0xMDBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZGFuY2VfanVkZ2Vfc2NvcmVzXCI6IFwi0J7RhtC10L3QutC4INC70LjQvdC10LnQvdGL0YUg0YHRg9C00LXQuVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJva1wiOiBcIk9LXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInBlbmFsdHlfdHlwZVwiOiBcItCo0YLRgNCw0YTQvdGL0LUg0YHQsNC90LrRhtC40LhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicHJldmlvdXNfcGVuYWx0aWVzXCI6IFwi0J/RgNC10LTRi9C00YPRidC40LUg0YjRgtGA0LDRhNGLXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInJlZF9jYXJkXCI6IFwiLTMwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInllbGxvd19jYXJkXCI6IFwiLTNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZm9ybV95ZWxsb3dfY2FyZFwiOiBcIi01XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImZvcm1fcmVkX2NhcmRcIjogXCItMTVcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJ0ZWNoX2p1ZGdlXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwianVtcF9zdGVwc1wiOiBcItCe0YHQvdC+0LLQvdGL0LUg0YXQvtC00YtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicmVzZXRfdG9fblwiOiAobikgPT4gXCLQodCx0YDQvtGBINC90LAgXCIgKyBuLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgICAgICBcInRpbWluZ1wiOiBcItCU0LvQuNGC0LXQu9GM0L3QvtGB0YLRjFwiLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJyZXN1bHRzXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJicmVha2Rvd25cIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJhXCI6IFwiQVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJhY3JvX25cIjogKG4pID0+IFwiQVwiICsgbi50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJibVwiOiBcItCR0J5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiY1wiOiBcItCaXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImRmXCI6IFwi0KLQpFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJkdFwiOiBcItCiVFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJmZFwiOiBcItCfXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImZtXCI6IFwi0J7QpdC8XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImZ3XCI6IFwi0J7QpdC2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImlcIjogXCLQntCSXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIm1cIjogXCLQntGIXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInBcIjogXCLQnFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJzbVwiOiBcItCc0J5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidFwiOiBcIs6jXCIsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwiaGVhZGVyc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcInBhcnRpY2lwYW50c19hZHZhbmNlZFwiOiBcItCf0YDQvtGI0LvQuCDQsiDRgdC70LXQtNGD0Y7RidC40Lkg0YLRg9GAXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInBhcnRpY2lwYW50c19ub3RfYWR2YW5jZWRcIjogXCLQndC1INC/0YDQvtGI0LvQuCDQsiDRgdC70LXQtNGD0Y7RidC40Lkg0YLRg9GAXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInBhcnRpY2lwYW50c19ub3RfcGVyZm9ybWVkXCI6IFwi0J3QtSDQstGL0YHRgtGD0L/QsNC70LhcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJsYWJlbHNcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJhY3JvX3Njb3JlXCI6IFwi0KDQtdC30YPQu9GM0YLQsNGCINCw0LrRgNC+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImFjcm9iYXRpY3NcIjogXCLQkNC60YDQvtCx0LDRgtC40LrQsFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJhY3JvYmF0aWNzX3ZlcmJvc2VcIjogXCLQkNC60YDQvtCx0LDRgtC40LrQsCAo0LfQsNGP0LLQutCwL9GE0LDQutGCKVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJjYXJkXCI6IFwi0KjRgtGA0LDRhFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJmd19zY29yZVwiOiBcItCg0LXQt9GD0LvRjNGC0LDRgiDQotCdXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImZ3X3Njb3JlX3Nob3J0XCI6IFwi0KLQnVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJpbmZvXCI6IFwi0KPRh9Cw0YHRgtC90LjQuiwg0YDQtdC30YPQu9GM0YLQsNGCXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIm5leHRfdG91clwiOiBcItCh0LvQtdC00YPRjtGJ0LjQuSDRgtGD0YBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibm90X3BlcmZvcm1lZFwiOiBcItCd0LUg0L/RgNC40L3QuNC80LDQuyDRg9GH0LDRgdGC0LjQtVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJudW1iZXJcIjogXCLihJZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicGFydGljaXBhbnRfY2x1YlwiOiBcItCa0LvRg9CxXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInBhcnRpY2lwYW50X2NvYWNoZXNcIjogXCLQotGA0LXQvdC10YDRi1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwYXJ0aWNpcGFudF9uYW1lXCI6IFwi0KPRh9Cw0YHRgtC90LjQulwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwZW5hbHR5XCI6IFwi0KjRgtGA0LDRhCDQs9C70LDQstC90L7Qs9C+INGB0YPQtNGM0LhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicGxhY2VcIjogXCLQnNC10YHRgtC+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInNwb3J0c21lblwiOiBcItCh0L/QvtGA0YLRgdC80LXQvdGLXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInNwb3J0c21lbl95ZWFyX29mX2JpcnRoXCI6IFwi0JMu0YAuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInRvdGFsX3Njb3JlXCI6IFwi0JjRgtC+0LNcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgXCJzY29yaW5nX3N5c3RlbXNfbmFtZXNcIjoge1xuICAgICAgICAgICAgXCJyb3NmYXJyXCI6IHtcbiAgICAgICAgICAgICAgICBcImFjcm9cIjogXCLQoNC+0YHQpNCQ0KDQoCwg0LDQutGA0L7QsdCw0YLQuNGH0LXRgdC60LjQtSDQv9GA0L7Qs9GA0LDQvNC80YtcIixcbiAgICAgICAgICAgICAgICBcImFtX2ZpbmFsX2Fjcm9cIjogXCLQoNC+0YHQpNCQ0KDQoCwgQSDQuCBNINC60LvQsNGB0YHRiywg0YTQuNC90LDQuywg0LDQutGA0L7QsdCw0YLQuNC60LBcIixcbiAgICAgICAgICAgICAgICBcImFtX2ZpbmFsX2Z3XCI6IFwi0KDQvtGB0KTQkNCg0KAsIEEg0LggTSDQutC70LDRgdGB0YssINGE0LjQvdCw0LssINGC0LXRhdC90LjQutCwINC90L7Qs1wiLFxuICAgICAgICAgICAgICAgIFwiZm9ybWF0aW9uXCI6IFwi0KDQvtGB0KTQkNCg0KAsINGE0L7RgNC80LXQudGI0L0g0LHQtdC3INCw0LrRgNC+0LHQsNGC0LjQutC4XCIsXG4gICAgICAgICAgICAgICAgXCJmb3JtYXRpb25fYWNyb1wiOiBcItCg0L7RgdCk0JDQoNCgLCDRhNC+0YDQvNC10LnRiNC9INGBINCw0LrRgNC+0LHQsNGC0LjQutC+0LlcIixcbiAgICAgICAgICAgICAgICBcIm5vX2Fjcm9cIjogXCLQoNC+0YHQpNCQ0KDQoCwg0YLQsNC90YbQtdCy0LDQu9GM0L3Ri9C1INC/0YDQvtCz0YDQsNC80LzRi1wiLFxuICAgICAgICAgICAgICAgIFwic2ltcGxpZmllZFwiOiBcItCg0L7RgdCk0JDQoNCgLCDRg9C/0YDQvtGJ0LXQvdC90LDRjyDRgdC40YHRgtC10LzQsCAoMeKAkzQwKVwiLFxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcImp1ZGdlX3JvbGVzXCI6IHtcbiAgICAgICAgICAgIFwiXCI6IFwiLVwiLFxuICAgICAgICAgICAgXCJhY3JvX2p1ZGdlXCI6IFwi0KHRg9C00YzRjyDQsNC60YDQvtCx0LDRgtC40LrQuFwiLFxuICAgICAgICAgICAgXCJkYW5jZV9qdWRnZVwiOiBcItCh0YPQtNGM0Y8g0YLQsNC90YbQsFwiLFxuICAgICAgICAgICAgXCJoZWFkX2p1ZGdlXCI6IFwi0JPQu9Cw0LLQvdGL0Lkg0YHRg9C00YzRj1wiLFxuICAgICAgICAgICAgXCJ0ZWNoX2p1ZGdlXCI6IFwi0KLQtdGF0L3QuNGH0LXRgdC60LjQuSDRgdGD0LTRjNGPXCIsXG4gICAgICAgIH0sXG4gICAgfTtcbiAgICBsZXQgcGF0aCA9IHNyYy5zcGxpdChcIi5cIik7XG4gICAgbGV0IHBocmFzZV9wdHIgPSBQSFJBU0VTO1xuICAgIHBhdGguZm9yRWFjaCgoY2h1bmspID0+IHBocmFzZV9wdHIgPSBwaHJhc2VfcHRyW2NodW5rXSk7XG4gICAgaWYgKHR5cGVvZiBwaHJhc2VfcHRyID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJVbmFibGUgdG8gZmluZCB0cmFuc2xhdGlvbiBmb3IgXCIgKyBzcmMpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGhyYXNlX3B0ciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGxldCBhcmdzID0gW107XG4gICAgICAgIGZvciAobGV0IGlkeCA9IDE7IGlkeCA8IGFyZ3VtZW50cy5sZW5ndGg7ICsraWR4KSB7XG4gICAgICAgICAgICBhcmdzLnB1c2goYXJndW1lbnRzW2lkeF0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwaHJhc2VfcHRyKC4uLmFyZ3MpO1xuICAgIH1cbiAgICByZXR1cm4gcGhyYXNlX3B0cjtcbn1cblxuZXhwb3J0IHZhciBnZXRQb3NzaWJsZVRvdXJOYW1lcyA9ICgpID0+IFtcbiAgICBcItCk0LjQvdCw0LtcIixcbiAgICBcItCi0YPRgCDCq9Cd0LDQtNC10LbQtNGLwrtcIixcbiAgICBcItCe0YLQsdC+0YDQvtGH0L3Ri9C5INGC0YPRgFwiLFxuICAgIFwiMS8yINGE0LjQvdCw0LvQsFwiLFxuICAgIFwiMS80INGE0LjQvdCw0LvQsFwiLFxuICAgIFwiMS84INGE0LjQvdCw0LvQsFwiLFxuICAgIFwiMS8xNiDRhNC40L3QsNC70LBcIixcbiAgICBcItCk0LjQvdCw0LssINGC0LXRhdC90LjQutCwINC90L7Qs1wiLFxuICAgIFwi0KTQuNC90LDQuywg0LDQutGA0L7QsdCw0YLQuNC60LBcIixcbl07XG4iLCJpbXBvcnQgeyBfIH0gZnJvbSBcImkxMG4vbG9hZGVyXCI7XG5pbXBvcnQgeyBzdG9yYWdlIH0gZnJvbSBcInNlcnZlci9zdG9yYWdlXCI7XG5pbXBvcnQgeyBzaG93RXJyb3IgfSBmcm9tIFwidWkvZGlhbG9nc1wiO1xuXG5cbmNsYXNzIEFwaUltcGwge1xuICAgIGNvbnN0cnVjdG9yKG1ldGhvZCwgZGF0YSkge1xuICAgICAgICB0aGlzLm1ldGhvZCA9IG1ldGhvZDtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICAgICAgdGhpcy5jYl9zdWNjZXNzID0gKCkgPT4ge307XG4gICAgICAgIHRoaXMuY2JfZXJyb3IgPSAobXNnLCBjb2RlLCBhcmdzKSA9PiBzaG93RXJyb3IoY29kZSA/IF8oY29kZSwgLi4uYXJncykgOiBtc2cpO1xuICAgICAgICB0aGlzLmNiX2ZhaWwgPSAoLi4uZGF0YSkgPT4gY29uc29sZS5lcnJvcihcIkFQSSBmYWlsXCIsIC4uLmRhdGEpO1xuICAgICAgICB0aGlzLmNiX2RvbmUgPSAoKSA9PiB7fTtcbiAgICAgICAgdGhpcy51cGRhdGVfZGIgPSAoKSA9PiB7fTtcbiAgICB9XG4gICAgb25Eb25lKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuY2JfZG9uZSA9IGNhbGxiYWNrO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgb25TdWNjZXNzKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuY2Jfc3VjY2VzcyA9IGNhbGxiYWNrO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgb25FcnJvcihjYWxsYmFjaykge1xuICAgICAgICB0aGlzLmNiX2Vycm9yID0gY2FsbGJhY2s7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBvbkZhaWwoY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5jYl9mYWlsID0gY2FsbGJhY2s7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBhZGRUb0RCKG1vZGVsX3R5cGUsIG1vZGVsX2lkLCBzdD1zdG9yYWdlKSB7XG4gICAgICAgIHRoaXMudXBkYXRlX2RiID0gZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgICAgICAgIHN0LmdldChtb2RlbF90eXBlKS5hZGQobW9kZWxfaWQsIHJlc3BvbnNlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2VuZCgpIHtcbiAgICAgICAgbGV0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgICB4aHIub3BlbihcIlBPU1RcIiwgXCIvYXBpXCIsIHRydWUpO1xuICAgICAgICB4aHIub25sb2FkID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jYl9kb25lKCk7XG4gICAgICAgICAgICBpZiAoeGhyLnN0YXR1cyAhPT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jYl9mYWlsKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IHJlc3BvbnNlID0gSlNPTi5wYXJzZSh4aHIucmVzcG9uc2VUZXh0KTtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVfZGIocmVzcG9uc2UucmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2Jfc3VjY2VzcyhyZXNwb25zZS5yZXNwb25zZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY2JfZXJyb3IocmVzcG9uc2UubWVzc2FnZSwgcmVzcG9uc2UuY29kZSwgcmVzcG9uc2UuYXJncyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHhoci5vbmVycm9yID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jYl9kb25lKCk7XG4gICAgICAgICAgICB0aGlzLmNiX2ZhaWwoKTtcbiAgICAgICAgfTtcbiAgICAgICAgbGV0IGRhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgZGF0YS5hcHBlbmQoXCJjbGllbnRfaWRcIiwgd2luZG93LmNsaWVudF9pZCk7XG4gICAgICAgIGRhdGEuYXBwZW5kKFwiZGF0YVwiLCBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEpKTtcbiAgICAgICAgZGF0YS5hcHBlbmQoXCJtZXRob2RcIiwgdGhpcy5tZXRob2QpO1xuICAgICAgICB4aHIuc2VuZChkYXRhKTtcbiAgICB9XG59XG5cbmV4cG9ydCB2YXIgQXBpID0gKC4uLmFyZ3MpID0+IG5ldyBBcGlJbXBsKC4uLmFyZ3MpO1xuIiwiaW1wb3J0IHsgc3RvcmFnZSB9IGZyb20gXCJzZXJ2ZXIvc3RvcmFnZVwiO1xuXG5cbmNsYXNzIE1lc3NhZ2VEaXNwYXRjaGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5jbG9zZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMgPSB7fTtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnNfY250ID0gMDtcbiAgICAgICAgdGhpcy5jb25uZWN0KCk7XG4gICAgfVxuICAgIGNvbm5lY3QoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ29ubmVjdGluZyB0byB3ZWJzb2NrZXQuLi5cIik7XG4gICAgICAgIHRoaXMud3MgPSBuZXcgU29ja0pTKFwiaHR0cDovL1wiICsgd2luZG93LmxvY2F0aW9uLmhvc3QgKyBcIi93c1wiKTtcbiAgICAgICAgdGhpcy53cy5vbm9wZW4gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ29ubmVjdGVkLlwiKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmNsb3NlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMub25NZXNzYWdlKHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZXM6IFtbXCJyZWxvYWRfZGF0YVwiLCBudWxsXV0sXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlbF91cGRhdGVzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICB9LmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMud3Mub25jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJDb25uZWN0aW9uIGNsb3NlZC5cIik7XG4gICAgICAgICAgICB0aGlzLmNsb3NlZCA9IHRydWU7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KHRoaXMuY29ubmVjdC5iaW5kKHRoaXMpLCA1MDApO1xuICAgICAgICB9LmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMud3Mub25tZXNzYWdlID0gdGhpcy5vbk1lc3NhZ2UuYmluZCh0aGlzKTtcbiAgICB9XG4gICAgb25NZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICAgICAgbGV0IGRhdGEgPSBKU09OLnBhcnNlKG1lc3NhZ2UuZGF0YSk7XG4gICAgICAgIGlmIChkYXRhW1wiY2xpZW50X2lkXCJdKSB7XG4gICAgICAgICAgICB3aW5kb3cuY2xpZW50X2lkID0gZGF0YVtcImNsaWVudF9pZFwiXTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBkYXRhLm1lc3NhZ2VzLmZvckVhY2goZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgbGV0IG1zZ190eXBlID0gZGF0YVswXTtcbiAgICAgICAgICAgIGxldCBtc2dfZGF0YSA9IGRhdGFbMV07XG4gICAgICAgICAgICBsZXQgbGlzdGVuZXJzID0gdGhpcy5saXN0ZW5lcnNbbXNnX3R5cGVdIHx8IHt9O1xuICAgICAgICAgICAgaWYgKG1zZ190eXBlID09PSBcImZvcmNlX3JlZnJlc2hcIikge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBPYmplY3Qua2V5cyh0aGlzLmxpc3RlbmVyc1ttc2dfdHlwZV0gfHwge30pLmZvckVhY2goKGtleSkgPT4gbGlzdGVuZXJzW2tleV0obXNnX2RhdGEpKTtcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgbGV0IGRhdGFfY2hhbmdlZCA9IGZhbHNlO1xuICAgICAgICBkYXRhLm1vZGVsX3VwZGF0ZXMuZm9yRWFjaCgobW9kZWxfaW5mbykgPT4ge1xuICAgICAgICAgICAgZGF0YV9jaGFuZ2VkID0gc3RvcmFnZS51cGRhdGVNb2RlbChtb2RlbF9pbmZvLm1vZGVsLCBtb2RlbF9pbmZvLmlkLCBtb2RlbF9pbmZvLmRhdGEpIHx8IGRhdGFfY2hhbmdlZDtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChkYXRhX2NoYW5nZWQpIHtcbiAgICAgICAgICAgIGxldCBsaXN0ZW5lcnMgPSB0aGlzLmxpc3RlbmVyc1tcImRiX3VwZGF0ZVwiXSB8fCB7fTtcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKGxpc3RlbmVycykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGxpc3RlbmVyc1trZXldKSB7XG4gICAgICAgICAgICAgICAgICAgIGxpc3RlbmVyc1trZXldKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0TGlzdGVuZXJJZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzX2NudCsrO1xuICAgIH1cbiAgICBhZGRMaXN0ZW5lcihtc2dfdHlwZXMsIGNhbGxiYWNrKSB7XG4gICAgICAgIGxldCBpZCA9IHRoaXMuZ2V0TGlzdGVuZXJJZCgpO1xuICAgICAgICBtc2dfdHlwZXMuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24obXNnX3R5cGUpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5saXN0ZW5lcnNbbXNnX3R5cGVdKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnNbbXNnX3R5cGVdID0ge307XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmxpc3RlbmVyc1ttc2dfdHlwZV1baWRdID0gY2FsbGJhY2s7XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICAgIHJldHVybiBpZDtcbiAgICB9XG4gICAgcmVtb3ZlTGlzdGVuZXIobGlzdGVuZXJfaWQpIHtcbiAgICAgICAgT2JqZWN0LmtleXModGhpcy5saXN0ZW5lcnMpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgICBkZWxldGUgdGhpcy5saXN0ZW5lcnNba2V5XVtsaXN0ZW5lcl9pZF07XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgfVxufVxuXG5leHBvcnQgdmFyIG1lc3NhZ2VfZGlzcGF0Y2hlciA9IG5ldyBNZXNzYWdlRGlzcGF0Y2hlcigpO1xuIiwiY2xhc3MgUmVmIHtcbiAgICBjb25zdHJ1Y3RvcihzdG9yYWdlLCBtb2RlbF9uYW1lLCBpZCkge1xuICAgICAgICB0aGlzLm1vZGVsX25hbWUgPSBtb2RlbF9uYW1lO1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuc3RvcmFnZSA9IHN0b3JhZ2U7XG4gICAgfVxuICAgIGdldCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RvcmFnZS5nZXQodGhpcy5tb2RlbF9uYW1lKS5ieV9pZCh0aGlzLmlkKTtcbiAgICB9XG59XG5cbmNsYXNzIE1vZGVsIHtcbiAgICBjb25zdHJ1Y3RvcihzdG9yYWdlLCBpZCwgbW9kZWxfc3RvcmFnZSkge1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuX19zdG9yYWdlID0gc3RvcmFnZTtcbiAgICAgICAgdGhpcy5fX2tleV90eXBlcyA9IHt9O1xuICAgICAgICB0aGlzLl9fbW9kZWxfc3RvcmFnZSA9IG1vZGVsX3N0b3JhZ2U7XG4gICAgfVxuICAgIGFkZEJhY2tSZWYoa2V5LCByZWYpIHtcbiAgICAgICAgdGhpc1trZXldID0gcmVmO1xuICAgICAgICB0aGlzLl9fa2V5X3R5cGVzW2tleV0gPSBcIl5cIjtcbiAgICB9XG4gICAgdXBkYXRlKGRhdGEsIGNyZWF0ZT10cnVlKSB7XG4gICAgICAgIGZvciAobGV0IGlkeCBpbiBkYXRhKSBpZiAoZGF0YS5oYXNPd25Qcm9wZXJ0eShpZHgpKSB7XG4gICAgICAgICAgICBpZiAoaWR4LmNoYXJBdCgwKSA9PT0gXCIqXCIgfHwgaWR4LmNoYXJBdCgwKSA9PT0gXCJeXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNyZWF0ZSAmJiB0eXBlb2YgdGhpc1tpZHguc2xpY2UoMSldID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpZHguY2hhckF0KDApID09PSBcIipcIikge1xuICAgICAgICAgICAgICAgIGxldCBrZXkgPSBpZHguc2xpY2UoMSk7XG4gICAgICAgICAgICAgICAgdGhpc1trZXldID0gW11cbiAgICAgICAgICAgICAgICBsZXQgYmFja19yZWYgPSBuZXcgUmVmKHRoaXMuX19zdG9yYWdlLCB0aGlzLl9fbW9kZWxfc3RvcmFnZS5tb2RlbF9uYW1lLCB0aGlzLmlkKTtcbiAgICAgICAgICAgICAgICBsZXQgYmFja19yZWZfa2V5ID0gZGF0YVtpZHhdLmJhY2tfcmVmO1xuICAgICAgICAgICAgICAgIGRhdGFbaWR4XS5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKG5lc3RlZF9kYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbmVzdGVkX2RhdGEuZGF0YSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fX3N0b3JhZ2UuZ2V0KG5lc3RlZF9kYXRhLm1vZGVsKS5hZGQobmVzdGVkX2RhdGEuaWQsIG5lc3RlZF9kYXRhLmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGxldCByZWYgPSBuZXcgUmVmKHRoaXMuX19zdG9yYWdlLCBuZXN0ZWRfZGF0YS5tb2RlbCwgbmVzdGVkX2RhdGEuaWQpO1xuICAgICAgICAgICAgICAgICAgICByZWYuZ2V0KCkuYWRkQmFja1JlZihiYWNrX3JlZl9rZXksIGJhY2tfcmVmKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpc1trZXldLnB1c2gocmVmKTtcbiAgICAgICAgICAgICAgICB9LmJpbmQodGhpcykpO1xuICAgICAgICAgICAgICAgIHRoaXMuX19rZXlfdHlwZXNba2V5XSA9IFwiKlwiO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChpZHguY2hhckF0KDApID09PSBcIl5cIikge1xuICAgICAgICAgICAgICAgIGxldCBrZXkgPSBpZHguc2xpY2UoMSk7XG4gICAgICAgICAgICAgICAgbGV0IG5lc3RlZF9kYXRhID0gZGF0YVtpZHhdO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbmVzdGVkX2RhdGEgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fX3N0b3JhZ2UuZ2V0KG5lc3RlZF9kYXRhLm1vZGVsKS5hZGQobmVzdGVkX2RhdGEuaWQsIG5lc3RlZF9kYXRhLmRhdGEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzW2tleV0gPSBuZXcgUmVmKHRoaXMuX19zdG9yYWdlLCBuZXN0ZWRfZGF0YS5tb2RlbCwgbmVzdGVkX2RhdGEuaWQpO1xuICAgICAgICAgICAgICAgIHRoaXMuX19rZXlfdHlwZXNba2V5XSA9IFwiXlwiO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzW2lkeF0gPSBkYXRhW2lkeF07XG4gICAgICAgICAgICAgICAgdGhpcy5fX2tleV90eXBlc1tpZHhdID0gXCJcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBzZXJpYWxpemUoc2NoZW1hKSB7XG4gICAgICAgIGxldCByZXN1bHQgPSB7fVxuICAgICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5fX2tleV90eXBlcykgaWYgKHRoaXMuX19rZXlfdHlwZXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgc3dpdGNoICh0aGlzLl9fa2V5X3R5cGVzW2tleV0pIHtcbiAgICAgICAgICAgIGNhc2UgXCIqXCI6XG4gICAgICAgICAgICAgICAgaWYgKGtleSBpbiBzY2hlbWEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB0aGlzW2tleV0ubWFwKGZ1bmN0aW9uKHJlZikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZi5nZXQoKS5zZXJpYWxpemUoc2NoZW1hW2tleV0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiXlwiOlxuICAgICAgICAgICAgICAgIGlmIChrZXkgaW4gc2NoZW1hKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gdGhpc1trZXldLmdldCgpLnNlcmlhbGl6ZShzY2hlbWFba2V5XSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXN1bHRba2V5XSA9IHRoaXNba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXN1bHQuaWQgPSB0aGlzLmlkXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5jbGFzcyBNb2RlbHNTdG9yYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihzdG9yYWdlLCBtb2RlbF9uYW1lKSB7XG4gICAgICAgIHRoaXMubW9kZWxfbmFtZSA9IG1vZGVsX25hbWU7XG4gICAgICAgIHRoaXMubW9kZWxzID0ge307XG4gICAgICAgIHRoaXMuc3RvcmFnZSA9IHN0b3JhZ2U7XG4gICAgfVxuICAgIGFkZChpZCwgZGF0YSkge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMubW9kZWxzW2lkXSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgdGhpcy5tb2RlbHNbaWRdID0gbmV3IE1vZGVsKHRoaXMuc3RvcmFnZSwgaWQsIHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubW9kZWxzW2lkXS51cGRhdGUoZGF0YSk7XG4gICAgfVxuICAgIHVwZGF0ZShpZCwgZGF0YSkge1xuICAgICAgICBpZiAodGhpcy5tb2RlbHNbaWRdKSB7XG4gICAgICAgICAgICB0aGlzLm1vZGVsc1tpZF0udXBkYXRlKGRhdGEsIGZhbHNlKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgYnlfaWQoaWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZWxzW2lkXTtcbiAgICB9XG4gICAgYWxsKCkge1xuICAgICAgICBsZXQga2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMubW9kZWxzKTtcbiAgICAgICAgcmV0dXJuIGtleXMubWFwKGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubW9kZWxzW2tleV07XG4gICAgICAgIH0uYmluZCh0aGlzKSlcbiAgICB9XG59XG5cbmNsYXNzIFN0b3JhZ2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLm1vZGVsX3N0b3JhZ2VzID0ge31cbiAgICAgICAgdGhpcy5kb21haW5zID0ge31cbiAgICB9XG4gICAgZ2V0RG9tYWluKGRvbWFpbikge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuZG9tYWluc1tkb21haW5dID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB0aGlzLmRvbWFpbnNbZG9tYWluXSA9IG5ldyBTdG9yYWdlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZG9tYWluc1tkb21haW5dO1xuICAgIH1cbiAgICBkZWxEb21haW4oZG9tYWluKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmRvbWFpbnNbZG9tYWluXTtcbiAgICB9XG4gICAgZ2V0KG1vZGVsX25hbWUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm1vZGVsX3N0b3JhZ2VzW21vZGVsX25hbWVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB0aGlzLm1vZGVsX3N0b3JhZ2VzW21vZGVsX25hbWVdID0gbmV3IE1vZGVsc1N0b3JhZ2UodGhpcywgbW9kZWxfbmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZWxfc3RvcmFnZXNbbW9kZWxfbmFtZV07XG4gICAgfVxuICAgIGRlbChtb2RlbF9uYW1lKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLm1vZGVsX3N0b3JhZ2VzW21vZGVsX25hbWVdO1xuICAgIH1cbiAgICB1cGRhdGVNb2RlbChtb2RlbF90eXBlLCBtb2RlbF9pZCwgZGF0YSkge1xuICAgICAgICBsZXQgZGF0YV9jaGFuZ2VkID0gZmFsc2U7XG4gICAgICAgIGlmICh0aGlzLm1vZGVsX3N0b3JhZ2VzW21vZGVsX3R5cGVdKSB7XG4gICAgICAgICAgICBkYXRhX2NoYW5nZWQgPSB0aGlzLmdldChtb2RlbF90eXBlKS5hZGQobW9kZWxfaWQsIGRhdGEpIHx8IGRhdGFfY2hhbmdlZDtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3Qua2V5cyh0aGlzLmRvbWFpbnMpLmZvckVhY2goKGtleSkgPT5cbiAgICAgICAgICAgIGRhdGFfY2hhbmdlZCA9IHRoaXMuZG9tYWluc1trZXldLnVwZGF0ZU1vZGVsKC4uLmFyZ3VtZW50cykgfHwgZGF0YV9jaGFuZ2VkKTtcbiAgICAgICAgLy8gcmV0dXJuIGRhdGFfY2hhbmdlZDtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufVxuXG5leHBvcnQgdmFyIHN0b3JhZ2UgPSBuZXcgU3RvcmFnZSgpXG4iLCJleHBvcnQgY2xhc3MgTG9hZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8dGFibGUgc3R5bGU9e3sgXCJoZWlnaHRcIjogXCIxMDAlXCIsIFwid2lkdGhcIjogXCIxMDAlXCIgfX0+PHRib2R5Pjx0cj5cbiAgICAgICAgICAgIDx0ZCBzdHlsZT17eyBcInRleHRBbGlnblwiOiBcImNlbnRlclwiIH19PlxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL3N0YXRpYy9pbWcvYWpheC1sb2FkZXIuZ2lmXCIgLz5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+PC90Ym9keT48L3RhYmxlPlxuICAgIH1cbn1cbiIsImltcG9ydCB7IF8gfSBmcm9tIFwiaTEwbi9sb2FkZXJcIjtcblxuXG5leHBvcnQgZnVuY3Rpb24gc2hvd0Vycm9yKG1zZykge1xuICAgIGxldCB0aXRsZSA9ICh0eXBlb2YgbXNnID09PSBcIm9iamVjdFwiKSA/IG1zZ1swXSA6IF8oXCJnbG9iYWwubWVzc2FnZXMuZXJyb3JfaGVhZGVyXCIpO1xuICAgIGxldCB0ZXh0ID0gKHR5cGVvZiBtc2cgPT09IFwib2JqZWN0XCIpID8gbXNnWzFdIDogbXNnO1xuICAgIHN3YWwoe1xuICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgIHRleHQ6IHRleHQsXG4gICAgICAgIHR5cGU6IFwiZXJyb3JcIixcbiAgICAgICAgYW5pbWF0aW9uOiBmYWxzZSxcbiAgICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNob3dDb25maXJtKG1lc3NhZ2UsIGFjdGlvbiwgY2xvc2Vfb25fY29uZmlybT1mYWxzZSkge1xuICAgIHJldHVybiBzd2FsKHtcbiAgICAgICAgdGl0bGU6IG1lc3NhZ2UsXG4gICAgICAgIGFuaW1hdGlvbjogZmFsc2UsXG4gICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsXG4gICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiBfKFwiZ2xvYmFsLmxhYmVscy55ZXNcIiksXG4gICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6IF8oXCJnbG9iYWwubGFiZWxzLm5vXCIpLFxuICAgICAgICBjbG9zZU9uQ29uZmlybTogY2xvc2Vfb25fY29uZmlybSxcbiAgICB9LCBhY3Rpb24pO1xufVxuIiwiZXhwb3J0IGNsYXNzIFByaW50YWJsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3RhdGljIGdldCBwcm9wVHlwZXMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBoZWFkZXI6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgICAgICB0aXRsZTE6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgICAgICB0aXRsZTI6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgICAgICB0aXRsZTM6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgICAgICBib2R5OiBSZWFjdC5Qcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuICAgICAgICAgICAgc2VuZERlbHRhczogUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGZldGNoUHJpbnRhYmxlRGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2JvZHkuaW5uZXJIVE1MO1xuICAgIH1cbiAgICByZW5kZXJIZWFkZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3BzLmhlYWRlciA/IDxkaXYgY2xhc3NOYW1lPVwicC1oZWFkZXJcIj57IHRoaXMucHJvcHMuaGVhZGVyIH08L2Rpdj4gOiBudWxsO1xuICAgIH1cbiAgICByZW5kZXJUaXRsZTEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3BzLnRpdGxlMSA/IDxoMT57IHRoaXMucHJvcHMudGl0bGUxIH08L2gxPiA6IG51bGw7XG4gICAgfVxuICAgIHJlbmRlclRpdGxlMigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMudGl0bGUyID8gPGgyPnsgdGhpcy5wcm9wcy50aXRsZTIgfTwvaDI+IDogbnVsbDtcbiAgICB9XG4gICAgcmVuZGVyVGl0bGUzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9wcy50aXRsZTMgPyA8aDM+eyB0aGlzLnByb3BzLnRpdGxlMyB9PC9oMz4gOiBudWxsO1xuICAgIH1cbiAgICByZW5kZXJCb2R5KCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInAtY29udGVudFwiXG4gICAgICAgICAgICAgICAgcmVmPXsgZSA9PiB0aGlzLl9ib2R5ID0gZSB9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLmJvZHkgfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJwcmludGFibGVcIj5cbiAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJIZWFkZXIoKSB9XG4gICAgICAgICAgICB7IHRoaXMucmVuZGVyVGl0bGUxKCkgfVxuICAgICAgICAgICAgeyB0aGlzLnJlbmRlclRpdGxlMigpIH1cbiAgICAgICAgICAgIHsgdGhpcy5yZW5kZXJUaXRsZTMoKSB9XG4gICAgICAgICAgICB7IHRoaXMucmVuZGVyQm9keSgpIH1cbiAgICAgICAgPC9kaXY+XG4gICAgfVxufVxuIiwiaW1wb3J0IHsgXyB9IGZyb20gXCJpMTBuL2xvYWRlclwiO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBvblRvdWNoT3JDbGljayhoYW5kbGVyKSB7XG4gICAgbGV0IGYgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIoZXZlbnQpO1xuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb25Ub3VjaFN0YXJ0OiBmLFxuICAgICAgICBvbkNsaWNrOiBmLFxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uVG91Y2hFbmRPckNsaWNrKGhhbmRsZXIsIHByZXZlbnRfZGVmYXVsdCkge1xuICAgIGxldCBfaGFuZGxlciA9ICgpID0+IHt9O1xuICAgIGxldCBkaXN0YW5jZSA9IDA7XG4gICAgbGV0IGxhdGVzdF9wb3MgPSBbMCwgMF07XG4gICAgbGV0IGZpcmUgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgcmV0dXJuIF9oYW5kbGVyKCk7XG4gICAgfVxuICAgIGxldCBkaXNjYXJkID0gKCkgPT4ge1xuICAgICAgICBfaGFuZGxlciA9ICgpID0+IHt9O1xuICAgIH1cbiAgICBsZXQgbW92ZSA9IChldmVudCkgPT4ge1xuICAgICAgICBsZXQgY3VycmVudF9wb3MgPSBbZXZlbnQudG91Y2hlc1swXS5wYWdlWCwgZXZlbnQudG91Y2hlc1swXS5wYWdlWV07XG4gICAgICAgIGxldCBzcXIgPSAoeCkgPT4geCAqIHg7XG4gICAgICAgIGRpc3RhbmNlICs9IE1hdGguc3FydChzcXIoY3VycmVudF9wb3NbMF0gLSBsYXRlc3RfcG9zWzBdKSArIHNxcihjdXJyZW50X3Bvc1sxXSAtIGxhdGVzdF9wb3NbMV0pKTtcbiAgICAgICAgbGF0ZXN0X3BvcyA9IGN1cnJlbnRfcG9zO1xuICAgICAgICBpZiAoZGlzdGFuY2UgPiAyMCkge1xuICAgICAgICAgICAgZGlzY2FyZCgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBzdGFydCA9IChldmVudCkgPT4ge1xuICAgICAgICBfaGFuZGxlciA9IGhhbmRsZXI7XG4gICAgICAgIGRpc3RhbmNlID0gMDtcbiAgICAgICAgbGF0ZXN0X3BvcyA9IFtldmVudC50b3VjaGVzWzBdLnBhZ2VYLCBldmVudC50b3VjaGVzWzBdLnBhZ2VZXTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb25Ub3VjaFN0YXJ0OiBzdGFydCxcbiAgICAgICAgb25Ub3VjaEVuZDogZmlyZSxcbiAgICAgICAgb25Ub3VjaE1vdmU6IG1vdmUsXG4gICAgICAgIG9uVG91Y2hDYW5jZWw6IGRpc2NhcmQsXG4gICAgICAgIG9uQ2xpY2s6IGhhbmRsZXIsXG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgU2xpZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgZ2V0IHByb3BUeXBlcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRvbmU6IFJlYWN0LlByb3BUeXBlcy5ib29sLFxuICAgICAgICAgICAgZG9uZVRleHQ6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgICAgICBzbGlkZVRleHQ6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgICAgICBvbkFjdGl2YXRlOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgcG9zaXRpb246IDAsXG4gICAgICAgICAgICB0b3VjaDogZmFsc2UsXG4gICAgICAgICAgICBmaW5pc2hlZDogZmFsc2UsXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMucGluID0gbnVsbDtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFVwZGF0ZShuZXh0UHJvcHMpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLmRvbmUgJiYgbmV4dFByb3BzLmRvbmUpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIGZpbmlzaGVkOiBmYWxzZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlzRnJlZSgpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLnN0YXRlLnRvdWNoICYmICF0aGlzLnByb3BzLmRvbmUgJiYgIXRoaXMuc3RhdGUuZmluaXNoZWQ7XG4gICAgfVxuICAgIGdldE91dGVyVGV4dE9wYWNpdHkoKSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlLmZpbmlzaGVkKSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgdmFsdWUgPSBNYXRoLm1pbihNYXRoLm1heCgxMDAgLSB0aGlzLnN0YXRlLnBvc2l0aW9uLCAwKSwgMTAwKTtcbiAgICAgICAgcmV0dXJuICh2YWx1ZSAvIDEwMCkudG9GaXhlZCgzKTtcbiAgICB9XG4gICAgZ2V0RWxlbWVudE9mZnNldChlbGVtZW50KSB7XG4gICAgICAgIGxldCByZXMgPSAwO1xuICAgICAgICB3aGlsZSAoZWxlbWVudCkge1xuICAgICAgICAgICAgcmVzICs9IGVsZW1lbnQub2Zmc2V0TGVmdCB8fCAwO1xuICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50Tm9kZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBnZXRUb3VjaChldmVudCkge1xuICAgICAgICBsZXQgdG91Y2ggPSBldmVudC50b3VjaGVzWzBdO1xuICAgICAgICBsZXQgcGFyZW50ID0gZXZlbnQudGFyZ2V0LnBhcmVudE5vZGU7XG4gICAgICAgIHJldHVybiB0b3VjaC5wYWdlWCAtIHRoaXMuZ2V0RWxlbWVudE9mZnNldChwYXJlbnQpO1xuICAgIH1cbiAgICBnZXRSZWxhdGl2ZVRvdWNoKGV2ZW50KSB7XG4gICAgICAgIGxldCB0b3VjaCA9IGV2ZW50LnRvdWNoZXNbMF07XG4gICAgICAgIGxldCBwYXJlbnQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgIHJldHVybiB0b3VjaC5wYWdlWCAtIHRoaXMuZ2V0RWxlbWVudE9mZnNldChwYXJlbnQpO1xuICAgIH1cbiAgICBnZXRTbGlkZXJQb3MoZXZlbnQpIHtcbiAgICAgICAgbGV0IHBvcyA9IHRoaXMuZ2V0VG91Y2goZXZlbnQpIC0gdGhpcy5waW47XG4gICAgICAgIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChwb3MsIDApLCAyMDApO1xuICAgIH1cbiAgICBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlLmZpbmlzaGVkIHx8IHRoaXMucHJvcHMuZG9uZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcG9zaXNpb246IDIwMCxcbiAgICAgICAgICAgIHRvdWNoOiBmYWxzZSxcbiAgICAgICAgICAgIGZpbmlzaGVkOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wcm9wcy5vbkFjdGl2YXRlKCk7XG4gICAgfVxuICAgIG9uVG91Y2hTdGFydChldmVudCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5maW5pc2hlZCB8fCB0aGlzLnByb3BzLmRvbmUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBpbiA9IHRoaXMuZ2V0UmVsYXRpdmVUb3VjaChldmVudCk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcG9zaXRpb246IHRoaXMuZ2V0U2xpZGVyUG9zKGV2ZW50KSxcbiAgICAgICAgICAgIHRvdWNoOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgb25Ub3VjaE1vdmUoZXZlbnQpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuZmluaXNoZWQgfHwgdGhpcy5wcm9wcy5kb25lKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBwb3NpdGlvbjogdGhpcy5nZXRTbGlkZXJQb3MoZXZlbnQpLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgb25Ub3VjaEVuZChldmVudCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5maW5pc2hlZCB8fCB0aGlzLnByb3BzLmRvbmUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zdGF0ZS5wb3NpdGlvbiA9PT0gMjAwKSB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogMCxcbiAgICAgICAgICAgICAgICBmaW5pc2hlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0b3VjaDogZmFsc2UsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25BY3RpdmF0ZSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IDAsXG4gICAgICAgICAgICAgICAgdG91Y2g6IGZhbHNlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJzbGlkZXIgbm9zZWxlY3RcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcImlubmVyXCIgKyAodGhpcy5pc0ZyZWUoKSA/IFwiIGZyZWVcIiA6IFwiXCIpfVxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IGxlZnQ6ICh0aGlzLnByb3BzLmRvbmUgfHwgdGhpcy5zdGF0ZS5maW5pc2hlZCkgPyBcIjIwMHB4XCIgOiB0aGlzLnN0YXRlLnBvc2l0aW9uICsgXCJweFwiIH19XG4gICAgICAgICAgICAgICAgb25Ub3VjaFN0YXJ0PXsgdGhpcy5vblRvdWNoU3RhcnQuYmluZCh0aGlzKSB9XG4gICAgICAgICAgICAgICAgb25Ub3VjaE1vdmU9eyB0aGlzLm9uVG91Y2hNb3ZlLmJpbmQodGhpcykgfVxuICAgICAgICAgICAgICAgIG9uVG91Y2hFbmQ9eyB0aGlzLm9uVG91Y2hFbmQuYmluZCh0aGlzKSB9XG4gICAgICAgICAgICAgICAgb25DbGljaz17IHRoaXMub25DbGljay5iaW5kKHRoaXMpIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICDihpJcbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgeyB0aGlzLnByb3BzLmRvbmVcbiAgICAgICAgICAgICAgICA/IDxzcGFuXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGNvbG9yOiBcInJnYigxMDAsMTAwLDEwMClcIiB9fVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9eyBcImRvbmUtdGV4dFwiIH1cbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5kb25lVGV4dCB9XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDogPHNwYW5cbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgY29sb3I6IFwicmdiYSgxMDAsMTAwLDEwMCxcIiArIHRoaXMuZ2V0T3V0ZXJUZXh0T3BhY2l0eSgpICsgXCIpXCIgfX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXsgXCJzbGlkZS10ZXh0XCIgKyAodGhpcy5pc0ZyZWUoKSA/IFwiIGZyZWVcIiA6IFwiXCIpIH1cbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5zbGlkZVRleHQgfVxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIH1cbiAgICAgICAgPC9kaXY+XG4gICAgfVxufVxuXG5cbmV4cG9ydCBjbGFzcyBUYWJsZXRTZWxlY3RvcklucHV0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgZ2V0IHByb3BUeXBlcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0eWxlOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICAgICAgY2hvaWNlczogUmVhY3QuUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgICAgICAgICAgcm93X3NpemU6IFJlYWN0LlByb3BUeXBlcy5udW1iZXIsXG4gICAgICAgICAgICBhY3RpdmU6IFJlYWN0LlByb3BUeXBlcy5udW1iZXIsXG4gICAgICAgICAgICBvblZhbHVlVXBkYXRlOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBnZXRCdXR0b25zQ291bnQoKSB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLnN0eWxlID09PSBcImdyaWRcIikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMucm93X3NpemU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hvaWNlcy5sZW5ndGg7XG4gICAgfVxuICAgIG9uQ2xpY2sobikge1xuICAgICAgICB0aGlzLnByb3BzLm9uVmFsdWVVcGRhdGUobik7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgICAgICB0aGlzLnByb3BzLmNob2ljZXMuZm9yRWFjaCgoZWwsIGlkeCkgPT4ge1xuICAgICAgICAgICAgbGV0IGtleSA9IGVsWzBdO1xuICAgICAgICAgICAgbGV0IHRleHQgPSBlbFsxXTtcbiAgICAgICAgICAgIGxldCBhY3RpdmVfY2xhc3NfbmFtZSA9ICh0aGlzLnByb3BzLmFjdGl2ZSA9PT0ga2V5KSA/IFwiIGFjdGl2ZVwiIDogXCJcIjtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKFxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAga2V5PXsga2V5IH1cbiAgICAgICAgICAgICAgICAgICAgey4uLm9uVG91Y2hPckNsaWNrKHRoaXMub25DbGljay5iaW5kKHRoaXMsIGtleSkpfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9eyBcInRidG4gc2NvcmUtYnRuXCIgKyBhY3RpdmVfY2xhc3NfbmFtZSB9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7dGV4dH1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj4pO1xuICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMuc3R5bGUgPT09IFwiZ3JpZFwiICYmIChpZHggKyAxKSAlIHRoaXMucHJvcHMucm93X3NpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXN1bHQucHVzaCg8YnIga2V5PXsgXCJiclwiICsgaWR4IH0gLz4pXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBsZXQgbGF5b3V0X2NsYXNzID0gKHRoaXMucHJvcHMuc3R5bGUgIT09IFwidHdvLWxpbmVzXCIpID8gXCJzZWxlY3Rvci1sYXlvdXRcIiA6IFwic2VsZWN0b3ItbGF5b3V0LTJyb3dzXCI7XG4gICAgICAgIGxldCBzZWxlY3RlZF9jbGFzcyA9IHRoaXMucHJvcHMuYWN0aXZlID09PSBudWxsID8gXCJcIiA6IFwiIHNlbGVjdGVkXCJcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPXtcInNjb3JpbmctbGF5b3V0IFwiICsgbGF5b3V0X2NsYXNzICsgc2VsZWN0ZWRfY2xhc3MgKyBcIiBuLVwiICsgdGhpcy5nZXRCdXR0b25zQ291bnQoKS50b1N0cmluZygpIH0+eyByZXN1bHQgfTwvZGl2PlxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRhYmxldEludGVnZXJTZWxlY3RJbnB1dCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3RhdGljIGdldCBwcm9wVHlwZXMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBtaW46IFJlYWN0LlByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgICAgICAgICAgIG1heDogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjcmVhdGVBcnJheShtaW4sIG1heCkge1xuICAgICAgICBsZXQgcmVzdWx0ID0gW107XG4gICAgICAgIGZvciAobGV0IGlkeCA9IG1pbjsgaWR4IDw9IG1heDsgKytpZHgpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKFtpZHgsIGlkeC50b1N0cmluZygpXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFRhYmxldFNlbGVjdG9ySW5wdXRcbiAgICAgICAgICAgICAgICBjaG9pY2VzPXsgdGhpcy5jcmVhdGVBcnJheSh0aGlzLnByb3BzLm1pbiwgdGhpcy5wcm9wcy5tYXgpIH1cbiAgICAgICAgICAgICAgICB7IC4uLnRoaXMucHJvcHMgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRhYmxldFBvaW50NVNlbGVjdElucHV0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgZ2V0IHByb3BUeXBlcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1pbjogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICAgICAgICAgICAgbWF4OiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNyZWF0ZUFycmF5KG1pbiwgbWF4KSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaWR4ID0gTWF0aC5yb3VuZCgyICogbWluKTsgaWR4IDw9IE1hdGgucm91bmQoMiAqIG1heCk7ICsraWR4KSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChbaWR4IC8gMiwgKGlkeCAlIDIpID8gKGlkeCAvIDIpLnRvRml4ZWQoMSkgOiBNYXRoLmZsb29yKGlkeCAvIDIpLnRvU3RyaW5nKCldKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8VGFibGV0U2VsZWN0b3JJbnB1dFxuICAgICAgICAgICAgICAgIGNob2ljZXM9eyB0aGlzLmNyZWF0ZUFycmF5KHRoaXMucHJvcHMubWluLCB0aGlzLnByb3BzLm1heCkgfVxuICAgICAgICAgICAgICAgIHsgLi4udGhpcy5wcm9wcyB9XG4gICAgICAgICAgICAvPlxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgVGFibGV0SW50ZWdlcklucHV0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgZ2V0IHByb3BUeXBlcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gICAgICAgICAgICBvblZhbHVlVXBkYXRlOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgICAgICAgc2VuZERlbHRhczogUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHN0YXRpYyBnZXQgZGVmYXVsdFByb3BzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc2VuZERlbHRhczogZmFsc2UsXG4gICAgICAgIH1cbiAgICB9XG4gICAgb25NaW51cygpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc2VuZERlbHRhcykge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vblZhbHVlVXBkYXRlKHtcImRlbHRhXCI6IC0xfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uVmFsdWVVcGRhdGUodGhpcy5wcm9wcy52YWx1ZSAtIDEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG9uUGx1cygpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc2VuZERlbHRhcykge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vblZhbHVlVXBkYXRlKHtcImRlbHRhXCI6IDF9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25WYWx1ZVVwZGF0ZSh0aGlzLnByb3BzLnZhbHVlICsgMSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0YWJsZXQtaW50ZWdlci1pbnB1dFwiPlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGJ0biBidG4tbWludXNcIlxuICAgICAgICAgICAgICAgICAgICB7Li4ub25Ub3VjaE9yQ2xpY2sodGhpcy5vbk1pbnVzLmJpbmQodGhpcykpfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgJm1pbnVzO1xuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidmFsdWVcIj5cbiAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLnZhbHVlIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRidG4gYnRuLXBsdXNcIlxuICAgICAgICAgICAgICAgICAgICB7Li4ub25Ub3VjaE9yQ2xpY2sodGhpcy5vblBsdXMuYmluZCh0aGlzKSl9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICArXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRhYmxldFBvaW50NUlucHV0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgZ2V0IHByb3BUeXBlcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gICAgICAgICAgICBvblZhbHVlVXBkYXRlOiBSZWFjdC5Qcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgICAgICAgc2VuZERlbHRhczogUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHN0YXRpYyBnZXQgZGVmYXVsdFByb3BzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc2VuZERlbHRhczogZmFsc2UsXG4gICAgICAgIH1cbiAgICB9XG4gICAgb25NaW51cygpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc2VuZERlbHRhcykge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vblZhbHVlVXBkYXRlKHtcImRlbHRhXCI6IC0wLjV9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25WYWx1ZVVwZGF0ZSh0aGlzLnByb3BzLnZhbHVlIC0gMC41KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvblBsdXMoKSB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLnNlbmREZWx0YXMpIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25WYWx1ZVVwZGF0ZSh7XCJkZWx0YVwiOiAwLjV9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25WYWx1ZVVwZGF0ZSh0aGlzLnByb3BzLnZhbHVlICsgMC41KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRhYmxldC1pbnRlZ2VyLWlucHV0XCI+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0YnRuIGJ0bi1taW51c1wiXG4gICAgICAgICAgICAgICAgICAgIHsuLi5vblRvdWNoT3JDbGljayh0aGlzLm9uTWludXMuYmluZCh0aGlzKSl9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAmbWludXM7XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ2YWx1ZVwiPlxuICAgICAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMudmFsdWUgfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGJ0biBidG4tcGx1c1wiXG4gICAgICAgICAgICAgICAgICAgIHsuLi5vblRvdWNoT3JDbGljayh0aGlzLm9uUGx1cy5iaW5kKHRoaXMpKX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICtcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG52YXIgc3RvcHdhdGNoZXMgPSB7fTtcblxuZXhwb3J0IGNsYXNzIFN0b3BXYXRjaCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgc3RhdGljIGdldCBwcm9wVHlwZXMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzY29yZV9pZDogUmVhY3QuUHJvcFR5cGVzLm51bWJlcixcbiAgICAgICAgICAgIG9uVmFsdWVVcGRhdGU6IFJlYWN0LlByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICAgICAgICBzZW5kRGVsdGFzOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gc3RvcHdhdGNoZXNbdGhpcy5wcm9wcy5zY29yZV9pZF0gfHwge1xuICAgICAgICAgICAgYWN0aXZlOiBmYWxzZSxcbiAgICAgICAgICAgIHZhbHVlOiAwLFxuICAgICAgICAgICAgc3RyX3ZhbHVlOiBcIjA6MDBcIixcbiAgICAgICAgICAgIGludGVydmFsOiB0aGlzLnN0YXRlLmFjdGl2ZVxuICAgICAgICAgICAgICAgID8gc2V0SW50ZXJ2YWwodGhpcy50aWNrLmJpbmQodGhpcyksIDEwKVxuICAgICAgICAgICAgICAgIDogbnVsbCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5zdGF0ZS5pbnRlcnZhbCk7XG4gICAgICAgIHN0b3B3YXRjaGVzW3RoaXMucHJvcHMuc2NvcmVfaWRdID0gdGhpcy5zdGF0ZTtcbiAgICB9XG4gICAgbm93KCkge1xuICAgICAgICByZXR1cm4gKG5ldyBEYXRlKCkpLmdldFRpbWUoKTtcbiAgICB9XG4gICAgdG9nZ2xlKCkge1xuICAgICAgICB0aGlzLnN0YXRlLmFjdGl2ZSA/IHRoaXMuc3RvcCgpIDogdGhpcy5zdGFydCgpO1xuICAgIH1cbiAgICBzdGFydCgpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3RpdmU6IHRydWUsXG4gICAgICAgICAgICBzdGFydF9hdDogdGhpcy5ub3coKSAtIHRoaXMuc3RhdGUudmFsdWUsXG4gICAgICAgICAgICBpbnRlcnZhbDogc2V0SW50ZXJ2YWwodGhpcy50aWNrLmJpbmQodGhpcyksIDEwKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0b3AoKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5zdGF0ZS5pbnRlcnZhbCk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aXZlOiBmYWxzZSxcbiAgICAgICAgICAgIHZhbHVlOiB0aGlzLnZhbHVlKCksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXNldCgpIHtcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnN0YXRlLmludGVydmFsKTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3RpdmU6IGZhbHNlLFxuICAgICAgICAgICAgdmFsdWU6IDAsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB2YWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuYWN0aXZlXG4gICAgICAgICAgICA/ICh0aGlzLm5vdygpIC0gdGhpcy5zdGF0ZS5zdGFydF9hdClcbiAgICAgICAgICAgIDogdGhpcy5zdGF0ZS52YWx1ZTtcbiAgICB9XG4gICAgdGljaygpIHtcbiAgICAgICAgdmFyIG5ld192YWx1ZSA9IHRoaXMudmFsdWUoKTtcbiAgICAgICAgaWYgKG5ld192YWx1ZSAhPT0gdGhpcy5zdGF0ZS52YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgdmFsdWU6IHRoaXMudmFsdWUoKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHBhZChudW0sIHNpemUpIHtcbiAgICAgICAgdmFyIHMgPSBcIjAwMDBcIiArIG51bS50b1N0cmluZygpO1xuICAgICAgICByZXR1cm4gcy5zdWJzdHIocy5sZW5ndGggLSBzaXplKTtcbiAgICB9XG4gICAgZ2V0U3RyVmFsdWUoKSB7XG4gICAgICAgIHZhciB2YWwgPSB0aGlzLnZhbHVlKCk7XG4gICAgICAgIHZhciBtID0gMCwgcyA9IDA7XG4gICAgICAgIHZhciByZXN1bHQgPSAnJztcbiAgICAgICAgbSA9IE1hdGguZmxvb3IodmFsIC8gKDYwICogMTAwMCkpO1xuICAgICAgICB2YWwgJT0gNjAgKiAxMDAwO1xuICAgICAgICBzID0gTWF0aC5mbG9vcih2YWwgLyAxMDAwKTtcbiAgICAgICAgcmV0dXJuIG0udG9TdHJpbmcoKSArICc6JyArIHRoaXMucGFkKHMsIDIpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInN0b3B3YXRjaFwiPlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGJ0biBidG4tcmVzZXQgaWdub3JlLXJlYWRvbmx5XCJcbiAgICAgICAgICAgICAgICAgICAgey4uLm9uVG91Y2hPckNsaWNrKHRoaXMucmVzZXQuYmluZCh0aGlzKSl9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7IF8oXCJ0YWJsZXQuYnV0dG9ucy5yZXNldF9zdG9wd2F0Y2hcIikgfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXsgXCJ0YnRuIGJ0bi10b2dnbGUgaWdub3JlLXJlYWRvbmx5XCIgKyAodGhpcy5zdGF0ZS5hY3RpdmUgPyBcIiBhY3RpdmVcIiA6IFwiXCIpIH1cbiAgICAgICAgICAgICAgICAgICAgey4uLm9uVG91Y2hPckNsaWNrKHRoaXMudG9nZ2xlLmJpbmQodGhpcykpfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnN0YXRlLmFjdGl2ZSA/IF8oXCJ0YWJsZXQuYnV0dG9ucy5zdG9wX3N0b3B3YXRjaFwiKSA6IF8oXCJ0YWJsZXQuYnV0dG9ucy5zdGFydF9zdG9wd2F0Y2hcIikgfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGltZVwiPlxuICAgICAgICAgICAgICAgICAgICB7IHRoaXMuZ2V0U3RyVmFsdWUoKSB9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbn1cbiJdfQ==
